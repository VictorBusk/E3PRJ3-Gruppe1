ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"I2CM_I2C_INT.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.I2CM_I2C_ISR,"ax",%progbits
  18              		.align	2
  19              		.global	I2CM_I2C_ISR
  20              		.code	16
  21              		.thumb_func
  22              		.type	I2CM_I2C_ISR, %function
  23              	I2CM_I2C_ISR:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\I2CM_I2C_INT.c"
   1:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** * File Name: I2CM_I2C_INT.c
   3:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** * Version 3.10
   4:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** *
   5:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** * Description:
   6:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** *  This file provides the source code to the Interrupt Service Routine for
   7:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** *  the SCB Component in I2C mode.
   8:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** *
   9:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** * Note:
  10:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** *
  11:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
  18:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** #include "I2CM_PVT.h"
  19:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** #include "I2CM_I2C_PVT.h"
  20:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** #include "cyapicallbacks.h"
  21:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
  22:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
  23:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** /*******************************************************************************
  24:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** * Function Name: I2CM_I2C_ISR
  25:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** ********************************************************************************
  26:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** *
  27:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** * Summary:
  28:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** *  Handles the Interrupt Service Routine for the SCB I2C mode.
  29:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** *
  30:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** * Parameters:
  31:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** *  None
  32:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** *
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 2


  33:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** * Return:
  34:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** *  None
  35:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** *
  36:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** *******************************************************************************/
  37:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** CY_ISR(I2CM_I2C_ISR)
  38:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** {
  26              		.loc 1 38 0
  27              		.cfi_startproc
  28 0000 10B5     		push	{r4, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 4, -8
  31              		.cfi_offset 14, -4
  32              	.LVL0:
  39:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     uint32 diffCount;
  40:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     uint32 endTransfer;
  41:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
  42:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** #ifdef I2CM_I2C_ISR_ENTRY_CALLBACK
  43:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     I2CM_I2C_ISR_EntryCallback();
  44:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** #endif /* I2CM_I2C_ISR_ENTRY_CALLBACK */
  45:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     
  46:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** #if (I2CM_I2C_CUSTOM_ADDRESS_HANDLER_CONST)
  47:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     uint32 response;
  48:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
  49:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     response = I2CM_I2C_ACK_ADDR;
  50:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** #endif /* (I2CM_I2C_CUSTOM_ADDRESS_HANDLER_CONST) */
  51:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
  52:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     endTransfer = 0u; /* Continue active transfer */
  53:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
  54:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     /* Calls customer routine if registered */
  55:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     if(NULL != I2CM_customIntrHandler)
  33              		.loc 1 55 0
  34 0002 C54B     		ldr	r3, .L80
  35 0004 1B68     		ldr	r3, [r3]
  36 0006 002B     		cmp	r3, #0
  37 0008 00D0     		beq	.L2
  56:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     {
  57:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         I2CM_customIntrHandler();
  38              		.loc 1 57 0
  39 000a 9847     		blx	r3
  40              	.LVL1:
  41              	.L2:
  58:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     }
  59:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
  60:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     if(I2CM_CHECK_INTR_I2C_EC_MASKED(I2CM_INTR_I2C_EC_WAKE_UP))
  42              		.loc 1 60 0
  43 000c C34B     		ldr	r3, .L80+4
  44 000e 1B68     		ldr	r3, [r3]
  45 0010 DB07     		lsl	r3, r3, #31
  46 0012 02D5     		bpl	.L3
  61:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     {
  62:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         /* Mask-off after wakeup */
  63:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         I2CM_SetI2CExtClkInterruptMode(I2CM_NO_INTR_SOURCES);
  47              		.loc 1 63 0
  48 0014 0022     		mov	r2, #0
  49 0016 C24B     		ldr	r3, .L80+8
  50 0018 1A60     		str	r2, [r3]
  51              	.L3:
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 3


  64:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     }
  65:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
  66:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     /* Master and Slave error tracking:
  67:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     * Add the master state check to track only the master errors when the master is active or
  68:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     * track slave errors when the slave is active or idle.
  69:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     * A special MMS case: in the address phase with misplaced Start: the master sets the LOST_ARB a
  70:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     * slave BUS_ERR. The valid event is LOST_ARB comes from the master.
  71:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     */
  72:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     if(I2CM_CHECK_I2C_FSM_MASTER)
  52              		.loc 1 72 0
  53 001a C24B     		ldr	r3, .L80+12
  54 001c 1B78     		ldrb	r3, [r3]
  55 001e 9B06     		lsl	r3, r3, #26
  56 0020 6ED5     		bpl	.L4
  73:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     {
  74:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         #if(I2CM_I2C_MASTER)
  75:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         {
  76:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             /* INTR_MASTER_I2C_BUS_ERROR:
  77:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             * A misplaced Start or Stop condition occurred on the bus: complete the transaction.
  78:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             * The interrupt is cleared in I2C_FSM_EXIT_IDLE.
  79:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             */
  80:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             if(I2CM_CHECK_INTR_MASTER_MASKED(I2CM_INTR_MASTER_I2C_BUS_ERROR))
  57              		.loc 1 80 0
  58 0022 C14B     		ldr	r3, .L80+16
  59 0024 1B68     		ldr	r3, [r3]
  60 0026 DB05     		lsl	r3, r3, #23
  61 0028 07D5     		bpl	.L68
  81:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             {
  82:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 I2CM_mstrStatus |= (uint16) (I2CM_I2C_MSTAT_ERR_XFER |
  62              		.loc 1 82 0
  63 002a C04A     		ldr	r2, .L80+20
  64 002c 1188     		ldrh	r1, [r2]
  65 002e C023     		mov	r3, #192
  66 0030 9B00     		lsl	r3, r3, #2
  67 0032 0B43     		orr	r3, r1
  68 0034 1380     		strh	r3, [r2]
  69              	.LVL2:
  83:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                                          I2CM_I2C_MSTAT_ERR_BUS_ERROR);
  84:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
  85:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 endTransfer = I2CM_I2C_CMPLT_ANY_TRANSFER;
  70              		.loc 1 85 0
  71 0036 0123     		mov	r3, #1
  72 0038 00E0     		b	.L5
  73              	.LVL3:
  74              	.L68:
  52:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
  75              		.loc 1 52 0
  76 003a 0023     		mov	r3, #0
  77              	.LVL4:
  78              	.L5:
  86:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             }
  87:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
  88:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             /* INTR_MASTER_I2C_ARB_LOST:
  89:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             * The MultiMaster lost arbitrage during transaction.
  90:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             * A Misplaced Start or Stop condition is treated as lost arbitration when the master dr
  91:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             * The interrupt source is cleared in I2C_FSM_EXIT_IDLE.
  92:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             */
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 4


  93:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             if(I2CM_CHECK_INTR_MASTER_MASKED(I2CM_INTR_MASTER_I2C_ARB_LOST))
  79              		.loc 1 93 0
  80 003c BA4A     		ldr	r2, .L80+16
  81 003e 1268     		ldr	r2, [r2]
  82 0040 D207     		lsl	r2, r2, #31
  83 0042 06D5     		bpl	.L6
  94:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             {
  95:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 I2CM_mstrStatus |= (uint16) (I2CM_I2C_MSTAT_ERR_XFER |
  84              		.loc 1 95 0
  85 0044 B94A     		ldr	r2, .L80+20
  86 0046 1188     		ldrh	r1, [r2]
  87 0048 9023     		mov	r3, #144
  88              	.LVL5:
  89 004a 9B00     		lsl	r3, r3, #2
  90 004c 0B43     		orr	r3, r1
  91 004e 1380     		strh	r3, [r2]
  92              	.LVL6:
  96:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                                          I2CM_I2C_MSTAT_ERR_ARB_LOST);
  97:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
  98:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 endTransfer = I2CM_I2C_CMPLT_ANY_TRANSFER;
  93              		.loc 1 98 0
  94 0050 0123     		mov	r3, #1
  95              	.LVL7:
  96              	.L6:
  99:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             }
 100:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 101:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             #if(I2CM_I2C_MULTI_MASTER_SLAVE)
 102:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             {
 103:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 /* I2C_MASTER_CMD_M_START_ON_IDLE:
 104:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 * MultiMaster-Slave does not generate start, because Slave was addressed.
 105:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 * Pass control to slave.
 106:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 */
 107:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 if(I2CM_CHECK_I2C_MASTER_CMD(I2CM_I2C_MASTER_CMD_M_START_ON_IDLE))
  97              		.loc 1 107 0
  98 0052 B74A     		ldr	r2, .L80+24
  99 0054 1268     		ldr	r2, [r2]
 100 0056 9207     		lsl	r2, r2, #30
 101 0058 06D5     		bpl	.L7
 108:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 {
 109:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     I2CM_mstrStatus |= (uint16) (I2CM_I2C_MSTAT_ERR_XFER |
 102              		.loc 1 109 0
 103 005a B44A     		ldr	r2, .L80+20
 104 005c 1188     		ldrh	r1, [r2]
 105 005e A023     		mov	r3, #160
 106              	.LVL8:
 107 0060 9B00     		lsl	r3, r3, #2
 108 0062 0B43     		orr	r3, r1
 109 0064 1380     		strh	r3, [r2]
 110              	.LVL9:
 110:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                                              I2CM_I2C_MSTAT_ERR_ABORT_XFER);
 111:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 112:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     endTransfer = I2CM_I2C_CMPLT_ANY_TRANSFER;
 111              		.loc 1 112 0
 112 0066 0123     		mov	r3, #1
 113              	.LVL10:
 114              	.L7:
 113:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 }
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 5


 114:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             }
 115:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             #endif
 116:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 117:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             /* The error handling common part:
 118:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             * Sets a completion flag of the master transaction and passes control to:
 119:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             *  - I2C_FSM_EXIT_IDLE - to complete transaction in case of: ARB_LOST or BUS_ERR.
 120:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             *  - I2C_FSM_IDLE      - to take chance for the slave to process incoming transaction.
 121:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             */
 122:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             if(0u != endTransfer)
 115              		.loc 1 122 0
 116 0068 002B     		cmp	r3, #0
 117 006a 6CD0     		beq	.L8
 123:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             {
 124:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 /* Set completion flags for master */
 125:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 I2CM_mstrStatus |= (uint16) I2CM_GET_I2C_MSTAT_CMPLT;
 118              		.loc 1 125 0
 119 006c AD4A     		ldr	r2, .L80+12
 120 006e 1278     		ldrb	r2, [r2]
 121 0070 D207     		lsl	r2, r2, #31
 122 0072 01D5     		bpl	.L69
 123 0074 0122     		mov	r2, #1
 124 0076 00E0     		b	.L9
 125              	.L69:
 126 0078 0222     		mov	r2, #2
 127              	.L9:
 128              		.loc 1 125 0 is_stmt 0 discriminator 4
 129 007a AC49     		ldr	r1, .L80+20
 130 007c 0888     		ldrh	r0, [r1]
 131 007e 0243     		orr	r2, r0
 132 0080 0A80     		strh	r2, [r1]
 126:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 127:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 #if(I2CM_I2C_MULTI_MASTER_SLAVE)
 128:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 {
 129:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     if(I2CM_CHECK_I2C_FSM_ADDR)
 133              		.loc 1 129 0 is_stmt 1 discriminator 4
 134 0082 A84A     		ldr	r2, .L80+12
 135 0084 1278     		ldrb	r2, [r2]
 136 0086 1207     		lsl	r2, r2, #28
 137 0088 36D5     		bpl	.L10
 130:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     {
 131:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         /* Start generation is set after another master starts accessing Slave.
 132:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         * Clean-up master and turn to slave. Set state to IDLE.
 133:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         */
 134:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         if(I2CM_CHECK_I2C_MASTER_CMD(I2CM_I2C_MASTER_CMD_M_START_ON_IDLE))
 138              		.loc 1 134 0
 139 008a A94B     		ldr	r3, .L80+24
 140              	.LVL11:
 141 008c 1B68     		ldr	r3, [r3]
 142 008e 9B07     		lsl	r3, r3, #30
 143 0090 04D5     		bpl	.L11
 135:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         {
 136:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             I2CM_I2C_MASTER_CLEAR_START;
 144              		.loc 1 136 0
 145 0092 0022     		mov	r2, #0
 146 0094 A64B     		ldr	r3, .L80+24
 147 0096 1A60     		str	r2, [r3]
 148              	.LVL12:
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 6


 137:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 138:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             endTransfer = I2CM_I2C_CMPLT_ANY_TRANSFER; /* Pass control to Slave */
 149              		.loc 1 138 0
 150 0098 0123     		mov	r3, #1
 151 009a 0CE0     		b	.L12
 152              	.LVL13:
 153              	.L11:
 139:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         }
 140:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         /* Valid arbitration lost on the address phase happens only when: master LO
 141:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         * slave BUS_ERR is cleared. Only in that case set the state to IDLE without
 142:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         */
 143:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         else if((!I2CM_CHECK_INTR_SLAVE_MASKED(I2CM_INTR_SLAVE_I2C_BUS_ERROR))
 154              		.loc 1 143 0
 155 009c A54B     		ldr	r3, .L80+28
 156 009e 1B68     		ldr	r3, [r3]
 157 00a0 DB05     		lsl	r3, r3, #23
 158 00a2 05D4     		bmi	.L70
 144:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                && I2CM_CHECK_INTR_MASTER_MASKED(I2CM_INTR_MASTER_I2C_ARB_LOST))
 159              		.loc 1 144 0
 160 00a4 A04B     		ldr	r3, .L80+16
 161 00a6 1B68     		ldr	r3, [r3]
 162 00a8 DB07     		lsl	r3, r3, #31
 163 00aa 03D4     		bmi	.L71
 145:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         {
 146:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             endTransfer = I2CM_I2C_CMPLT_ANY_TRANSFER; /* Pass control to Slave */
 147:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         }
 148:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         else
 149:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         {
 150:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             endTransfer = 0u; /* Causes I2C_FSM_EXIT_IDLE to be set below */
 164              		.loc 1 150 0
 165 00ac 0023     		mov	r3, #0
 166 00ae 02E0     		b	.L12
 167              	.L70:
 168 00b0 0023     		mov	r3, #0
 169 00b2 00E0     		b	.L12
 170              	.L71:
 146:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         }
 171              		.loc 1 146 0
 172 00b4 0123     		mov	r3, #1
 173              	.L12:
 174              	.LVL14:
 151:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         }
 152:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 153:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         if(0u != endTransfer) /* Clean-up master to proceed with slave */
 175              		.loc 1 153 0
 176 00b6 002B     		cmp	r3, #0
 177 00b8 1AD0     		beq	.L13
 154:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         {
 155:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             I2CM_CLEAR_TX_FIFO; /* Shifter keeps address, clear it */
 178              		.loc 1 155 0
 179 00ba 9F4A     		ldr	r2, .L80+32
 180 00bc 1168     		ldr	r1, [r2]
 181 00be 8020     		mov	r0, #128
 182 00c0 4002     		lsl	r0, r0, #9
 183 00c2 0143     		orr	r1, r0
 184 00c4 1160     		str	r1, [r2]
 185 00c6 1068     		ldr	r0, [r2]
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 7


 186 00c8 9C49     		ldr	r1, .L80+36
 187 00ca 0140     		and	r1, r0
 188 00cc 1160     		str	r1, [r2]
 156:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 157:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             I2CM_DISABLE_MASTER_AUTO_DATA_ACK; /* In case of reading disable autoAC
 189              		.loc 1 157 0
 190 00ce 9C49     		ldr	r1, .L80+40
 191 00d0 0868     		ldr	r0, [r1]
 192 00d2 9C4A     		ldr	r2, .L80+44
 193 00d4 0240     		and	r2, r0
 194 00d6 0A60     		str	r2, [r1]
 158:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 159:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             /* Clean-up master interrupt sources */
 160:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             I2CM_ClearMasterInterruptSource(I2CM_INTR_MASTER_ALL);
 195              		.loc 1 160 0
 196 00d8 9B49     		ldr	r1, .L80+48
 197 00da 9C4A     		ldr	r2, .L80+52
 198 00dc 1160     		str	r1, [r2]
 161:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 162:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             /* Disable data processing interrupts: they have to be cleared before *
 163:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             I2CM_SetRxInterruptMode(I2CM_NO_INTR_SOURCES);
 199              		.loc 1 163 0
 200 00de 0022     		mov	r2, #0
 201 00e0 9B49     		ldr	r1, .L80+56
 202 00e2 0A60     		str	r2, [r1]
 164:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             I2CM_SetTxInterruptMode(I2CM_NO_INTR_SOURCES);
 203              		.loc 1 164 0
 204 00e4 9B49     		ldr	r1, .L80+60
 205 00e6 0A60     		str	r2, [r1]
 165:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 166:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             I2CM_state = I2CM_I2C_FSM_IDLE;
 206              		.loc 1 166 0
 207 00e8 1021     		mov	r1, #16
 208 00ea 8E4A     		ldr	r2, .L80+12
 209 00ec 1170     		strb	r1, [r2]
 210 00ee 2AE0     		b	.L8
 211              	.L13:
 167:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         }
 168:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         else
 169:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         {
 170:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             /* Set I2C_FSM_EXIT_IDLE for BUS_ERR and ARB_LOST (that is really bus e
 171:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             I2CM_state = I2CM_I2C_FSM_EXIT_IDLE;
 212              		.loc 1 171 0
 213 00f0 0021     		mov	r1, #0
 214 00f2 8C4A     		ldr	r2, .L80+12
 215 00f4 1170     		strb	r1, [r2]
 216 00f6 26E0     		b	.L8
 217              	.L10:
 172:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         }
 173:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     }
 174:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     else
 175:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     {
 176:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         /* Set I2C_FSM_EXIT_IDLE if any other state than address */
 177:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         I2CM_state = I2CM_I2C_FSM_EXIT_IDLE;
 218              		.loc 1 177 0
 219 00f8 0021     		mov	r1, #0
 220 00fa 8A4A     		ldr	r2, .L80+12
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 8


 221 00fc 1170     		strb	r1, [r2]
 222 00fe 22E0     		b	.L8
 223              	.LVL15:
 224              	.L4:
 178:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     }
 179:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 }
 180:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 #else
 181:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 {
 182:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     /* In case of LOST*/
 183:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     I2CM_state = I2CM_I2C_FSM_EXIT_IDLE;
 184:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 }
 185:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 #endif
 186:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             }
 187:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         }
 188:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         #endif
 189:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     }
 190:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     else /* (I2CM_CHECK_I2C_FSM_SLAVE) */
 191:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     {
 192:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         #if(I2CM_I2C_SLAVE)
 193:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         {
 194:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             /* INTR_SLAVE_I2C_BUS_ERROR or I2CM_INTR_SLAVE_I2C_ARB_LOST:
 195:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             * A Misplaced Start or Stop condition occurred on the bus: set a flag
 196:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             * to notify an error condition.
 197:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             */
 198:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             if(I2CM_CHECK_INTR_SLAVE_MASKED(I2CM_INTR_SLAVE_I2C_BUS_ERROR |
 225              		.loc 1 198 0
 226 0100 8C4B     		ldr	r3, .L80+28
 227 0102 1A68     		ldr	r2, [r3]
 228 0104 0223     		mov	r3, #2
 229 0106 FF33     		add	r3, r3, #255
 230 0108 1A42     		tst	r2, r3
 231 010a 1BD0     		beq	.L72
 199:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                                         I2CM_INTR_SLAVE_I2C_ARB_LOST))
 200:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             {
 201:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 if(I2CM_CHECK_I2C_FSM_RD)
 232              		.loc 1 201 0
 233 010c 854B     		ldr	r3, .L80+12
 234 010e 1B78     		ldrb	r3, [r3]
 235 0110 DB07     		lsl	r3, r3, #31
 236 0112 09D5     		bpl	.L14
 202:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 {
 203:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     /* TX direction: master reads from slave */
 204:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     I2CM_slStatus &= (uint8) ~I2CM_I2C_SSTAT_RD_BUSY;
 237              		.loc 1 204 0
 238 0114 904B     		ldr	r3, .L80+64
 239 0116 1A78     		ldrb	r2, [r3]
 240 0118 0221     		mov	r1, #2
 241 011a 8A43     		bic	r2, r1
 242 011c 1A70     		strb	r2, [r3]
 205:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     I2CM_slStatus |= (uint8) (I2CM_I2C_SSTAT_RD_ERR |
 243              		.loc 1 205 0
 244 011e 1978     		ldrb	r1, [r3]
 245 0120 0922     		mov	r2, #9
 246 0122 0A43     		orr	r2, r1
 247 0124 1A70     		strb	r2, [r3]
 248 0126 08E0     		b	.L15
 249              	.L14:
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 9


 206:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                                           I2CM_I2C_SSTAT_RD_CMPLT);
 207:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 }
 208:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 else
 209:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 {
 210:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     /* RX direction: master writes into slave */
 211:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     I2CM_slStatus &= (uint8) ~I2CM_I2C_SSTAT_WR_BUSY;
 250              		.loc 1 211 0
 251 0128 8B4B     		ldr	r3, .L80+64
 252 012a 1A78     		ldrb	r2, [r3]
 253 012c 2021     		mov	r1, #32
 254 012e 8A43     		bic	r2, r1
 255 0130 1A70     		strb	r2, [r3]
 212:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     I2CM_slStatus |= (uint8) (I2CM_I2C_SSTAT_WR_ERR |
 256              		.loc 1 212 0
 257 0132 1978     		ldrb	r1, [r3]
 258 0134 9022     		mov	r2, #144
 259 0136 0A43     		orr	r2, r1
 260 0138 1A70     		strb	r2, [r3]
 261              	.L15:
 213:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                                           I2CM_I2C_SSTAT_WR_CMPLT);
 214:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 }
 215:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 216:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 I2CM_state = I2CM_I2C_FSM_EXIT_IDLE;
 262              		.loc 1 216 0
 263 013a 0022     		mov	r2, #0
 264 013c 794B     		ldr	r3, .L80+12
 265 013e 1A70     		strb	r2, [r3]
  52:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 266              		.loc 1 52 0
 267 0140 0023     		mov	r3, #0
 268 0142 00E0     		b	.L8
 269              	.L72:
 270 0144 0023     		mov	r3, #0
 271              	.LVL16:
 272              	.L8:
 217:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             }
 218:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         }
 219:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         #endif
 220:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     }
 221:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 222:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     /* States description:
 223:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     * Any Master operation starts from: the ADDR_RD/WR state as the master generates traffic on the
 224:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     * Any Slave operation starts from: the IDLE state as the slave always waits for actions from th
 225:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     */
 226:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 227:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     /* FSM Master */
 228:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     if(I2CM_CHECK_I2C_FSM_MASTER)
 273              		.loc 1 228 0
 274 0146 774A     		ldr	r2, .L80+12
 275 0148 1278     		ldrb	r2, [r2]
 276 014a 9206     		lsl	r2, r2, #26
 277 014c 00D4     		bmi	.LCB295
 278 014e 5AE1     		b	.L16	@long jump
 279              	.LCB295:
 229:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     {
 230:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         #if(I2CM_I2C_MASTER)
 231:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         {
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 10


 232:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             /* INTR_MASTER_I2C_STOP:
 233:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             * A Stop condition was generated by the master: the end of the transaction.
 234:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             * Set completion flags to notify the API.
 235:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             */
 236:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             if(I2CM_CHECK_INTR_MASTER_MASKED(I2CM_INTR_MASTER_I2C_STOP))
 280              		.loc 1 236 0
 281 0150 754A     		ldr	r2, .L80+16
 282 0152 1268     		ldr	r2, [r2]
 283 0154 D206     		lsl	r2, r2, #27
 284 0156 11D5     		bpl	.L17
 237:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             {
 238:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 I2CM_ClearMasterInterruptSource(I2CM_INTR_MASTER_I2C_STOP);
 285              		.loc 1 238 0
 286 0158 1022     		mov	r2, #16
 287 015a 7C4B     		ldr	r3, .L80+52
 288              	.LVL17:
 289 015c 1A60     		str	r2, [r3]
 239:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 240:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 I2CM_mstrStatus |= (uint16) I2CM_GET_I2C_MSTAT_CMPLT;
 290              		.loc 1 240 0
 291 015e 714B     		ldr	r3, .L80+12
 292 0160 1B78     		ldrb	r3, [r3]
 293 0162 DB07     		lsl	r3, r3, #31
 294 0164 01D5     		bpl	.L73
 295 0166 0123     		mov	r3, #1
 296 0168 00E0     		b	.L18
 297              	.L73:
 298 016a 0223     		mov	r3, #2
 299              	.L18:
 300              		.loc 1 240 0 is_stmt 0 discriminator 4
 301 016c 6F4A     		ldr	r2, .L80+20
 302 016e 1188     		ldrh	r1, [r2]
 303 0170 0B43     		orr	r3, r1
 304 0172 1380     		strh	r3, [r2]
 241:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 I2CM_state       = I2CM_I2C_FSM_IDLE;
 305              		.loc 1 241 0 is_stmt 1 discriminator 4
 306 0174 1022     		mov	r2, #16
 307 0176 6B4B     		ldr	r3, .L80+12
 308 0178 1A70     		strb	r2, [r3]
 309 017a 00E3     		b	.L1
 310              	.LVL18:
 311              	.L17:
 242:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             }
 243:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             else
 244:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             {
 245:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 if(I2CM_CHECK_I2C_FSM_ADDR) /* Address stage */
 312              		.loc 1 245 0
 313 017c 694A     		ldr	r2, .L80+12
 314 017e 1278     		ldrb	r2, [r2]
 315 0180 1207     		lsl	r2, r2, #28
 316 0182 20D5     		bpl	.L20
 246:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 {
 247:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     /* INTR_MASTER_I2C_NACK:
 248:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     * The master sent an address but it was NACKed by the slave. Complete transacti
 249:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     */
 250:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     if(I2CM_CHECK_INTR_MASTER_MASKED(I2CM_INTR_MASTER_I2C_NACK))
 317              		.loc 1 250 0
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 11


 318 0184 684A     		ldr	r2, .L80+16
 319 0186 1268     		ldr	r2, [r2]
 320 0188 9207     		lsl	r2, r2, #30
 321 018a 0AD5     		bpl	.L21
 251:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     {
 252:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         I2CM_ClearMasterInterruptSource(I2CM_INTR_MASTER_I2C_NACK);
 322              		.loc 1 252 0
 323 018c 0222     		mov	r2, #2
 324 018e 6F4B     		ldr	r3, .L80+52
 325              	.LVL19:
 326 0190 1A60     		str	r2, [r3]
 253:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 254:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         I2CM_mstrStatus |= (uint16) (I2CM_I2C_MSTAT_ERR_XFER |
 327              		.loc 1 254 0
 328 0192 664A     		ldr	r2, .L80+20
 329 0194 1188     		ldrh	r1, [r2]
 330 0196 8823     		mov	r3, #136
 331 0198 9B00     		lsl	r3, r3, #2
 332 019a 0B43     		orr	r3, r1
 333 019c 1380     		strh	r3, [r2]
 334              	.LVL20:
 255:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                                                  I2CM_I2C_MSTAT_ERR_ADDR_NAK);
 256:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 257:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         endTransfer = I2CM_I2C_CMPLT_ANY_TRANSFER;
 335              		.loc 1 257 0
 336 019e 0123     		mov	r3, #1
 337 01a0 11E0     		b	.L20
 338              	.LVL21:
 339              	.L21:
 258:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     }
 259:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     /* INTR_TX_UNDERFLOW. The master sent an address:
 260:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     *  - TX direction: the clock is stretched after the ACK phase, because the TX F
 261:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     *    EMPTY. The TX EMPTY cleans all the TX interrupt sources.
 262:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     *  - RX direction: the 1st byte is received, but there is no ACK permission,
 263:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     *    the clock is stretched after 1 byte is received.
 264:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     */
 265:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     else
 266:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     {
 267:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         if(I2CM_CHECK_I2C_FSM_RD) /* Reading */
 340              		.loc 1 267 0
 341 01a2 604A     		ldr	r2, .L80+12
 342 01a4 1278     		ldrb	r2, [r2]
 343 01a6 D207     		lsl	r2, r2, #31
 344 01a8 03D5     		bpl	.L22
 268:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         {
 269:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             I2CM_state = I2CM_I2C_FSM_MSTR_RD_DATA;
 345              		.loc 1 269 0
 346 01aa 2521     		mov	r1, #37
 347 01ac 5D4A     		ldr	r2, .L80+12
 348 01ae 1170     		strb	r1, [r2]
 349 01b0 09E0     		b	.L20
 350              	.L22:
 270:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         }
 271:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         else /* Writing */
 272:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         {
 273:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             I2CM_state = I2CM_I2C_FSM_MSTR_WR_DATA;
 351              		.loc 1 273 0
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 12


 352 01b2 2421     		mov	r1, #36
 353 01b4 5B4A     		ldr	r2, .L80+12
 354 01b6 1170     		strb	r1, [r2]
 274:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             if(0u != I2CM_mstrWrBufSize)
 355              		.loc 1 274 0
 356 01b8 684A     		ldr	r2, .L80+68
 357 01ba 1268     		ldr	r2, [r2]
 358 01bc 002A     		cmp	r2, #0
 359 01be 02D0     		beq	.L20
 275:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             {
 276:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 /* Enable INTR.TX_EMPTY if there is data to transmit */
 277:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 I2CM_SetTxInterruptMode(I2CM_INTR_TX_EMPTY);
 360              		.loc 1 277 0
 361 01c0 1439     		sub	r1, r1, #20
 362 01c2 644A     		ldr	r2, .L80+60
 363 01c4 1160     		str	r1, [r2]
 364              	.LVL22:
 365              	.L20:
 278:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             }
 279:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         }
 280:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     }
 281:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 }
 282:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 283:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 if(I2CM_CHECK_I2C_FSM_DATA) /* Data phase */
 366              		.loc 1 283 0
 367 01c6 574A     		ldr	r2, .L80+12
 368 01c8 1278     		ldrb	r2, [r2]
 369 01ca 5207     		lsl	r2, r2, #29
 370 01cc 00D4     		bmi	.LCB405
 371 01ce F0E0     		b	.L23	@long jump
 372              	.LCB405:
 284:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 {
 285:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     if(I2CM_CHECK_I2C_FSM_RD) /* Reading */
 373              		.loc 1 285 0
 374 01d0 544A     		ldr	r2, .L80+12
 375 01d2 1278     		ldrb	r2, [r2]
 376 01d4 D207     		lsl	r2, r2, #31
 377 01d6 49D5     		bpl	.L24
 286:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     {
 287:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         /* INTR_RX_FULL:
 288:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         * RX direction: the master received 8 bytes.
 289:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         * Get data from RX FIFO and decide whether to ACK or  NACK the following by
 290:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         */
 291:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         if(I2CM_CHECK_INTR_RX_MASKED(I2CM_INTR_RX_FULL))
 378              		.loc 1 291 0
 379 01d8 614A     		ldr	r2, .L80+72
 380 01da 1268     		ldr	r2, [r2]
 381 01dc 1207     		lsl	r2, r2, #28
 382 01de 27D5     		bpl	.L25
 292:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         {
 293:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             /* Calculate difference */
 294:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             diffCount =  I2CM_mstrRdBufSize -
 383              		.loc 1 294 0
 384 01e0 604A     		ldr	r2, .L80+76
 385 01e2 1268     		ldr	r2, [r2]
 295:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                         (I2CM_mstrRdBufIndex + I2CM_GET_RX_FIFO_ENTRIES);
 386              		.loc 1 295 0
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 13


 387 01e4 6049     		ldr	r1, .L80+80
 388 01e6 0968     		ldr	r1, [r1]
 389 01e8 0F24     		mov	r4, #15
 390 01ea 0C40     		and	r4, r1
 391 01ec 5F49     		ldr	r1, .L80+84
 392 01ee 0968     		ldr	r1, [r1]
 393 01f0 6418     		add	r4, r4, r1
 294:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                         (I2CM_mstrRdBufIndex + I2CM_GET_RX_FIFO_ENTRIES);
 394              		.loc 1 294 0
 395 01f2 141B     		sub	r4, r2, r4
 396              	.LVL23:
 296:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 297:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             /* Proceed transaction or end it when RX FIFO becomes FULL again */
 298:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             if(diffCount > I2CM_I2C_FIFO_SIZE)
 397              		.loc 1 298 0
 398 01f4 082C     		cmp	r4, #8
 399 01f6 09D8     		bhi	.L74
 299:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             {
 300:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 diffCount = I2CM_I2C_FIFO_SIZE;
 301:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             }
 302:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             else
 303:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             {
 304:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 if(0u == diffCount)
 400              		.loc 1 304 0
 401 01f8 002C     		cmp	r4, #0
 402 01fa 16D1     		bne	.L27
 305:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 {
 306:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                     I2CM_DISABLE_MASTER_AUTO_DATA_ACK;
 403              		.loc 1 306 0
 404 01fc 504A     		ldr	r2, .L80+40
 405 01fe 1168     		ldr	r1, [r2]
 406 0200 504B     		ldr	r3, .L80+44
 407              	.LVL24:
 408 0202 0B40     		and	r3, r1
 409 0204 1360     		str	r3, [r2]
 410              	.LVL25:
 307:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 308:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                     diffCount   = I2CM_I2C_FIFO_SIZE;
 309:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                     endTransfer = I2CM_I2C_CMPLT_ANY_TRANSFER;
 411              		.loc 1 309 0
 412 0206 0123     		mov	r3, #1
 308:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                     endTransfer = I2CM_I2C_CMPLT_ANY_TRANSFER;
 413              		.loc 1 308 0
 414 0208 0834     		add	r4, r4, #8
 415 020a 0EE0     		b	.L27
 416              	.LVL26:
 417              	.L74:
 300:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             }
 418              		.loc 1 300 0
 419 020c 0824     		mov	r4, #8
 420              	.LVL27:
 421 020e 0CE0     		b	.L27
 422              	.LVL28:
 423              	.L28:
 310:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 }
 311:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             }
 312:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 14


 313:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             for(; (0u != diffCount); diffCount--)
 314:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             {
 315:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 I2CM_mstrRdBufPtr[I2CM_mstrRdBufIndex] = (uint8)
 424              		.loc 1 315 0 discriminator 2
 425 0210 564A     		ldr	r2, .L80+84
 426 0212 1168     		ldr	r1, [r2]
 427 0214 5648     		ldr	r0, .L80+88
 428 0216 0068     		ldr	r0, [r0]
 429 0218 4118     		add	r1, r0, r1
 316:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                                                                         I2CM_RX_FIF
 430              		.loc 1 316 0 discriminator 2
 431 021a 5648     		ldr	r0, .L80+92
 432 021c 0068     		ldr	r0, [r0]
 315:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                                                                         I2CM_RX_FIF
 433              		.loc 1 315 0 discriminator 2
 434 021e C0B2     		uxtb	r0, r0
 435 0220 0870     		strb	r0, [r1]
 317:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 I2CM_mstrRdBufIndex++;
 436              		.loc 1 317 0 discriminator 2
 437 0222 1168     		ldr	r1, [r2]
 438 0224 0131     		add	r1, r1, #1
 439 0226 1160     		str	r1, [r2]
 313:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             {
 440              		.loc 1 313 0 discriminator 2
 441 0228 013C     		sub	r4, r4, #1
 442              	.LVL29:
 443              	.L27:
 313:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             {
 444              		.loc 1 313 0 is_stmt 0 discriminator 1
 445 022a 002C     		cmp	r4, #0
 446 022c F0D1     		bne	.L28
 447 022e 19E0     		b	.L29
 448              	.LVL30:
 449              	.L25:
 318:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             }
 319:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         }
 320:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         /* INTR_RX_NOT_EMPTY:
 321:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         * RX direction: the master received one data byte, ACK or NACK it.
 322:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         * The last byte is stored and NACKed by the master. The NACK and Stop is
 323:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         * generated by one command generate Stop.
 324:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         */
 325:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         else if(I2CM_CHECK_INTR_RX_MASKED(I2CM_INTR_RX_NOT_EMPTY))
 450              		.loc 1 325 0 is_stmt 1
 451 0230 4B4A     		ldr	r2, .L80+72
 452 0232 1268     		ldr	r2, [r2]
 453 0234 5207     		lsl	r2, r2, #29
 454 0236 15D5     		bpl	.L29
 326:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         {
 327:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             /* Put data in component buffer */
 328:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             I2CM_mstrRdBufPtr[I2CM_mstrRdBufIndex] = (uint8) I2CM_RX_FIFO_RD_REG;
 455              		.loc 1 328 0
 456 0238 4C4A     		ldr	r2, .L80+84
 457 023a 1168     		ldr	r1, [r2]
 458 023c 4C48     		ldr	r0, .L80+88
 459 023e 0068     		ldr	r0, [r0]
 460 0240 4118     		add	r1, r0, r1
 461 0242 4C48     		ldr	r0, .L80+92
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 15


 462 0244 0068     		ldr	r0, [r0]
 463 0246 C0B2     		uxtb	r0, r0
 464 0248 0870     		strb	r0, [r1]
 329:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             I2CM_mstrRdBufIndex++;
 465              		.loc 1 329 0
 466 024a 1168     		ldr	r1, [r2]
 467 024c 0131     		add	r1, r1, #1
 468 024e 1160     		str	r1, [r2]
 330:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 331:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             if(I2CM_mstrRdBufIndex < I2CM_mstrRdBufSize)
 469              		.loc 1 331 0
 470 0250 1168     		ldr	r1, [r2]
 471 0252 444A     		ldr	r2, .L80+76
 472 0254 1268     		ldr	r2, [r2]
 473 0256 9142     		cmp	r1, r2
 474 0258 03D2     		bcs	.L75
 332:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             {
 333:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 I2CM_I2C_MASTER_GENERATE_ACK;
 475              		.loc 1 333 0
 476 025a 0421     		mov	r1, #4
 477 025c 344A     		ldr	r2, .L80+24
 478 025e 1160     		str	r1, [r2]
 479 0260 00E0     		b	.L29
 480              	.L75:
 334:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             }
 335:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             else
 336:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             {
 337:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                endTransfer = I2CM_I2C_CMPLT_ANY_TRANSFER;
 481              		.loc 1 337 0
 482 0262 0123     		mov	r3, #1
 483              	.LVL31:
 484              	.L29:
 338:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             }
 339:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         }
 340:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         else
 341:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         {
 342:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             /* Do nothing */
 343:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         }
 344:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 345:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         I2CM_ClearRxInterruptSource(I2CM_INTR_RX_ALL);
 485              		.loc 1 345 0
 486 0264 4449     		ldr	r1, .L80+96
 487 0266 454A     		ldr	r2, .L80+100
 488 0268 1160     		str	r1, [r2]
 489 026a A2E0     		b	.L23
 490              	.L24:
 346:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     }
 347:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     else /* Writing */
 348:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     {
 349:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         /* INTR_MASTER_I2C_NACK :
 350:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         * The master writes data to the slave and NACK was received: not all the by
 351:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         * written to the slave from the TX FIFO. Revert the index if there is data 
 352:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         * the TX FIFO and pass control to a complete transfer.
 353:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         */
 354:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         if(I2CM_CHECK_INTR_MASTER_MASKED(I2CM_INTR_MASTER_I2C_NACK))
 491              		.loc 1 354 0
 492 026c 2E4A     		ldr	r2, .L80+16
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 16


 493 026e 1268     		ldr	r2, [r2]
 494 0270 9207     		lsl	r2, r2, #30
 495 0272 26D5     		bpl	.L30
 355:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         {
 356:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             I2CM_ClearMasterInterruptSource(I2CM_INTR_MASTER_I2C_NACK);
 496              		.loc 1 356 0
 497 0274 0222     		mov	r2, #2
 498 0276 354B     		ldr	r3, .L80+52
 499              	.LVL32:
 500 0278 1A60     		str	r2, [r3]
 357:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 358:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             /* Rollback write buffer index: NACKed byte remains in shifter */
 359:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             I2CM_mstrWrBufIndexTmp -= (I2CM_GET_TX_FIFO_ENTRIES +
 501              		.loc 1 359 0
 502 027a 414A     		ldr	r2, .L80+104
 503 027c 1368     		ldr	r3, [r2]
 504 027e 0F21     		mov	r1, #15
 505 0280 1940     		and	r1, r3
 360:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                                                    I2CM_GET_TX_FIFO_SR_VALID);
 506              		.loc 1 360 0
 507 0282 1368     		ldr	r3, [r2]
 508 0284 8022     		mov	r2, #128
 509 0286 1202     		lsl	r2, r2, #8
 510 0288 1340     		and	r3, r2
 359:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                                                    I2CM_GET_TX_FIFO_SR_VALID);
 511              		.loc 1 359 0
 512 028a 00D0     		beq	.L31
 513 028c 0123     		mov	r3, #1
 514              	.L31:
 359:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                                                    I2CM_GET_TX_FIFO_SR_VALID);
 515              		.loc 1 359 0 is_stmt 0 discriminator 4
 516 028e CB18     		add	r3, r1, r3
 517 0290 3C4A     		ldr	r2, .L80+108
 518 0292 1168     		ldr	r1, [r2]
 519 0294 CB1A     		sub	r3, r1, r3
 520 0296 1360     		str	r3, [r2]
 361:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 362:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             /* Update number of transferred bytes */
 363:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             I2CM_mstrWrBufIndex = I2CM_mstrWrBufIndexTmp;
 521              		.loc 1 363 0 is_stmt 1 discriminator 4
 522 0298 1268     		ldr	r2, [r2]
 523 029a 3B4B     		ldr	r3, .L80+112
 524 029c 1A60     		str	r2, [r3]
 364:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 365:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             I2CM_mstrStatus |= (uint16) (I2CM_I2C_MSTAT_ERR_XFER |
 525              		.loc 1 365 0 discriminator 4
 526 029e 234A     		ldr	r2, .L80+20
 527 02a0 1188     		ldrh	r1, [r2]
 528 02a2 8423     		mov	r3, #132
 529 02a4 9B00     		lsl	r3, r3, #2
 530 02a6 0B43     		orr	r3, r1
 531 02a8 1380     		strh	r3, [r2]
 366:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                                                      I2CM_I2C_MSTAT_ERR_SHORT_XFER)
 367:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 368:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             I2CM_CLEAR_TX_FIFO;
 532              		.loc 1 368 0 discriminator 4
 533 02aa 234B     		ldr	r3, .L80+32
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 17


 534 02ac 1A68     		ldr	r2, [r3]
 535 02ae 8021     		mov	r1, #128
 536 02b0 4902     		lsl	r1, r1, #9
 537 02b2 0A43     		orr	r2, r1
 538 02b4 1A60     		str	r2, [r3]
 539 02b6 1968     		ldr	r1, [r3]
 540 02b8 204A     		ldr	r2, .L80+36
 541 02ba 0A40     		and	r2, r1
 542 02bc 1A60     		str	r2, [r3]
 543              	.LVL33:
 369:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 370:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             endTransfer = I2CM_I2C_CMPLT_ANY_TRANSFER;
 544              		.loc 1 370 0 discriminator 4
 545 02be 0123     		mov	r3, #1
 546 02c0 77E0     		b	.L23
 547              	.LVL34:
 548              	.L30:
 371:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         }
 372:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         /* INTR_TX_EMPTY :
 373:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         * TX direction: the TX FIFO is EMPTY, the data from the buffer needs to be 
 374:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         * When there is no data in the component buffer, the underflow interrupt is
 375:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         * enabled to catch when all the data has been transferred.
 376:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         */
 377:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         else if(I2CM_CHECK_INTR_TX_MASKED(I2CM_INTR_TX_EMPTY))
 549              		.loc 1 377 0
 550 02c2 324A     		ldr	r2, .L80+116
 551 02c4 1268     		ldr	r2, [r2]
 552 02c6 D206     		lsl	r2, r2, #27
 553 02c8 12D4     		bmi	.L32
 554 02ca 69E0     		b	.L79
 555              	.L35:
 378:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         {
 379:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             while(I2CM_I2C_FIFO_SIZE != I2CM_GET_TX_FIFO_ENTRIES)
 380:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             {
 381:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 /* The temporary mstrWrBufIndexTmp is used because slave could NACK
 382:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 * roll-back required in this case. The mstrWrBufIndex is updated at
 383:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 */
 384:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 if(I2CM_mstrWrBufIndexTmp < I2CM_mstrWrBufSize)
 556              		.loc 1 384 0
 557 02cc 2D4A     		ldr	r2, .L80+108
 558 02ce 1168     		ldr	r1, [r2]
 559 02d0 224A     		ldr	r2, .L80+68
 560 02d2 1268     		ldr	r2, [r2]
 561 02d4 9142     		cmp	r1, r2
 562 02d6 11D2     		bcs	.L34
 385:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 {
 386:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 #if(!I2CM_CY_SCBIP_V0)
 387:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                    /* Clear INTR_TX.UNDERFLOW before putting the last byte into TX 
 388:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                     * a proper trigger at the end of transaction when INTR_TX.UNDER
 389:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                     * event. Ticket ID# 156735.
 390:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                     */
 391:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                     if(I2CM_mstrWrBufIndexTmp == (I2CM_mstrWrBufSize - 1u))
 392:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                     {
 393:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                         I2CM_ClearTxInterruptSource(I2CM_INTR_TX_UNDERFLOW);
 394:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                         I2CM_SetTxInterruptMode(I2CM_INTR_TX_UNDERFLOW);
 395:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                     }
 396:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                  #endif /* (!I2CM_CY_SCBIP_V0) */
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 18


 397:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 398:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                     /* Put data into TX FIFO */
 399:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                     I2CM_TX_FIFO_WR_REG = (uint32) I2CM_mstrWrBufPtr[I2CM_mstrWrBuf
 563              		.loc 1 399 0
 564 02d8 2A4A     		ldr	r2, .L80+108
 565 02da 1168     		ldr	r1, [r2]
 566 02dc 2C48     		ldr	r0, .L80+120
 567 02de 0068     		ldr	r0, [r0]
 568 02e0 4118     		add	r1, r0, r1
 569 02e2 0978     		ldrb	r1, [r1]
 570 02e4 C9B2     		uxtb	r1, r1
 571 02e6 2B48     		ldr	r0, .L80+124
 572 02e8 0160     		str	r1, [r0]
 400:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                     I2CM_mstrWrBufIndexTmp++;
 573              		.loc 1 400 0
 574 02ea 1168     		ldr	r1, [r2]
 575 02ec 0131     		add	r1, r1, #1
 576 02ee 1160     		str	r1, [r2]
 577              	.L32:
 379:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             {
 578              		.loc 1 379 0
 579 02f0 234A     		ldr	r2, .L80+104
 580 02f2 1268     		ldr	r2, [r2]
 581 02f4 0F21     		mov	r1, #15
 582 02f6 0A40     		and	r2, r1
 583 02f8 082A     		cmp	r2, #8
 584 02fa E7D1     		bne	.L35
 585              	.L34:
 401:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 }
 402:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 else
 403:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 {
 404:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                     break; /* No more data to put */
 405:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 }
 406:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             }
 407:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 408:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         #if(I2CM_CY_SCBIP_V0)
 409:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             if(I2CM_mstrWrBufIndexTmp == I2CM_mstrWrBufSize)
 586              		.loc 1 409 0
 587 02fc 214A     		ldr	r2, .L80+108
 588 02fe 1168     		ldr	r1, [r2]
 589 0300 164A     		ldr	r2, .L80+68
 590 0302 1268     		ldr	r2, [r2]
 591 0304 9142     		cmp	r1, r2
 592 0306 02D1     		bne	.L36
 410:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             {
 411:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 I2CM_SetTxInterruptMode(I2CM_INTR_TX_UNDERFLOW);
 593              		.loc 1 411 0
 594 0308 4021     		mov	r1, #64
 595 030a 124A     		ldr	r2, .L80+60
 596 030c 1160     		str	r1, [r2]
 597              	.L36:
 412:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             }
 413:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 414:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             I2CM_ClearTxInterruptSource(I2CM_INTR_TX_ALL);
 598              		.loc 1 414 0
 599 030e 2249     		ldr	r1, .L80+128
 600 0310 224A     		ldr	r2, .L80+132
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 19


 601 0312 1160     		str	r1, [r2]
 602 0314 4DE0     		b	.L23
 603              	.L81:
 604 0316 C046     		.align	2
 605              	.L80:
 606 0318 00000000 		.word	I2CM_customIntrHandler
 607 031c 8C0E0640 		.word	1074138764
 608 0320 880E0640 		.word	1074138760
 609 0324 00000000 		.word	I2CM_state
 610 0328 0C0F0640 		.word	1074138892
 611 032c 00000000 		.word	I2CM_mstrStatus
 612 0330 68000640 		.word	1074135144
 613 0334 4C0F0640 		.word	1074138956
 614 0338 04020640 		.word	1074135556
 615 033c FFFFFEFF 		.word	-65537
 616 0340 60000640 		.word	1074135136
 617 0344 FFFEFFFF 		.word	-257
 618 0348 17030000 		.word	791
 619 034c 000F0640 		.word	1074138880
 620 0350 C80F0640 		.word	1074139080
 621 0354 880F0640 		.word	1074139016
 622 0358 00000000 		.word	I2CM_slStatus
 623 035c 00000000 		.word	I2CM_mstrWrBufSize
 624 0360 CC0F0640 		.word	1074139084
 625 0364 00000000 		.word	I2CM_mstrRdBufSize
 626 0368 08030640 		.word	1074135816
 627 036c 00000000 		.word	I2CM_mstrRdBufIndex
 628 0370 00000000 		.word	I2CM_mstrRdBufPtr
 629 0374 40030640 		.word	1074135872
 630 0378 ED0F0000 		.word	4077
 631 037c C00F0640 		.word	1074139072
 632 0380 08020640 		.word	1074135560
 633 0384 00000000 		.word	I2CM_mstrWrBufIndexTmp
 634 0388 00000000 		.word	I2CM_mstrWrBufIndex
 635 038c 8C0F0640 		.word	1074139020
 636 0390 00000000 		.word	I2CM_mstrWrBufPtr
 637 0394 40020640 		.word	1074135616
 638 0398 F3070000 		.word	2035
 639 039c 800F0640 		.word	1074139008
 640              	.L79:
 415:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         #else
 416:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             I2CM_ClearTxInterruptSource(I2CM_INTR_TX_EMPTY);
 417:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         #endif /* (I2CM_CY_SCBIP_V0) */
 418:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         }
 419:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         /* INTR_TX_UNDERFLOW:
 420:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         * TX direction: all data from the TX FIFO was transferred to the slave.
 421:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         * The transaction needs to be completed.
 422:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         */
 423:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         else if(I2CM_CHECK_INTR_TX_MASKED(I2CM_INTR_TX_UNDERFLOW))
 641              		.loc 1 423 0
 642 03a0 BE4A     		ldr	r2, .L82
 643 03a2 1268     		ldr	r2, [r2]
 644 03a4 5206     		lsl	r2, r2, #25
 645 03a6 04D5     		bpl	.L23
 424:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         {
 425:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             /* Update number of transferred bytes */
 426:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             I2CM_mstrWrBufIndex = I2CM_mstrWrBufIndexTmp;
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 20


 646              		.loc 1 426 0
 647 03a8 BD4B     		ldr	r3, .L82+4
 648              	.LVL35:
 649 03aa 1A68     		ldr	r2, [r3]
 650 03ac BD4B     		ldr	r3, .L82+8
 651 03ae 1A60     		str	r2, [r3]
 652              	.LVL36:
 427:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 428:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             endTransfer = I2CM_I2C_CMPLT_ANY_TRANSFER;
 653              		.loc 1 428 0
 654 03b0 0123     		mov	r3, #1
 655              	.LVL37:
 656              	.L23:
 429:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         }
 430:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         else
 431:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         {
 432:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             /* Do nothing */
 433:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         }
 434:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     }
 435:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 }
 436:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 437:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 if(0u != endTransfer) /* Complete transfer */
 657              		.loc 1 437 0
 658 03b2 002B     		cmp	r3, #0
 659 03b4 00D1     		bne	.LCB700
 660 03b6 E2E1     		b	.L1	@long jump
 661              	.LCB700:
 438:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 {
 439:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     /* Clean-up master after reading: only in case of NACK */
 440:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     I2CM_DISABLE_MASTER_AUTO_DATA_ACK;
 662              		.loc 1 440 0
 663 03b8 BB4A     		ldr	r2, .L82+12
 664 03ba 1168     		ldr	r1, [r2]
 665 03bc BB4B     		ldr	r3, .L82+16
 666              	.LVL38:
 667 03be 0B40     		and	r3, r1
 668 03c0 1360     		str	r3, [r2]
 441:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 442:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     /* Disable data processing interrupts: they have to be cleared before */
 443:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     I2CM_SetRxInterruptMode(I2CM_NO_INTR_SOURCES);
 669              		.loc 1 443 0
 670 03c2 0023     		mov	r3, #0
 671 03c4 BA4A     		ldr	r2, .L82+20
 672 03c6 1360     		str	r3, [r2]
 444:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     I2CM_SetTxInterruptMode(I2CM_NO_INTR_SOURCES);
 673              		.loc 1 444 0
 674 03c8 BA4A     		ldr	r2, .L82+24
 675 03ca 1360     		str	r3, [r2]
 445:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 446:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     if(I2CM_CHECK_I2C_MODE_NO_STOP(I2CM_mstrControl))
 676              		.loc 1 446 0
 677 03cc BA4B     		ldr	r3, .L82+28
 678 03ce 1B78     		ldrb	r3, [r3]
 679 03d0 9B07     		lsl	r3, r3, #30
 680 03d2 0ED5     		bpl	.L37
 447:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     {
 448:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         /* On-going transaction is suspended: the ReStart is generated by the API r
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 21


 449:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         I2CM_mstrStatus |= (uint16) (I2CM_I2C_MSTAT_XFER_HALT |
 450:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                                                  I2CM_GET_I2C_MSTAT_CMPLT);
 681              		.loc 1 450 0
 682 03d4 B94B     		ldr	r3, .L82+32
 683 03d6 1B78     		ldrb	r3, [r3]
 449:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                                                  I2CM_GET_I2C_MSTAT_CMPLT);
 684              		.loc 1 449 0
 685 03d8 DB07     		lsl	r3, r3, #31
 686 03da 01D5     		bpl	.L76
 687 03dc 0923     		mov	r3, #9
 688 03de 00E0     		b	.L38
 689              	.L76:
 690 03e0 0A23     		mov	r3, #10
 691              	.L38:
 449:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                                                  I2CM_GET_I2C_MSTAT_CMPLT);
 692              		.loc 1 449 0 is_stmt 0 discriminator 4
 693 03e2 B74A     		ldr	r2, .L82+36
 694 03e4 1188     		ldrh	r1, [r2]
 695 03e6 0B43     		orr	r3, r1
 696 03e8 1380     		strh	r3, [r2]
 451:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 452:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         I2CM_state = I2CM_I2C_FSM_MSTR_HALT;
 697              		.loc 1 452 0 is_stmt 1 discriminator 4
 698 03ea 6022     		mov	r2, #96
 699 03ec B34B     		ldr	r3, .L82+32
 700 03ee 1A70     		strb	r2, [r3]
 701 03f0 C5E1     		b	.L1
 702              	.L37:
 453:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     }
 454:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     else
 455:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     {
 456:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         /* Complete transaction: exclude the data processing state and generate Sto
 457:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         * The completion status will be set after Stop generation.
 458:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         * A special case is read: because NACK and Stop are generated by the comman
 459:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         * Lost arbitration can occur during NACK generation when
 460:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         * the other master is still reading from the slave.
 461:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         */
 462:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         I2CM_I2C_MASTER_GENERATE_STOP;
 703              		.loc 1 462 0
 704 03f2 B44B     		ldr	r3, .L82+40
 705 03f4 1B68     		ldr	r3, [r3]
 706 03f6 9B06     		lsl	r3, r3, #26
 707 03f8 01D5     		bpl	.L77
 708 03fa 1822     		mov	r2, #24
 709 03fc 00E0     		b	.L39
 710              	.L77:
 711 03fe 1022     		mov	r2, #16
 712              	.L39:
 713              		.loc 1 462 0 is_stmt 0 discriminator 4
 714 0400 B14B     		ldr	r3, .L82+44
 715 0402 1A60     		str	r2, [r3]
 716 0404 BBE1     		b	.L1
 717              	.LVL39:
 718              	.L16:
 463:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     }
 464:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 }
 465:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             }
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 22


 466:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 467:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         } /* (I2CM_I2C_MASTER) */
 468:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         #endif
 469:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 470:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     } /* (I2CM_CHECK_I2C_FSM_MASTER) */
 471:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 472:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 473:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     /* FSM Slave */
 474:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     else if(I2CM_CHECK_I2C_FSM_SLAVE)
 719              		.loc 1 474 0 is_stmt 1
 720 0406 AD4B     		ldr	r3, .L82+32
 721              	.LVL40:
 722 0408 1B78     		ldrb	r3, [r3]
 723 040a DB06     		lsl	r3, r3, #27
 724 040c 00D4     		bmi	.LCB778
 725 040e 8FE1     		b	.L40	@long jump
 726              	.LCB778:
 475:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     {
 476:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         #if(I2CM_I2C_SLAVE)
 477:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         {
 478:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             /* INTR_SLAVE_NACK:
 479:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             * The master completes reading the slave: the appropriate flags have to be set.
 480:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             * The TX FIFO is cleared after an overflow condition is set.
 481:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             */
 482:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             if(I2CM_CHECK_INTR_SLAVE_MASKED(I2CM_INTR_SLAVE_I2C_NACK))
 727              		.loc 1 482 0
 728 0410 AE4B     		ldr	r3, .L82+48
 729 0412 1B68     		ldr	r3, [r3]
 730 0414 9B07     		lsl	r3, r3, #30
 731 0416 3ED5     		bpl	.L41
 483:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             {
 484:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 I2CM_ClearSlaveInterruptSource(I2CM_INTR_SLAVE_I2C_NACK);
 732              		.loc 1 484 0
 733 0418 0222     		mov	r2, #2
 734 041a AD4B     		ldr	r3, .L82+52
 735 041c 1A60     		str	r2, [r3]
 485:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 486:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 /* All entries that remain in TX FIFO max value is 9: 8 (FIFO) + 1 (SHIFTER) */
 487:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 diffCount = (I2CM_GET_TX_FIFO_ENTRIES + I2CM_GET_TX_FIFO_SR_VALID);
 736              		.loc 1 487 0
 737 041e AD4A     		ldr	r2, .L82+56
 738 0420 1368     		ldr	r3, [r2]
 739 0422 0F21     		mov	r1, #15
 740 0424 1940     		and	r1, r3
 741 0426 1368     		ldr	r3, [r2]
 742 0428 8022     		mov	r2, #128
 743 042a 1202     		lsl	r2, r2, #8
 744 042c 1340     		and	r3, r2
 745 042e 00D0     		beq	.L42
 746 0430 0123     		mov	r3, #1
 747              	.L42:
 748              		.loc 1 487 0 is_stmt 0 discriminator 4
 749 0432 CB18     		add	r3, r1, r3
 750              	.LVL41:
 488:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 489:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 if(I2CM_slOverFlowCount > diffCount) /* Overflow */
 751              		.loc 1 489 0 is_stmt 1 discriminator 4
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 23


 752 0434 A84A     		ldr	r2, .L82+60
 753 0436 1278     		ldrb	r2, [r2]
 754 0438 D2B2     		uxtb	r2, r2
 755 043a 9A42     		cmp	r2, r3
 756 043c 05D9     		bls	.L43
 490:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 {
 491:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     I2CM_slStatus |= (uint8) I2CM_I2C_SSTAT_RD_OVFL;
 757              		.loc 1 491 0
 758 043e A74A     		ldr	r2, .L82+64
 759 0440 1178     		ldrb	r1, [r2]
 760 0442 0423     		mov	r3, #4
 761              	.LVL42:
 762 0444 0B43     		orr	r3, r1
 763 0446 1370     		strb	r3, [r2]
 764 0448 06E0     		b	.L44
 765              	.LVL43:
 766              	.L43:
 492:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 }
 493:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 else /* No Overflow */
 494:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 {
 495:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     /* Roll-back temporary index */
 496:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     I2CM_slRdBufIndexTmp -= (diffCount - I2CM_slOverFlowCount);
 767              		.loc 1 496 0
 768 044a A34A     		ldr	r2, .L82+60
 769 044c 1278     		ldrb	r2, [r2]
 770 044e 9B1A     		sub	r3, r3, r2
 771              	.LVL44:
 772 0450 A349     		ldr	r1, .L82+68
 773 0452 0A68     		ldr	r2, [r1]
 774 0454 D31A     		sub	r3, r2, r3
 775 0456 0B60     		str	r3, [r1]
 776              	.L44:
 497:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 }
 498:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 499:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 /* Update slave of transferred bytes */
 500:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 I2CM_slRdBufIndex = I2CM_slRdBufIndexTmp;
 777              		.loc 1 500 0
 778 0458 A14B     		ldr	r3, .L82+68
 779 045a 1A68     		ldr	r2, [r3]
 780 045c A14B     		ldr	r3, .L82+72
 781 045e 1A60     		str	r2, [r3]
 501:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 502:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 /* Clean-up TX FIFO */
 503:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 I2CM_SetTxInterruptMode(I2CM_NO_INTR_SOURCES);
 782              		.loc 1 503 0
 783 0460 0023     		mov	r3, #0
 784 0462 944A     		ldr	r2, .L82+24
 785 0464 1360     		str	r3, [r2]
 504:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 I2CM_slOverFlowCount = 0u;
 786              		.loc 1 504 0
 787 0466 9C4A     		ldr	r2, .L82+60
 788 0468 1370     		strb	r3, [r2]
 505:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 I2CM_CLEAR_TX_FIFO;
 789              		.loc 1 505 0
 790 046a 9F4B     		ldr	r3, .L82+76
 791 046c 1A68     		ldr	r2, [r3]
 792 046e 8021     		mov	r1, #128
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 24


 793 0470 4902     		lsl	r1, r1, #9
 794 0472 0A43     		orr	r2, r1
 795 0474 1A60     		str	r2, [r3]
 796 0476 1968     		ldr	r1, [r3]
 797 0478 9C4A     		ldr	r2, .L82+80
 798 047a 0A40     		and	r2, r1
 799 047c 1A60     		str	r2, [r3]
 506:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 507:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 /* Complete master reading */
 508:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 I2CM_slStatus &= (uint8) ~I2CM_I2C_SSTAT_RD_BUSY;
 800              		.loc 1 508 0
 801 047e 974B     		ldr	r3, .L82+64
 802 0480 1A78     		ldrb	r2, [r3]
 803 0482 0221     		mov	r1, #2
 804 0484 8A43     		bic	r2, r1
 805 0486 1A70     		strb	r2, [r3]
 509:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 I2CM_slStatus |= (uint8)  I2CM_I2C_SSTAT_RD_CMPLT;
 806              		.loc 1 509 0
 807 0488 1978     		ldrb	r1, [r3]
 808 048a 0122     		mov	r2, #1
 809 048c 0A43     		orr	r2, r1
 810 048e 1A70     		strb	r2, [r3]
 510:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 I2CM_state     =  I2CM_I2C_FSM_IDLE;
 811              		.loc 1 510 0
 812 0490 1022     		mov	r2, #16
 813 0492 8A4B     		ldr	r3, .L82+32
 814 0494 1A70     		strb	r2, [r3]
 815              	.L41:
 511:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             }
 512:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 513:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 514:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             /* INTR_SLAVE_I2C_WRITE_STOP:
 515:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             * The master completes writing to the slave: the appropriate flags have to be set.
 516:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             * The RX FIFO contains 1-8 bytes from the previous transaction which needs to be read.
 517:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             * There is a possibility that RX FIFO contains an address, it needs to leave it there.
 518:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             */
 519:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             if(I2CM_CHECK_INTR_SLAVE_MASKED(I2CM_INTR_SLAVE_I2C_WRITE_STOP))
 816              		.loc 1 519 0
 817 0496 8D4B     		ldr	r3, .L82+48
 818 0498 1B68     		ldr	r3, [r3]
 819 049a 1B07     		lsl	r3, r3, #28
 820 049c 37D5     		bpl	.L45
 520:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             {
 521:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 I2CM_ClearSlaveInterruptSource(I2CM_INTR_SLAVE_I2C_WRITE_STOP);
 821              		.loc 1 521 0
 822 049e 0822     		mov	r2, #8
 823 04a0 8B4B     		ldr	r3, .L82+52
 824 04a2 1A60     		str	r2, [r3]
 522:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 523:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 /* Read bytes from RX FIFO when auto data ACK receive logic is enabled. Otherwise a
 524:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 * were already read from the RX FIFO except for address byte which has to stay here
 525:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 * I2C_ADDR_MATCH.
 526:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 */
 527:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 if (0u != (I2CM_I2C_CTRL_REG & I2CM_I2C_CTRL_S_READY_DATA_ACK))
 825              		.loc 1 527 0
 826 04a4 804B     		ldr	r3, .L82+12
 827 04a6 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 25


 828 04a8 9B04     		lsl	r3, r3, #18
 829 04aa 0CD4     		bmi	.L46
 830 04ac 14E0     		b	.L47
 831              	.L48:
 528:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 {
 529:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     while(0u != I2CM_GET_RX_FIFO_ENTRIES)
 530:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     {
 531:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         #if(I2CM_CHECK_I2C_ACCEPT_ADDRESS)
 532:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         {
 533:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             if((1u == I2CM_GET_RX_FIFO_ENTRIES) &&
 534:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                (I2CM_CHECK_INTR_SLAVE_MASKED(I2CM_INTR_SLAVE_I2C_ADDR_MATCH)))
 535:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             {
 536:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 break; /* Leave address in RX FIFO */
 537:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             }
 538:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         }
 539:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         #endif
 540:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 541:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         /* Put data in component buffer */
 542:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         I2CM_slWrBufPtr[I2CM_slWrBufIndex] = (uint8) I2CM_RX_FIFO_RD_REG;
 832              		.loc 1 542 0
 833 04ae 904B     		ldr	r3, .L82+84
 834 04b0 1A68     		ldr	r2, [r3]
 835 04b2 9049     		ldr	r1, .L82+88
 836 04b4 0968     		ldr	r1, [r1]
 837 04b6 8A18     		add	r2, r1, r2
 838 04b8 8F49     		ldr	r1, .L82+92
 839 04ba 0968     		ldr	r1, [r1]
 840 04bc C9B2     		uxtb	r1, r1
 841 04be 1170     		strb	r1, [r2]
 543:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         I2CM_slWrBufIndex++;
 842              		.loc 1 543 0
 843 04c0 1A68     		ldr	r2, [r3]
 844 04c2 0132     		add	r2, r2, #1
 845 04c4 1A60     		str	r2, [r3]
 846              	.L46:
 529:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     {
 847              		.loc 1 529 0
 848 04c6 8D4B     		ldr	r3, .L82+96
 849 04c8 1B68     		ldr	r3, [r3]
 850 04ca 1B07     		lsl	r3, r3, #28
 851 04cc EFD1     		bne	.L48
 544:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     }
 545:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 546:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     I2CM_DISABLE_SLAVE_AUTO_DATA;
 852              		.loc 1 546 0
 853 04ce 764A     		ldr	r2, .L82+12
 854 04d0 1168     		ldr	r1, [r2]
 855 04d2 8B4B     		ldr	r3, .L82+100
 856 04d4 0B40     		and	r3, r1
 857 04d6 1360     		str	r3, [r2]
 858              	.L47:
 547:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 }
 548:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 549:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 if(I2CM_CHECK_INTR_RX(I2CM_INTR_RX_OVERFLOW))
 859              		.loc 1 549 0
 860 04d8 8A4B     		ldr	r3, .L82+104
 861 04da 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 26


 862 04dc 9B06     		lsl	r3, r3, #26
 863 04de 04D5     		bpl	.L49
 550:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 {
 551:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     I2CM_slStatus |= (uint8) I2CM_I2C_SSTAT_WR_OVFL;
 864              		.loc 1 551 0
 865 04e0 7E4A     		ldr	r2, .L82+64
 866 04e2 1178     		ldrb	r1, [r2]
 867 04e4 4023     		mov	r3, #64
 868 04e6 0B43     		orr	r3, r1
 869 04e8 1370     		strb	r3, [r2]
 870              	.L49:
 552:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 }
 553:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 554:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 /* Clears RX interrupt sources triggered on data receiving */
 555:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 I2CM_SetRxInterruptMode(I2CM_NO_INTR_SOURCES);
 871              		.loc 1 555 0
 872 04ea 0022     		mov	r2, #0
 873 04ec 704B     		ldr	r3, .L82+20
 874 04ee 1A60     		str	r2, [r3]
 556:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 I2CM_ClearRxInterruptSource(I2CM_INTR_RX_ALL);
 875              		.loc 1 556 0
 876 04f0 854A     		ldr	r2, .L82+108
 877 04f2 844B     		ldr	r3, .L82+104
 878 04f4 1A60     		str	r2, [r3]
 557:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 558:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 /* Complete master writing */
 559:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 I2CM_slStatus &= (uint8) ~I2CM_I2C_SSTAT_WR_BUSY;
 879              		.loc 1 559 0
 880 04f6 794B     		ldr	r3, .L82+64
 881 04f8 1A78     		ldrb	r2, [r3]
 882 04fa 2021     		mov	r1, #32
 883 04fc 8A43     		bic	r2, r1
 884 04fe 1A70     		strb	r2, [r3]
 560:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 I2CM_slStatus |= (uint8)  I2CM_I2C_SSTAT_WR_CMPLT;
 885              		.loc 1 560 0
 886 0500 1978     		ldrb	r1, [r3]
 887 0502 1022     		mov	r2, #16
 888 0504 0A43     		orr	r2, r1
 889 0506 1A70     		strb	r2, [r3]
 561:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 I2CM_state     =  I2CM_I2C_FSM_IDLE;
 890              		.loc 1 561 0
 891 0508 6C4B     		ldr	r3, .L82+32
 892 050a 1022     		mov	r2, #16
 893 050c 1A70     		strb	r2, [r3]
 894              	.L45:
 562:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             }
 563:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 564:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 565:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             /* INTR_SLAVE_I2C_ADDR_MATCH or INTR_SLAVE_I2C_GENERAL:
 566:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             * The address match or general call address event starts the slave operation:
 567:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             * after leaving the TX or RX direction has to be chosen.
 568:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             * The wakeup interrupt must be cleared only after an address match is set.
 569:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             */
 570:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         #if (I2CM_I2C_CUSTOM_ADDRESS_HANDLER_CONST)
 571:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             if (I2CM_CHECK_INTR_SLAVE_MASKED(I2CM_INTR_SLAVE_I2C_ADDR_MATCH |
 572:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                                          I2CM_INTR_SLAVE_I2C_GENERAL))
 573:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         #else
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 27


 574:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             if (I2CM_CHECK_INTR_SLAVE_MASKED(I2CM_INTR_SLAVE_I2C_ADDR_MATCH))
 895              		.loc 1 574 0
 896 050e 6F4B     		ldr	r3, .L82+48
 897 0510 1B68     		ldr	r3, [r3]
 898 0512 5B06     		lsl	r3, r3, #25
 899 0514 41D5     		bpl	.L50
 575:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         #endif /* (I2CM_I2C_CUSTOM_ADDRESS_HANDLER_CONST) */
 576:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             {
 577:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 /* Clear externally clocked address match interrupt source when internally clocked 
 578:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 I2CM_ClearI2CExtClkInterruptSource(I2CM_INTR_I2C_EC_WAKE_UP);
 900              		.loc 1 578 0
 901 0516 0122     		mov	r2, #1
 902 0518 7C4B     		ldr	r3, .L82+112
 903 051a 1A60     		str	r2, [r3]
 579:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 580:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 #if (I2CM_I2C_CUSTOM_ADDRESS_HANDLER)
 581:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 {
 582:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     if (NULL != I2CM_customAddressHandler)
 583:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     {
 584:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         /* Call custom address handler */
 585:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         response = I2CM_customAddressHandler();
 586:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     }
 587:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     else
 588:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     {
 589:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         /* Read address from the RX FIFO. If there is no address underflow triggers
 590:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         * componnet does not use that source. */
 591:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         (void) I2CM_RX_FIFO_RD_REG;
 592:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         response = I2CM_I2C_ACK_ADDR;
 593:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     }
 594:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 595:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     /* Clears RX sources after address was received in the RX FIFO */
 596:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     I2CM_ClearRxInterruptSource(I2CM_INTR_RX_ALL);
 597:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 }
 598:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 #endif
 599:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 600:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             #if (I2CM_I2C_CUSTOM_ADDRESS_HANDLER_CONST)
 601:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 if (response == I2CM_I2C_NAK_ADDR)
 602:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 {
 603:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 #if (!I2CM_CY_SCBIP_V0)
 604:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     /* Disable write stop interrupt source as it triggers after address was NACKed.
 605:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     I2CM_DISABLE_INTR_SLAVE(I2CM_INTR_SLAVE_I2C_WRITE_STOP);
 606:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 #endif /* (!I2CM_CY_SCBIP_V0) */
 607:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 608:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     /* Clear address match and stop history */
 609:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     I2CM_ClearSlaveInterruptSource(I2CM_INTR_SLAVE_ALL);
 610:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 611:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     /* ACK the address byte */
 612:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     I2CM_I2C_SLAVE_GENERATE_NACK;
 613:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 }
 614:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 else
 615:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             #endif /* (I2CM_I2C_CUSTOM_ADDRESS_HANDLER_CONST) */
 616:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 {
 617:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     if(I2CM_CHECK_I2C_STATUS(I2CM_I2C_STATUS_S_READ))
 904              		.loc 1 617 0
 905 051c 694B     		ldr	r3, .L82+40
 906 051e 1B68     		ldr	r3, [r3]
 907 0520 DB06     		lsl	r3, r3, #27
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 28


 908 0522 0FD5     		bpl	.L51
 618:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     /* TX direction: master reads from slave */
 619:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     {
 620:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         I2CM_SetTxInterruptMode(I2CM_INTR_TX_EMPTY);
 909              		.loc 1 620 0
 910 0524 0F32     		add	r2, r2, #15
 911 0526 634B     		ldr	r3, .L82+24
 912 0528 1A60     		str	r2, [r3]
 621:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 622:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         /* Set temporary index to address buffer clear from API */
 623:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         I2CM_slRdBufIndexTmp = I2CM_slRdBufIndex;
 913              		.loc 1 623 0
 914 052a 6E4B     		ldr	r3, .L82+72
 915 052c 1A68     		ldr	r2, [r3]
 916 052e 6C4B     		ldr	r3, .L82+68
 917 0530 1A60     		str	r2, [r3]
 624:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 625:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         /* Start master reading */
 626:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         I2CM_slStatus |= (uint8) I2CM_I2C_SSTAT_RD_BUSY;
 918              		.loc 1 626 0
 919 0532 6A4A     		ldr	r2, .L82+64
 920 0534 1178     		ldrb	r1, [r2]
 921 0536 0223     		mov	r3, #2
 922 0538 0B43     		orr	r3, r1
 923 053a 1370     		strb	r3, [r2]
 627:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         I2CM_state     = I2CM_I2C_FSM_SL_RD;
 924              		.loc 1 627 0
 925 053c 1222     		mov	r2, #18
 926 053e 5F4B     		ldr	r3, .L82+32
 927 0540 1A70     		strb	r2, [r3]
 928 0542 24E0     		b	.L52
 929              	.L51:
 628:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     }
 629:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     else
 630:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     /* RX direction: master writes into slave */
 631:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     {
 632:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         /* Calculate available buffer size */
 633:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         diffCount = (I2CM_slWrBufSize - I2CM_slWrBufIndex);
 930              		.loc 1 633 0
 931 0544 724B     		ldr	r3, .L82+116
 932 0546 1B68     		ldr	r3, [r3]
 933 0548 694A     		ldr	r2, .L82+84
 934 054a 1268     		ldr	r2, [r2]
 935 054c 9B1A     		sub	r3, r3, r2
 936              	.LVL45:
 634:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 635:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     #if (I2CM_CY_SCBIP_V0)
 636:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         if(diffCount < I2CM_I2C_FIFO_SIZE)
 937              		.loc 1 636 0
 938 054e 072B     		cmp	r3, #7
 939 0550 03D8     		bhi	.L53
 637:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         /* Receive data: byte-by-byte */
 638:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         {
 639:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             I2CM_SetRxInterruptMode(I2CM_INTR_RX_NOT_EMPTY);
 940              		.loc 1 639 0
 941 0552 0422     		mov	r2, #4
 942 0554 564B     		ldr	r3, .L82+20
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 29


 943              	.LVL46:
 944 0556 1A60     		str	r2, [r3]
 945 0558 11E0     		b	.L54
 946              	.LVL47:
 947              	.L53:
 640:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         }
 641:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         else
 642:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         /* Receive data: into RX FIFO */
 643:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         {
 644:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             if(diffCount == I2CM_I2C_FIFO_SIZE)
 948              		.loc 1 644 0
 949 055a 082B     		cmp	r3, #8
 950 055c 06D1     		bne	.L55
 645:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             {
 646:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 /* NACK when RX FIFO become FULL */
 647:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 I2CM_ENABLE_SLAVE_AUTO_DATA;
 951              		.loc 1 647 0
 952 055e 524A     		ldr	r2, .L82+12
 953 0560 1368     		ldr	r3, [r2]
 954              	.LVL48:
 955 0562 A021     		mov	r1, #160
 956 0564 0902     		lsl	r1, r1, #8
 957 0566 0B43     		orr	r3, r1
 958 0568 1360     		str	r3, [r2]
 959 056a 08E0     		b	.L54
 960              	.LVL49:
 961              	.L55:
 648:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             }
 649:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             else
 650:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             {
 651:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 /* Stretch clock when RX FIFO becomes FULL */
 652:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 I2CM_ENABLE_SLAVE_AUTO_DATA_ACK;
 962              		.loc 1 652 0
 963 056c 4E4A     		ldr	r2, .L82+12
 964 056e 1368     		ldr	r3, [r2]
 965              	.LVL50:
 966 0570 8021     		mov	r1, #128
 967 0572 8901     		lsl	r1, r1, #6
 968 0574 0B43     		orr	r3, r1
 969 0576 1360     		str	r3, [r2]
 653:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 I2CM_SetRxInterruptMode(I2CM_INTR_RX_FULL);
 970              		.loc 1 653 0
 971 0578 0822     		mov	r2, #8
 972 057a 4D4B     		ldr	r3, .L82+20
 973 057c 1A60     		str	r2, [r3]
 974              	.L54:
 654:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             }
 655:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         }
 656:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 657:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     #else
 658:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         #if(I2CM_CHECK_I2C_ACCEPT_ADDRESS)
 659:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         {
 660:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             /* Enable RX.NOT_EMPTY interrupt source to receive byte by byte.
 661:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             * The byte by byte receive is always chosen for the case when an addres
 662:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             * in RX FIFO. Ticket ID#175559.
 663:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             */
 664:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             I2CM_SetRxInterruptMode(I2CM_INTR_RX_NOT_EMPTY);
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 30


 665:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         }
 666:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         #else
 667:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         {
 668:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             if(diffCount < I2CM_I2C_FIFO_SIZE)
 669:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             /* Receive data: byte-by-byte */
 670:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             {
 671:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 I2CM_SetRxInterruptMode(I2CM_INTR_RX_NOT_EMPTY);
 672:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             }
 673:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             else
 674:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             /* Receive data: into RX FIFO */
 675:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             {
 676:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 if(diffCount == I2CM_I2C_FIFO_SIZE)
 677:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 {
 678:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                     /* NACK when RX FIFO become FULL */
 679:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                     I2CM_ENABLE_SLAVE_AUTO_DATA;
 680:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 }
 681:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 else
 682:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 {
 683:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                     /* Stretch clock when RX FIFO becomes FULL */
 684:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                     I2CM_ENABLE_SLAVE_AUTO_DATA_ACK;
 685:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                     I2CM_SetRxInterruptMode(I2CM_INTR_RX_FULL);
 686:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                                 }
 687:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             }
 688:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         }
 689:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         #endif
 690:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     #endif /* (I2CM_CY_SCBIP_V0) */
 691:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 692:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         /* Start master reading */
 693:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         I2CM_slStatus |= (uint8) I2CM_I2C_SSTAT_WR_BUSY;
 975              		.loc 1 693 0
 976 057e 574A     		ldr	r2, .L82+64
 977 0580 1178     		ldrb	r1, [r2]
 978 0582 2023     		mov	r3, #32
 979 0584 0B43     		orr	r3, r1
 980 0586 1370     		strb	r3, [r2]
 694:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         I2CM_state     = I2CM_I2C_FSM_SL_WR;
 981              		.loc 1 694 0
 982 0588 1122     		mov	r2, #17
 983 058a 4C4B     		ldr	r3, .L82+32
 984 058c 1A70     		strb	r2, [r3]
 985              	.L52:
 695:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     }
 696:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 697:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     /* Clear address match and stop history */
 698:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     I2CM_ClearSlaveInterruptSource(I2CM_INTR_SLAVE_ALL);
 986              		.loc 1 698 0
 987 058e 614A     		ldr	r2, .L82+120
 988 0590 4F4B     		ldr	r3, .L82+52
 989 0592 1A60     		str	r2, [r3]
 699:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 700:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 #if (!I2CM_CY_SCBIP_V0)
 701:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     /* Enable write stop interrupt source as it triggers after address was NACKed. 
 702:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     I2CM_ENABLE_INTR_SLAVE(I2CM_INTR_SLAVE_I2C_WRITE_STOP);
 703:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 #endif /* (!I2CM_CY_SCBIP_V0) */
 704:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 705:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     /* ACK the address byte */
 706:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     I2CM_I2C_SLAVE_GENERATE_ACK;
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 31


 990              		.loc 1 706 0
 991 0594 0122     		mov	r2, #1
 992 0596 604B     		ldr	r3, .L82+124
 993 0598 1A60     		str	r2, [r3]
 994              	.L50:
 707:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 }
 708:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             }
 709:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 710:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             /* I2CM_INTR_RX_FULL:
 711:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             * Get data from the RX FIFO and decide whether to ACK or NACK the following bytes
 712:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             */
 713:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             if(I2CM_CHECK_INTR_RX_MASKED(I2CM_INTR_RX_FULL))
 995              		.loc 1 713 0
 996 059a 604B     		ldr	r3, .L82+128
 997 059c 1B68     		ldr	r3, [r3]
 998 059e 1B07     		lsl	r3, r3, #28
 999 05a0 2AD5     		bpl	.L56
 714:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             {
 715:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 /* Calculate available buffer size to take into account that RX FIFO is FULL */
 716:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 diffCount =  I2CM_slWrBufSize -
 1000              		.loc 1 716 0
 1001 05a2 5B4B     		ldr	r3, .L82+116
 1002 05a4 1B68     		ldr	r3, [r3]
 1003 05a6 524A     		ldr	r2, .L82+84
 1004 05a8 1068     		ldr	r0, [r2]
 1005 05aa 181A     		sub	r0, r3, r0
 1006 05ac 0838     		sub	r0, r0, #8
 1007              	.LVL51:
 717:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             (I2CM_slWrBufIndex + I2CM_I2C_FIFO_SIZE);
 718:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 719:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 if(diffCount > I2CM_I2C_FIFO_SIZE) /* Proceed transaction */
 1008              		.loc 1 719 0
 1009 05ae 0828     		cmp	r0, #8
 1010 05b0 02D9     		bls	.L78
 720:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 {
 721:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     diffCount   = I2CM_I2C_FIFO_SIZE;
 722:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     endTransfer = 0u;  /* Continue active transfer */
 1011              		.loc 1 722 0
 1012 05b2 0024     		mov	r4, #0
 721:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     endTransfer = 0u;  /* Continue active transfer */
 1013              		.loc 1 721 0
 1014 05b4 0820     		mov	r0, #8
 1015              	.LVL52:
 1016 05b6 0EE0     		b	.L58
 1017              	.LVL53:
 1018              	.L78:
 723:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 }
 724:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 else /* End when FIFO becomes FULL again */
 725:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 {
 726:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     endTransfer = I2CM_I2C_CMPLT_ANY_TRANSFER;
 1019              		.loc 1 726 0
 1020 05b8 0124     		mov	r4, #1
 1021 05ba 0CE0     		b	.L58
 1022              	.LVL54:
 1023              	.L59:
 727:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 }
 728:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 32


 729:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 for(; (0u != diffCount); diffCount--)
 730:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 {
 731:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     /* Put data in component buffer */
 732:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     I2CM_slWrBufPtr[I2CM_slWrBufIndex] = (uint8) I2CM_RX_FIFO_RD_REG;
 1024              		.loc 1 732 0 discriminator 2
 1025 05bc 4C4B     		ldr	r3, .L82+84
 1026 05be 1A68     		ldr	r2, [r3]
 1027 05c0 4C49     		ldr	r1, .L82+88
 1028 05c2 0968     		ldr	r1, [r1]
 1029 05c4 8A18     		add	r2, r1, r2
 1030 05c6 4C49     		ldr	r1, .L82+92
 1031 05c8 0968     		ldr	r1, [r1]
 1032 05ca C9B2     		uxtb	r1, r1
 1033 05cc 1170     		strb	r1, [r2]
 733:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     I2CM_slWrBufIndex++;
 1034              		.loc 1 733 0 discriminator 2
 1035 05ce 1A68     		ldr	r2, [r3]
 1036 05d0 0132     		add	r2, r2, #1
 1037 05d2 1A60     		str	r2, [r3]
 729:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 {
 1038              		.loc 1 729 0 discriminator 2
 1039 05d4 0138     		sub	r0, r0, #1
 1040              	.LVL55:
 1041              	.L58:
 729:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 {
 1042              		.loc 1 729 0 is_stmt 0 discriminator 1
 1043 05d6 0028     		cmp	r0, #0
 1044 05d8 F0D1     		bne	.L59
 734:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 }
 735:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 736:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 if(0u != endTransfer) /* End transfer sending NACK */
 1045              		.loc 1 736 0 is_stmt 1
 1046 05da 002C     		cmp	r4, #0
 1047 05dc 08D0     		beq	.L60
 737:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 {
 738:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     I2CM_ENABLE_SLAVE_AUTO_DATA_NACK;
 1048              		.loc 1 738 0
 1049 05de 324A     		ldr	r2, .L82+12
 1050 05e0 1368     		ldr	r3, [r2]
 1051 05e2 8021     		mov	r1, #128
 1052 05e4 0902     		lsl	r1, r1, #8
 1053 05e6 0B43     		orr	r3, r1
 1054 05e8 1360     		str	r3, [r2]
 739:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 740:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     /* INTR_RX_FULL triggers earlier than INTR_SLAVE_I2C_STOP:
 741:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     * disable all RX interrupt sources.
 742:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     */
 743:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     I2CM_SetRxInterruptMode(I2CM_NO_INTR_SOURCES);
 1055              		.loc 1 743 0
 1056 05ea 0022     		mov	r2, #0
 1057 05ec 304B     		ldr	r3, .L82+20
 1058 05ee 1A60     		str	r2, [r3]
 1059              	.L60:
 744:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 }
 745:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 746:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 I2CM_ClearRxInterruptSource(I2CM_INTR_RX_FULL);
 1060              		.loc 1 746 0
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 33


 1061 05f0 0822     		mov	r2, #8
 1062 05f2 444B     		ldr	r3, .L82+104
 1063 05f4 1A60     		str	r2, [r3]
 1064 05f6 23E0     		b	.L61
 1065              	.LVL56:
 1066              	.L56:
 747:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             }
 748:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             /* I2CM_INTR_RX_NOT_EMPTY:
 749:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             * The buffer size is less than 8: it requires processing in byte-by-byte mode.
 750:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             */
 751:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             else if(I2CM_CHECK_INTR_RX_MASKED(I2CM_INTR_RX_NOT_EMPTY))
 1067              		.loc 1 751 0
 1068 05f8 484B     		ldr	r3, .L82+128
 1069 05fa 1B68     		ldr	r3, [r3]
 1070 05fc 5B07     		lsl	r3, r3, #29
 1071 05fe 1FD5     		bpl	.L61
 752:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             {
 753:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 diffCount = I2CM_RX_FIFO_RD_REG;
 1072              		.loc 1 753 0
 1073 0600 3D4B     		ldr	r3, .L82+92
 1074 0602 1B68     		ldr	r3, [r3]
 1075              	.LVL57:
 754:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 755:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 if(I2CM_slWrBufIndex < I2CM_slWrBufSize)
 1076              		.loc 1 755 0
 1077 0604 3A4A     		ldr	r2, .L82+84
 1078 0606 1168     		ldr	r1, [r2]
 1079 0608 414A     		ldr	r2, .L82+116
 1080 060a 1268     		ldr	r2, [r2]
 1081 060c 9142     		cmp	r1, r2
 1082 060e 0DD2     		bcs	.L62
 756:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 {
 757:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     I2CM_I2C_SLAVE_GENERATE_ACK;
 1083              		.loc 1 757 0
 1084 0610 0121     		mov	r1, #1
 1085 0612 414A     		ldr	r2, .L82+124
 1086 0614 1160     		str	r1, [r2]
 758:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 759:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     /* Put data into component buffer */
 760:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     I2CM_slWrBufPtr[I2CM_slWrBufIndex] = (uint8) diffCount;
 1087              		.loc 1 760 0
 1088 0616 364A     		ldr	r2, .L82+84
 1089 0618 1168     		ldr	r1, [r2]
 1090 061a 3648     		ldr	r0, .L82+88
 1091 061c 0068     		ldr	r0, [r0]
 1092 061e 4118     		add	r1, r0, r1
 1093 0620 DBB2     		uxtb	r3, r3
 1094              	.LVL58:
 1095 0622 0B70     		strb	r3, [r1]
 761:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     I2CM_slWrBufIndex++;
 1096              		.loc 1 761 0
 1097 0624 1368     		ldr	r3, [r2]
 1098 0626 0133     		add	r3, r3, #1
 1099 0628 1360     		str	r3, [r2]
 1100 062a 06E0     		b	.L63
 1101              	.LVL59:
 1102              	.L62:
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 34


 762:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 }
 763:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 else /* Overflow: there is no space in write buffer */
 764:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 {
 765:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     I2CM_I2C_SLAVE_GENERATE_NACK;
 1103              		.loc 1 765 0
 1104 062c FFF7FEFF 		bl	I2CM_I2CSlaveNackGeneration
 1105              	.LVL60:
 766:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 767:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     I2CM_slStatus |= (uint8) I2CM_I2C_SSTAT_WR_OVFL;
 1106              		.loc 1 767 0
 1107 0630 2A4A     		ldr	r2, .L82+64
 1108 0632 1178     		ldrb	r1, [r2]
 1109 0634 4023     		mov	r3, #64
 1110 0636 0B43     		orr	r3, r1
 1111 0638 1370     		strb	r3, [r2]
 1112              	.L63:
 768:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 }
 769:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 770:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 I2CM_ClearRxInterruptSource(I2CM_INTR_RX_NOT_EMPTY);
 1113              		.loc 1 770 0
 1114 063a 0422     		mov	r2, #4
 1115 063c 314B     		ldr	r3, .L82+104
 1116 063e 1A60     		str	r2, [r3]
 1117              	.L61:
 771:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             }
 772:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             else
 773:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             {
 774:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 /* Does nothing */
 775:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             }
 776:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 777:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 778:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             /* I2CM_INTR_TX_EMPTY:
 779:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             * The master reads the slave: provide data to read or 0xFF in the case of the end of th
 780:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             * The overflow condition must be captured, but not set until the end of transaction.
 781:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             * There is a possibility of a false overflow due to TX FIFO utilization.
 782:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             */
 783:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             if(I2CM_CHECK_INTR_TX_MASKED(I2CM_INTR_TX_EMPTY))
 1118              		.loc 1 783 0
 1119 0640 164B     		ldr	r3, .L82
 1120 0642 1B68     		ldr	r3, [r3]
 1121 0644 DB06     		lsl	r3, r3, #27
 1122 0646 1FD4     		bmi	.L64
 1123 0648 99E0     		b	.L1
 1124              	.L67:
 784:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             {
 785:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 while(I2CM_I2C_FIFO_SIZE != I2CM_GET_TX_FIFO_ENTRIES)
 786:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 {
 787:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     /* Temporary slRdBufIndexTmp is used because the master can NACK the byte and
 788:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     * index roll-back is required in this case. The slRdBufIndex is updated at the 
 789:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     * of the read transfer.
 790:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     */
 791:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     if(I2CM_slRdBufIndexTmp < I2CM_slRdBufSize)
 1125              		.loc 1 791 0
 1126 064a 254B     		ldr	r3, .L82+68
 1127 064c 1A68     		ldr	r2, [r3]
 1128 064e 344B     		ldr	r3, .L82+132
 1129 0650 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 35


 1130 0652 9A42     		cmp	r2, r3
 1131 0654 0CD2     		bcs	.L65
 792:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     /* Data from buffer */
 793:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     {
 794:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         I2CM_TX_FIFO_WR_REG = (uint32) I2CM_slRdBufPtr[I2CM_slRdBufIndexTmp];
 1132              		.loc 1 794 0
 1133 0656 224B     		ldr	r3, .L82+68
 1134 0658 1A68     		ldr	r2, [r3]
 1135 065a 3249     		ldr	r1, .L82+136
 1136 065c 0968     		ldr	r1, [r1]
 1137 065e 8A18     		add	r2, r1, r2
 1138 0660 1278     		ldrb	r2, [r2]
 1139 0662 D2B2     		uxtb	r2, r2
 1140 0664 3049     		ldr	r1, .L82+140
 1141 0666 0A60     		str	r2, [r1]
 795:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         I2CM_slRdBufIndexTmp++;
 1142              		.loc 1 795 0
 1143 0668 1A68     		ldr	r2, [r3]
 1144 066a 0132     		add	r2, r2, #1
 1145 066c 1A60     		str	r2, [r3]
 1146 066e 0BE0     		b	.L64
 1147              	.L65:
 796:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     }
 797:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     else
 798:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     /* Probably Overflow */
 799:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     {
 800:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         I2CM_TX_FIFO_WR_REG = I2CM_I2C_SLAVE_OVFL_RETURN;
 1148              		.loc 1 800 0
 1149 0670 FF22     		mov	r2, #255
 1150 0672 2D4B     		ldr	r3, .L82+140
 1151 0674 1A60     		str	r2, [r3]
 801:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 802:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         if(0u == (I2CM_INTR_TX_OVERFLOW & I2CM_slOverFlowCount))
 1152              		.loc 1 802 0
 1153 0676 184B     		ldr	r3, .L82+60
 1154 0678 1B78     		ldrb	r3, [r3]
 1155 067a 9B06     		lsl	r3, r3, #26
 1156 067c 04D4     		bmi	.L64
 803:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         {
 804:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             /* Get counter in range of byte: value 10 is overflow */
 805:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                             I2CM_slOverFlowCount++;
 1157              		.loc 1 805 0
 1158 067e 164A     		ldr	r2, .L82+60
 1159 0680 1378     		ldrb	r3, [r2]
 1160 0682 0133     		add	r3, r3, #1
 1161 0684 DBB2     		uxtb	r3, r3
 1162 0686 1370     		strb	r3, [r2]
 1163              	.L64:
 785:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 {
 1164              		.loc 1 785 0
 1165 0688 124B     		ldr	r3, .L82+56
 1166 068a 1B68     		ldr	r3, [r3]
 1167 068c 0F22     		mov	r2, #15
 1168 068e 1340     		and	r3, r2
 1169 0690 082B     		cmp	r3, #8
 1170 0692 DAD1     		bne	.L67
 806:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                         }
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 36


 807:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                     }
 808:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 }
 809:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 810:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****                 I2CM_ClearTxInterruptSource(I2CM_INTR_TX_EMPTY);
 1171              		.loc 1 810 0
 1172 0694 0132     		add	r2, r2, #1
 1173 0696 254B     		ldr	r3, .L82+144
 1174 0698 1A60     		str	r2, [r3]
 1175 069a 70E0     		b	.L1
 1176              	.L83:
 1177              		.align	2
 1178              	.L82:
 1179 069c 8C0F0640 		.word	1074139020
 1180 06a0 00000000 		.word	I2CM_mstrWrBufIndexTmp
 1181 06a4 00000000 		.word	I2CM_mstrWrBufIndex
 1182 06a8 60000640 		.word	1074135136
 1183 06ac FFFEFFFF 		.word	-257
 1184 06b0 C80F0640 		.word	1074139080
 1185 06b4 880F0640 		.word	1074139016
 1186 06b8 00000000 		.word	I2CM_mstrControl
 1187 06bc 00000000 		.word	I2CM_state
 1188 06c0 00000000 		.word	I2CM_mstrStatus
 1189 06c4 64000640 		.word	1074135140
 1190 06c8 68000640 		.word	1074135144
 1191 06cc 4C0F0640 		.word	1074138956
 1192 06d0 400F0640 		.word	1074138944
 1193 06d4 08020640 		.word	1074135560
 1194 06d8 00000000 		.word	I2CM_slOverFlowCount
 1195 06dc 00000000 		.word	I2CM_slStatus
 1196 06e0 00000000 		.word	I2CM_slRdBufIndexTmp
 1197 06e4 00000000 		.word	I2CM_slRdBufIndex
 1198 06e8 04020640 		.word	1074135556
 1199 06ec FFFFFEFF 		.word	-65537
 1200 06f0 00000000 		.word	I2CM_slWrBufIndex
 1201 06f4 00000000 		.word	I2CM_slWrBufPtr
 1202 06f8 40030640 		.word	1074135872
 1203 06fc 08030640 		.word	1074135816
 1204 0700 FF5FFFFF 		.word	-40961
 1205 0704 C00F0640 		.word	1074139072
 1206 0708 ED0F0000 		.word	4077
 1207 070c 800E0640 		.word	1074138752
 1208 0710 00000000 		.word	I2CM_slWrBufSize
 1209 0714 FF0F0000 		.word	4095
 1210 0718 6C000640 		.word	1074135148
 1211 071c CC0F0640 		.word	1074139084
 1212 0720 00000000 		.word	I2CM_slRdBufSize
 1213 0724 00000000 		.word	I2CM_slRdBufPtr
 1214 0728 40020640 		.word	1074135616
 1215 072c 800F0640 		.word	1074139008
 1216              	.L40:
 811:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****             }
 812:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 813:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         }  /* (I2CM_I2C_SLAVE) */
 814:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         #endif
 815:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     }
 816:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 817:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 37


 818:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     /* FSM EXIT:
 819:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     * Slave:  INTR_SLAVE_I2C_BUS_ERROR, INTR_SLAVE_I2C_ARB_LOST
 820:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     * Master: INTR_MASTER_I2C_BUS_ERROR, INTR_MASTER_I2C_ARB_LOST.
 821:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     */
 822:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     else
 823:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     {
 824:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         I2CM_CTRL_REG &= (uint32) ~I2CM_CTRL_ENABLED; /* Disable scb IP */
 1217              		.loc 1 824 0
 1218 0730 134A     		ldr	r2, .L84
 1219 0732 1368     		ldr	r3, [r2]
 1220 0734 5B00     		lsl	r3, r3, #1
 1221 0736 5B08     		lsr	r3, r3, #1
 1222 0738 1360     		str	r3, [r2]
 825:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 826:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         I2CM_state = I2CM_I2C_FSM_IDLE;
 1223              		.loc 1 826 0
 1224 073a 1021     		mov	r1, #16
 1225 073c 114B     		ldr	r3, .L84+4
 1226 073e 1970     		strb	r1, [r3]
 827:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 828:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         I2CM_DISABLE_SLAVE_AUTO_DATA;
 1227              		.loc 1 828 0
 1228 0740 114B     		ldr	r3, .L84+8
 1229 0742 1868     		ldr	r0, [r3]
 1230 0744 1149     		ldr	r1, .L84+12
 1231 0746 0140     		and	r1, r0
 1232 0748 1960     		str	r1, [r3]
 829:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         I2CM_DISABLE_MASTER_AUTO_DATA;
 1233              		.loc 1 829 0
 1234 074a 1868     		ldr	r0, [r3]
 1235 074c 1049     		ldr	r1, .L84+16
 1236 074e 0140     		and	r1, r0
 1237 0750 1960     		str	r1, [r3]
 830:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 831:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     #if(I2CM_CY_SCBIP_V0)
 832:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         I2CM_SetRxInterruptMode(I2CM_NO_INTR_SOURCES);
 1238              		.loc 1 832 0
 1239 0752 0023     		mov	r3, #0
 1240 0754 0F49     		ldr	r1, .L84+20
 1241 0756 0B60     		str	r3, [r1]
 833:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         I2CM_SetTxInterruptMode(I2CM_NO_INTR_SOURCES);
 1242              		.loc 1 833 0
 1243 0758 0F49     		ldr	r1, .L84+24
 1244 075a 0B60     		str	r3, [r1]
 834:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 835:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         /* Clear interrupt sources as they are not automatically cleared after SCB is disabled */
 836:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         I2CM_ClearTxInterruptSource(I2CM_INTR_RX_ALL);
 1245              		.loc 1 836 0
 1246 075c 0F49     		ldr	r1, .L84+28
 1247 075e 104B     		ldr	r3, .L84+32
 1248 0760 1960     		str	r1, [r3]
 837:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         I2CM_ClearRxInterruptSource(I2CM_INTR_TX_ALL);
 1249              		.loc 1 837 0
 1250 0762 1049     		ldr	r1, .L84+36
 1251 0764 104B     		ldr	r3, .L84+40
 1252 0766 1960     		str	r1, [r3]
 838:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         I2CM_ClearSlaveInterruptSource(I2CM_INTR_SLAVE_ALL);
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 38


 1253              		.loc 1 838 0
 1254 0768 1049     		ldr	r1, .L84+44
 1255 076a 114B     		ldr	r3, .L84+48
 1256 076c 1960     		str	r1, [r3]
 839:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         I2CM_ClearMasterInterruptSource(I2CM_INTR_MASTER_ALL);
 1257              		.loc 1 839 0
 1258 076e 1149     		ldr	r1, .L84+52
 1259 0770 114B     		ldr	r3, .L84+56
 1260 0772 1960     		str	r1, [r3]
 840:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     #endif /* (I2CM_CY_SCBIP_V0) */
 841:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 842:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****         I2CM_CTRL_REG |= (uint32) I2CM_CTRL_ENABLED;  /* Enable scb IP */
 1261              		.loc 1 842 0
 1262 0774 1368     		ldr	r3, [r2]
 1263 0776 8021     		mov	r1, #128
 1264 0778 0906     		lsl	r1, r1, #24
 1265 077a 0B43     		orr	r3, r1
 1266 077c 1360     		str	r3, [r2]
 1267              	.L1:
 843:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     }
 844:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** 
 845:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** #ifdef I2CM_I2C_ISR_EXIT_CALLBACK
 846:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     I2CM_I2C_ISR_ExitCallback();
 847:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** #endif /* I2CM_I2C_ISR_EXIT_CALLBACK */
 848:.\Generated_Source\PSoC4/I2CM_I2C_INT.c ****     
 849:.\Generated_Source\PSoC4/I2CM_I2C_INT.c **** }
 1268              		.loc 1 849 0
 1269              		@ sp needed
 1270 077e 10BD     		pop	{r4, pc}
 1271              	.L85:
 1272              		.align	2
 1273              	.L84:
 1274 0780 00000640 		.word	1074135040
 1275 0784 00000000 		.word	I2CM_state
 1276 0788 60000640 		.word	1074135136
 1277 078c FF5FFFFF 		.word	-40961
 1278 0790 FFFCFFFF 		.word	-769
 1279 0794 C80F0640 		.word	1074139080
 1280 0798 880F0640 		.word	1074139016
 1281 079c ED0F0000 		.word	4077
 1282 07a0 800F0640 		.word	1074139008
 1283 07a4 F3070000 		.word	2035
 1284 07a8 C00F0640 		.word	1074139072
 1285 07ac FF0F0000 		.word	4095
 1286 07b0 400F0640 		.word	1074138944
 1287 07b4 17030000 		.word	791
 1288 07b8 000F0640 		.word	1074138880
 1289              		.cfi_endproc
 1290              	.LFE0:
 1291              		.size	I2CM_I2C_ISR, .-I2CM_I2C_ISR
 1292              		.text
 1293              	.Letext0:
 1294              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1295              		.file 3 ".\\Generated_Source\\PSoC4\\I2CM_PVT.h"
 1296              		.file 4 ".\\Generated_Source\\PSoC4\\I2CM_I2C_PVT.h"
 1297              		.file 5 ".\\Generated_Source\\PSoC4\\I2CM.h"
 1298              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 39


 1299              	.Ldebug_info0:
 1300 0000 FD010000 		.4byte	0x1fd
 1301 0004 0400     		.2byte	0x4
 1302 0006 00000000 		.4byte	.Ldebug_abbrev0
 1303 000a 04       		.byte	0x4
 1304 000b 01       		.uleb128 0x1
 1305 000c 14020000 		.4byte	.LASF40
 1306 0010 01       		.byte	0x1
 1307 0011 C1000000 		.4byte	.LASF41
 1308 0015 7E000000 		.4byte	.LASF42
 1309 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1310 001d 00000000 		.4byte	0
 1311 0021 00000000 		.4byte	.Ldebug_line0
 1312 0025 02       		.uleb128 0x2
 1313 0026 01       		.byte	0x1
 1314 0027 06       		.byte	0x6
 1315 0028 FB020000 		.4byte	.LASF0
 1316 002c 02       		.uleb128 0x2
 1317 002d 01       		.byte	0x1
 1318 002e 08       		.byte	0x8
 1319 002f FD010000 		.4byte	.LASF1
 1320 0033 02       		.uleb128 0x2
 1321 0034 02       		.byte	0x2
 1322 0035 05       		.byte	0x5
 1323 0036 D8020000 		.4byte	.LASF2
 1324 003a 02       		.uleb128 0x2
 1325 003b 02       		.byte	0x2
 1326 003c 07       		.byte	0x7
 1327 003d 54000000 		.4byte	.LASF3
 1328 0041 02       		.uleb128 0x2
 1329 0042 04       		.byte	0x4
 1330 0043 05       		.byte	0x5
 1331 0044 F2020000 		.4byte	.LASF4
 1332 0048 02       		.uleb128 0x2
 1333 0049 04       		.byte	0x4
 1334 004a 07       		.byte	0x7
 1335 004b 81010000 		.4byte	.LASF5
 1336 004f 02       		.uleb128 0x2
 1337 0050 08       		.byte	0x8
 1338 0051 05       		.byte	0x5
 1339 0052 A2020000 		.4byte	.LASF6
 1340 0056 02       		.uleb128 0x2
 1341 0057 08       		.byte	0x8
 1342 0058 07       		.byte	0x7
 1343 0059 B4010000 		.4byte	.LASF7
 1344 005d 03       		.uleb128 0x3
 1345 005e 04       		.byte	0x4
 1346 005f 05       		.byte	0x5
 1347 0060 696E7400 		.ascii	"int\000"
 1348 0064 02       		.uleb128 0x2
 1349 0065 04       		.byte	0x4
 1350 0066 07       		.byte	0x7
 1351 0067 93010000 		.4byte	.LASF8
 1352 006b 04       		.uleb128 0x4
 1353 006c 13010000 		.4byte	.LASF9
 1354 0070 02       		.byte	0x2
 1355 0071 3801     		.2byte	0x138
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 40


 1356 0073 2C000000 		.4byte	0x2c
 1357 0077 04       		.uleb128 0x4
 1358 0078 57010000 		.4byte	.LASF10
 1359 007c 02       		.byte	0x2
 1360 007d 3901     		.2byte	0x139
 1361 007f 3A000000 		.4byte	0x3a
 1362 0083 04       		.uleb128 0x4
 1363 0084 7A010000 		.4byte	.LASF11
 1364 0088 02       		.byte	0x2
 1365 0089 3A01     		.2byte	0x13a
 1366 008b 48000000 		.4byte	0x48
 1367 008f 02       		.uleb128 0x2
 1368 0090 04       		.byte	0x4
 1369 0091 04       		.byte	0x4
 1370 0092 BB000000 		.4byte	.LASF12
 1371 0096 02       		.uleb128 0x2
 1372 0097 08       		.byte	0x8
 1373 0098 04       		.byte	0x4
 1374 0099 50010000 		.4byte	.LASF13
 1375 009d 02       		.uleb128 0x2
 1376 009e 01       		.byte	0x1
 1377 009f 08       		.byte	0x8
 1378 00a0 C2020000 		.4byte	.LASF14
 1379 00a4 05       		.uleb128 0x5
 1380 00a5 6B000000 		.4byte	0x6b
 1381 00a9 05       		.uleb128 0x5
 1382 00aa 77000000 		.4byte	0x77
 1383 00ae 04       		.uleb128 0x4
 1384 00af 00000000 		.4byte	.LASF15
 1385 00b3 02       		.byte	0x2
 1386 00b4 E401     		.2byte	0x1e4
 1387 00b6 BA000000 		.4byte	0xba
 1388 00ba 05       		.uleb128 0x5
 1389 00bb 83000000 		.4byte	0x83
 1390 00bf 04       		.uleb128 0x4
 1391 00c0 CB010000 		.4byte	.LASF16
 1392 00c4 02       		.byte	0x2
 1393 00c5 F401     		.2byte	0x1f4
 1394 00c7 CB000000 		.4byte	0xcb
 1395 00cb 06       		.uleb128 0x6
 1396 00cc 04       		.byte	0x4
 1397 00cd D1000000 		.4byte	0xd1
 1398 00d1 07       		.uleb128 0x7
 1399 00d2 02       		.uleb128 0x2
 1400 00d3 04       		.byte	0x4
 1401 00d4 07       		.byte	0x7
 1402 00d5 0B020000 		.4byte	.LASF17
 1403 00d9 08       		.uleb128 0x8
 1404 00da FC000000 		.4byte	.LASF43
 1405 00de 01       		.byte	0x1
 1406 00df 25       		.byte	0x25
 1407 00e0 00000000 		.4byte	.LFB0
 1408 00e4 BC070000 		.4byte	.LFE0-.LFB0
 1409 00e8 01       		.uleb128 0x1
 1410 00e9 9C       		.byte	0x9c
 1411 00ea 16010000 		.4byte	0x116
 1412 00ee 09       		.uleb128 0x9
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 41


 1413 00ef 09010000 		.4byte	.LASF18
 1414 00f3 01       		.byte	0x1
 1415 00f4 27       		.byte	0x27
 1416 00f5 83000000 		.4byte	0x83
 1417 00f9 00000000 		.4byte	.LLST0
 1418 00fd 09       		.uleb128 0x9
 1419 00fe 67000000 		.4byte	.LASF19
 1420 0102 01       		.byte	0x1
 1421 0103 28       		.byte	0x28
 1422 0104 83000000 		.4byte	0x83
 1423 0108 98000000 		.4byte	.LLST1
 1424 010c 0A       		.uleb128 0xa
 1425 010d 30060000 		.4byte	.LVL60
 1426 0111 F8010000 		.4byte	0x1f8
 1427 0115 00       		.byte	0
 1428 0116 0B       		.uleb128 0xb
 1429 0117 19010000 		.4byte	.LASF20
 1430 011b 03       		.byte	0x3
 1431 011c 3A       		.byte	0x3a
 1432 011d BF000000 		.4byte	0xbf
 1433 0121 0B       		.uleb128 0xb
 1434 0122 73000000 		.4byte	.LASF21
 1435 0126 04       		.byte	0x4
 1436 0127 1D       		.byte	0x1d
 1437 0128 A4000000 		.4byte	0xa4
 1438 012c 0B       		.uleb128 0xb
 1439 012d 42010000 		.4byte	.LASF22
 1440 0131 04       		.byte	0x4
 1441 0132 20       		.byte	0x20
 1442 0133 A4000000 		.4byte	0xa4
 1443 0137 0B       		.uleb128 0xb
 1444 0138 D8010000 		.4byte	.LASF23
 1445 013c 04       		.byte	0x4
 1446 013d 23       		.byte	0x23
 1447 013e 42010000 		.4byte	0x142
 1448 0142 06       		.uleb128 0x6
 1449 0143 04       		.byte	0x4
 1450 0144 A4000000 		.4byte	0xa4
 1451 0148 0B       		.uleb128 0xb
 1452 0149 9A000000 		.4byte	.LASF24
 1453 014d 04       		.byte	0x4
 1454 014e 24       		.byte	0x24
 1455 014f BA000000 		.4byte	0xba
 1456 0153 0B       		.uleb128 0xb
 1457 0154 2D000000 		.4byte	.LASF25
 1458 0158 04       		.byte	0x4
 1459 0159 25       		.byte	0x25
 1460 015a BA000000 		.4byte	0xba
 1461 015e 0B       		.uleb128 0xb
 1462 015f E2020000 		.4byte	.LASF26
 1463 0163 04       		.byte	0x4
 1464 0164 28       		.byte	0x28
 1465 0165 42010000 		.4byte	0x142
 1466 0169 0B       		.uleb128 0xb
 1467 016a 19030000 		.4byte	.LASF27
 1468 016e 04       		.byte	0x4
 1469 016f 29       		.byte	0x29
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 42


 1470 0170 BA000000 		.4byte	0xba
 1471 0174 0B       		.uleb128 0xb
 1472 0175 07030000 		.4byte	.LASF28
 1473 0179 04       		.byte	0x4
 1474 017a 2A       		.byte	0x2a
 1475 017b BA000000 		.4byte	0xba
 1476 017f 0B       		.uleb128 0xb
 1477 0180 E8010000 		.4byte	.LASF29
 1478 0184 04       		.byte	0x4
 1479 0185 2B       		.byte	0x2b
 1480 0186 BA000000 		.4byte	0xba
 1481 018a 0B       		.uleb128 0xb
 1482 018b 3F000000 		.4byte	.LASF30
 1483 018f 04       		.byte	0x4
 1484 0190 2C       		.byte	0x2c
 1485 0191 A4000000 		.4byte	0xa4
 1486 0195 0B       		.uleb128 0xb
 1487 0196 AB000000 		.4byte	.LASF31
 1488 019a 04       		.byte	0x4
 1489 019b 30       		.byte	0x30
 1490 019c A9000000 		.4byte	0xa9
 1491 01a0 0B       		.uleb128 0xb
 1492 01a1 C7020000 		.4byte	.LASF32
 1493 01a5 04       		.byte	0x4
 1494 01a6 31       		.byte	0x31
 1495 01a7 A4000000 		.4byte	0xa4
 1496 01ab 0B       		.uleb128 0xb
 1497 01ac 30010000 		.4byte	.LASF33
 1498 01b0 04       		.byte	0x4
 1499 01b1 34       		.byte	0x34
 1500 01b2 42010000 		.4byte	0x142
 1501 01b6 0B       		.uleb128 0xb
 1502 01b7 06000000 		.4byte	.LASF34
 1503 01bb 04       		.byte	0x4
 1504 01bc 35       		.byte	0x35
 1505 01bd BA000000 		.4byte	0xba
 1506 01c1 0B       		.uleb128 0xb
 1507 01c2 19000000 		.4byte	.LASF35
 1508 01c6 04       		.byte	0x4
 1509 01c7 36       		.byte	0x36
 1510 01c8 BA000000 		.4byte	0xba
 1511 01cc 0B       		.uleb128 0xb
 1512 01cd B0020000 		.4byte	.LASF36
 1513 01d1 04       		.byte	0x4
 1514 01d2 39       		.byte	0x39
 1515 01d3 42010000 		.4byte	0x142
 1516 01d7 0B       		.uleb128 0xb
 1517 01d8 E9000000 		.4byte	.LASF37
 1518 01dc 04       		.byte	0x4
 1519 01dd 3A       		.byte	0x3a
 1520 01de BA000000 		.4byte	0xba
 1521 01e2 0B       		.uleb128 0xb
 1522 01e3 A0010000 		.4byte	.LASF38
 1523 01e7 04       		.byte	0x4
 1524 01e8 3B       		.byte	0x3b
 1525 01e9 BA000000 		.4byte	0xba
 1526 01ed 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 43


 1527 01ee 2A030000 		.4byte	.LASF39
 1528 01f2 04       		.byte	0x4
 1529 01f3 3C       		.byte	0x3c
 1530 01f4 BA000000 		.4byte	0xba
 1531 01f8 0C       		.uleb128 0xc
 1532 01f9 5E010000 		.4byte	.LASF44
 1533 01fd 05       		.byte	0x5
 1534 01fe 1005     		.2byte	0x510
 1535 0200 00       		.byte	0
 1536              		.section	.debug_abbrev,"",%progbits
 1537              	.Ldebug_abbrev0:
 1538 0000 01       		.uleb128 0x1
 1539 0001 11       		.uleb128 0x11
 1540 0002 01       		.byte	0x1
 1541 0003 25       		.uleb128 0x25
 1542 0004 0E       		.uleb128 0xe
 1543 0005 13       		.uleb128 0x13
 1544 0006 0B       		.uleb128 0xb
 1545 0007 03       		.uleb128 0x3
 1546 0008 0E       		.uleb128 0xe
 1547 0009 1B       		.uleb128 0x1b
 1548 000a 0E       		.uleb128 0xe
 1549 000b 55       		.uleb128 0x55
 1550 000c 17       		.uleb128 0x17
 1551 000d 11       		.uleb128 0x11
 1552 000e 01       		.uleb128 0x1
 1553 000f 10       		.uleb128 0x10
 1554 0010 17       		.uleb128 0x17
 1555 0011 00       		.byte	0
 1556 0012 00       		.byte	0
 1557 0013 02       		.uleb128 0x2
 1558 0014 24       		.uleb128 0x24
 1559 0015 00       		.byte	0
 1560 0016 0B       		.uleb128 0xb
 1561 0017 0B       		.uleb128 0xb
 1562 0018 3E       		.uleb128 0x3e
 1563 0019 0B       		.uleb128 0xb
 1564 001a 03       		.uleb128 0x3
 1565 001b 0E       		.uleb128 0xe
 1566 001c 00       		.byte	0
 1567 001d 00       		.byte	0
 1568 001e 03       		.uleb128 0x3
 1569 001f 24       		.uleb128 0x24
 1570 0020 00       		.byte	0
 1571 0021 0B       		.uleb128 0xb
 1572 0022 0B       		.uleb128 0xb
 1573 0023 3E       		.uleb128 0x3e
 1574 0024 0B       		.uleb128 0xb
 1575 0025 03       		.uleb128 0x3
 1576 0026 08       		.uleb128 0x8
 1577 0027 00       		.byte	0
 1578 0028 00       		.byte	0
 1579 0029 04       		.uleb128 0x4
 1580 002a 16       		.uleb128 0x16
 1581 002b 00       		.byte	0
 1582 002c 03       		.uleb128 0x3
 1583 002d 0E       		.uleb128 0xe
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 44


 1584 002e 3A       		.uleb128 0x3a
 1585 002f 0B       		.uleb128 0xb
 1586 0030 3B       		.uleb128 0x3b
 1587 0031 05       		.uleb128 0x5
 1588 0032 49       		.uleb128 0x49
 1589 0033 13       		.uleb128 0x13
 1590 0034 00       		.byte	0
 1591 0035 00       		.byte	0
 1592 0036 05       		.uleb128 0x5
 1593 0037 35       		.uleb128 0x35
 1594 0038 00       		.byte	0
 1595 0039 49       		.uleb128 0x49
 1596 003a 13       		.uleb128 0x13
 1597 003b 00       		.byte	0
 1598 003c 00       		.byte	0
 1599 003d 06       		.uleb128 0x6
 1600 003e 0F       		.uleb128 0xf
 1601 003f 00       		.byte	0
 1602 0040 0B       		.uleb128 0xb
 1603 0041 0B       		.uleb128 0xb
 1604 0042 49       		.uleb128 0x49
 1605 0043 13       		.uleb128 0x13
 1606 0044 00       		.byte	0
 1607 0045 00       		.byte	0
 1608 0046 07       		.uleb128 0x7
 1609 0047 15       		.uleb128 0x15
 1610 0048 00       		.byte	0
 1611 0049 27       		.uleb128 0x27
 1612 004a 19       		.uleb128 0x19
 1613 004b 00       		.byte	0
 1614 004c 00       		.byte	0
 1615 004d 08       		.uleb128 0x8
 1616 004e 2E       		.uleb128 0x2e
 1617 004f 01       		.byte	0x1
 1618 0050 3F       		.uleb128 0x3f
 1619 0051 19       		.uleb128 0x19
 1620 0052 03       		.uleb128 0x3
 1621 0053 0E       		.uleb128 0xe
 1622 0054 3A       		.uleb128 0x3a
 1623 0055 0B       		.uleb128 0xb
 1624 0056 3B       		.uleb128 0x3b
 1625 0057 0B       		.uleb128 0xb
 1626 0058 27       		.uleb128 0x27
 1627 0059 19       		.uleb128 0x19
 1628 005a 11       		.uleb128 0x11
 1629 005b 01       		.uleb128 0x1
 1630 005c 12       		.uleb128 0x12
 1631 005d 06       		.uleb128 0x6
 1632 005e 40       		.uleb128 0x40
 1633 005f 18       		.uleb128 0x18
 1634 0060 9642     		.uleb128 0x2116
 1635 0062 19       		.uleb128 0x19
 1636 0063 01       		.uleb128 0x1
 1637 0064 13       		.uleb128 0x13
 1638 0065 00       		.byte	0
 1639 0066 00       		.byte	0
 1640 0067 09       		.uleb128 0x9
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 45


 1641 0068 34       		.uleb128 0x34
 1642 0069 00       		.byte	0
 1643 006a 03       		.uleb128 0x3
 1644 006b 0E       		.uleb128 0xe
 1645 006c 3A       		.uleb128 0x3a
 1646 006d 0B       		.uleb128 0xb
 1647 006e 3B       		.uleb128 0x3b
 1648 006f 0B       		.uleb128 0xb
 1649 0070 49       		.uleb128 0x49
 1650 0071 13       		.uleb128 0x13
 1651 0072 02       		.uleb128 0x2
 1652 0073 17       		.uleb128 0x17
 1653 0074 00       		.byte	0
 1654 0075 00       		.byte	0
 1655 0076 0A       		.uleb128 0xa
 1656 0077 898201   		.uleb128 0x4109
 1657 007a 00       		.byte	0
 1658 007b 11       		.uleb128 0x11
 1659 007c 01       		.uleb128 0x1
 1660 007d 31       		.uleb128 0x31
 1661 007e 13       		.uleb128 0x13
 1662 007f 00       		.byte	0
 1663 0080 00       		.byte	0
 1664 0081 0B       		.uleb128 0xb
 1665 0082 34       		.uleb128 0x34
 1666 0083 00       		.byte	0
 1667 0084 03       		.uleb128 0x3
 1668 0085 0E       		.uleb128 0xe
 1669 0086 3A       		.uleb128 0x3a
 1670 0087 0B       		.uleb128 0xb
 1671 0088 3B       		.uleb128 0x3b
 1672 0089 0B       		.uleb128 0xb
 1673 008a 49       		.uleb128 0x49
 1674 008b 13       		.uleb128 0x13
 1675 008c 3F       		.uleb128 0x3f
 1676 008d 19       		.uleb128 0x19
 1677 008e 3C       		.uleb128 0x3c
 1678 008f 19       		.uleb128 0x19
 1679 0090 00       		.byte	0
 1680 0091 00       		.byte	0
 1681 0092 0C       		.uleb128 0xc
 1682 0093 2E       		.uleb128 0x2e
 1683 0094 00       		.byte	0
 1684 0095 3F       		.uleb128 0x3f
 1685 0096 19       		.uleb128 0x19
 1686 0097 03       		.uleb128 0x3
 1687 0098 0E       		.uleb128 0xe
 1688 0099 3A       		.uleb128 0x3a
 1689 009a 0B       		.uleb128 0xb
 1690 009b 3B       		.uleb128 0x3b
 1691 009c 05       		.uleb128 0x5
 1692 009d 27       		.uleb128 0x27
 1693 009e 19       		.uleb128 0x19
 1694 009f 3C       		.uleb128 0x3c
 1695 00a0 19       		.uleb128 0x19
 1696 00a1 00       		.byte	0
 1697 00a2 00       		.byte	0
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 46


 1698 00a3 00       		.byte	0
 1699              		.section	.debug_loc,"",%progbits
 1700              	.Ldebug_loc0:
 1701              	.LLST0:
 1702 0000 F4010000 		.4byte	.LVL23
 1703 0004 06020000 		.4byte	.LVL25
 1704 0008 0100     		.2byte	0x1
 1705 000a 54       		.byte	0x54
 1706 000b 06020000 		.4byte	.LVL25
 1707 000f 0C020000 		.4byte	.LVL26
 1708 0013 0200     		.2byte	0x2
 1709 0015 38       		.byte	0x38
 1710 0016 9F       		.byte	0x9f
 1711 0017 0C020000 		.4byte	.LVL26
 1712 001b 0E020000 		.4byte	.LVL27
 1713 001f 0100     		.2byte	0x1
 1714 0021 54       		.byte	0x54
 1715 0022 10020000 		.4byte	.LVL28
 1716 0026 30020000 		.4byte	.LVL30
 1717 002a 0100     		.2byte	0x1
 1718 002c 54       		.byte	0x54
 1719 002d 34040000 		.4byte	.LVL41
 1720 0031 44040000 		.4byte	.LVL42
 1721 0035 0100     		.2byte	0x1
 1722 0037 53       		.byte	0x53
 1723 0038 4A040000 		.4byte	.LVL43
 1724 003c 50040000 		.4byte	.LVL44
 1725 0040 0100     		.2byte	0x1
 1726 0042 53       		.byte	0x53
 1727 0043 4E050000 		.4byte	.LVL45
 1728 0047 56050000 		.4byte	.LVL46
 1729 004b 0100     		.2byte	0x1
 1730 004d 53       		.byte	0x53
 1731 004e 5A050000 		.4byte	.LVL47
 1732 0052 62050000 		.4byte	.LVL48
 1733 0056 0100     		.2byte	0x1
 1734 0058 53       		.byte	0x53
 1735 0059 6C050000 		.4byte	.LVL49
 1736 005d 70050000 		.4byte	.LVL50
 1737 0061 0100     		.2byte	0x1
 1738 0063 53       		.byte	0x53
 1739 0064 AE050000 		.4byte	.LVL51
 1740 0068 B6050000 		.4byte	.LVL52
 1741 006c 0100     		.2byte	0x1
 1742 006e 50       		.byte	0x50
 1743 006f B8050000 		.4byte	.LVL53
 1744 0073 F8050000 		.4byte	.LVL56
 1745 0077 0100     		.2byte	0x1
 1746 0079 50       		.byte	0x50
 1747 007a 04060000 		.4byte	.LVL57
 1748 007e 22060000 		.4byte	.LVL58
 1749 0082 0100     		.2byte	0x1
 1750 0084 53       		.byte	0x53
 1751 0085 2C060000 		.4byte	.LVL59
 1752 0089 2F060000 		.4byte	.LVL60-1
 1753 008d 0100     		.2byte	0x1
 1754 008f 53       		.byte	0x53
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 47


 1755 0090 00000000 		.4byte	0
 1756 0094 00000000 		.4byte	0
 1757              	.LLST1:
 1758 0098 02000000 		.4byte	.LVL0
 1759 009c 36000000 		.4byte	.LVL2
 1760 00a0 0200     		.2byte	0x2
 1761 00a2 30       		.byte	0x30
 1762 00a3 9F       		.byte	0x9f
 1763 00a4 36000000 		.4byte	.LVL2
 1764 00a8 3A000000 		.4byte	.LVL3
 1765 00ac 0200     		.2byte	0x2
 1766 00ae 31       		.byte	0x31
 1767 00af 9F       		.byte	0x9f
 1768 00b0 3A000000 		.4byte	.LVL3
 1769 00b4 3C000000 		.4byte	.LVL4
 1770 00b8 0200     		.2byte	0x2
 1771 00ba 30       		.byte	0x30
 1772 00bb 9F       		.byte	0x9f
 1773 00bc 3C000000 		.4byte	.LVL4
 1774 00c0 4A000000 		.4byte	.LVL5
 1775 00c4 0100     		.2byte	0x1
 1776 00c6 53       		.byte	0x53
 1777 00c7 50000000 		.4byte	.LVL6
 1778 00cb 52000000 		.4byte	.LVL7
 1779 00cf 0200     		.2byte	0x2
 1780 00d1 31       		.byte	0x31
 1781 00d2 9F       		.byte	0x9f
 1782 00d3 52000000 		.4byte	.LVL7
 1783 00d7 60000000 		.4byte	.LVL8
 1784 00db 0100     		.2byte	0x1
 1785 00dd 53       		.byte	0x53
 1786 00de 66000000 		.4byte	.LVL9
 1787 00e2 68000000 		.4byte	.LVL10
 1788 00e6 0200     		.2byte	0x2
 1789 00e8 31       		.byte	0x31
 1790 00e9 9F       		.byte	0x9f
 1791 00ea 68000000 		.4byte	.LVL10
 1792 00ee 8C000000 		.4byte	.LVL11
 1793 00f2 0100     		.2byte	0x1
 1794 00f4 53       		.byte	0x53
 1795 00f5 98000000 		.4byte	.LVL12
 1796 00f9 9C000000 		.4byte	.LVL13
 1797 00fd 0200     		.2byte	0x2
 1798 00ff 31       		.byte	0x31
 1799 0100 9F       		.byte	0x9f
 1800 0101 B6000000 		.4byte	.LVL14
 1801 0105 00010000 		.4byte	.LVL15
 1802 0109 0100     		.2byte	0x1
 1803 010b 53       		.byte	0x53
 1804 010c 00010000 		.4byte	.LVL15
 1805 0110 46010000 		.4byte	.LVL16
 1806 0114 0200     		.2byte	0x2
 1807 0116 30       		.byte	0x30
 1808 0117 9F       		.byte	0x9f
 1809 0118 46010000 		.4byte	.LVL16
 1810 011c 5C010000 		.4byte	.LVL17
 1811 0120 0100     		.2byte	0x1
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 48


 1812 0122 53       		.byte	0x53
 1813 0123 7C010000 		.4byte	.LVL18
 1814 0127 90010000 		.4byte	.LVL19
 1815 012b 0100     		.2byte	0x1
 1816 012d 53       		.byte	0x53
 1817 012e 9E010000 		.4byte	.LVL20
 1818 0132 A2010000 		.4byte	.LVL21
 1819 0136 0200     		.2byte	0x2
 1820 0138 31       		.byte	0x31
 1821 0139 9F       		.byte	0x9f
 1822 013a A2010000 		.4byte	.LVL21
 1823 013e 02020000 		.4byte	.LVL24
 1824 0142 0100     		.2byte	0x1
 1825 0144 53       		.byte	0x53
 1826 0145 06020000 		.4byte	.LVL25
 1827 0149 0C020000 		.4byte	.LVL26
 1828 014d 0200     		.2byte	0x2
 1829 014f 31       		.byte	0x31
 1830 0150 9F       		.byte	0x9f
 1831 0151 0C020000 		.4byte	.LVL26
 1832 0155 78020000 		.4byte	.LVL32
 1833 0159 0100     		.2byte	0x1
 1834 015b 53       		.byte	0x53
 1835 015c BE020000 		.4byte	.LVL33
 1836 0160 C2020000 		.4byte	.LVL34
 1837 0164 0200     		.2byte	0x2
 1838 0166 31       		.byte	0x31
 1839 0167 9F       		.byte	0x9f
 1840 0168 C2020000 		.4byte	.LVL34
 1841 016c AA030000 		.4byte	.LVL35
 1842 0170 0100     		.2byte	0x1
 1843 0172 53       		.byte	0x53
 1844 0173 B0030000 		.4byte	.LVL36
 1845 0177 B2030000 		.4byte	.LVL37
 1846 017b 0200     		.2byte	0x2
 1847 017d 31       		.byte	0x31
 1848 017e 9F       		.byte	0x9f
 1849 017f B2030000 		.4byte	.LVL37
 1850 0183 BE030000 		.4byte	.LVL38
 1851 0187 0100     		.2byte	0x1
 1852 0189 53       		.byte	0x53
 1853 018a 06040000 		.4byte	.LVL39
 1854 018e 08040000 		.4byte	.LVL40
 1855 0192 0100     		.2byte	0x1
 1856 0194 53       		.byte	0x53
 1857 0195 BC050000 		.4byte	.LVL54
 1858 0199 F8050000 		.4byte	.LVL56
 1859 019d 0100     		.2byte	0x1
 1860 019f 54       		.byte	0x54
 1861 01a0 00000000 		.4byte	0
 1862 01a4 00000000 		.4byte	0
 1863              		.section	.debug_aranges,"",%progbits
 1864 0000 1C000000 		.4byte	0x1c
 1865 0004 0200     		.2byte	0x2
 1866 0006 00000000 		.4byte	.Ldebug_info0
 1867 000a 04       		.byte	0x4
 1868 000b 00       		.byte	0
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 49


 1869 000c 0000     		.2byte	0
 1870 000e 0000     		.2byte	0
 1871 0010 00000000 		.4byte	.LFB0
 1872 0014 BC070000 		.4byte	.LFE0-.LFB0
 1873 0018 00000000 		.4byte	0
 1874 001c 00000000 		.4byte	0
 1875              		.section	.debug_ranges,"",%progbits
 1876              	.Ldebug_ranges0:
 1877 0000 00000000 		.4byte	.LFB0
 1878 0004 BC070000 		.4byte	.LFE0
 1879 0008 00000000 		.4byte	0
 1880 000c 00000000 		.4byte	0
 1881              		.section	.debug_line,"",%progbits
 1882              	.Ldebug_line0:
 1883 0000 26020000 		.section	.debug_str,"MS",%progbits,1
 1883      02008C00 
 1883      00000201 
 1883      FB0E0D00 
 1883      01010101 
 1884              	.LASF15:
 1885 0000 72656733 		.ascii	"reg32\000"
 1885      3200
 1886              	.LASF34:
 1887 0006 4932434D 		.ascii	"I2CM_mstrRdBufSize\000"
 1887      5F6D7374 
 1887      72526442 
 1887      75665369 
 1887      7A6500
 1888              	.LASF35:
 1889 0019 4932434D 		.ascii	"I2CM_mstrRdBufIndex\000"
 1889      5F6D7374 
 1889      72526442 
 1889      7566496E 
 1889      64657800 
 1890              	.LASF25:
 1891 002d 4932434D 		.ascii	"I2CM_slWrBufIndex\000"
 1891      5F736C57 
 1891      72427566 
 1891      496E6465 
 1891      7800
 1892              	.LASF30:
 1893 003f 4932434D 		.ascii	"I2CM_slOverFlowCount\000"
 1893      5F736C4F 
 1893      76657246 
 1893      6C6F7743 
 1893      6F756E74 
 1894              	.LASF3:
 1895 0054 73686F72 		.ascii	"short unsigned int\000"
 1895      7420756E 
 1895      7369676E 
 1895      65642069 
 1895      6E7400
 1896              	.LASF19:
 1897 0067 656E6454 		.ascii	"endTransfer\000"
 1897      72616E73 
 1897      66657200 
 1898              	.LASF21:
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 50


 1899 0073 4932434D 		.ascii	"I2CM_state\000"
 1899      5F737461 
 1899      746500
 1900              	.LASF42:
 1901 007e 433A5C45 		.ascii	"C:\\E3PRJ3\\PSoC4Master.cydsn\000"
 1901      3350524A 
 1901      335C5053 
 1901      6F43344D 
 1901      61737465 
 1902              	.LASF24:
 1903 009a 4932434D 		.ascii	"I2CM_slWrBufSize\000"
 1903      5F736C57 
 1903      72427566 
 1903      53697A65 
 1903      00
 1904              	.LASF31:
 1905 00ab 4932434D 		.ascii	"I2CM_mstrStatus\000"
 1905      5F6D7374 
 1905      72537461 
 1905      74757300 
 1906              	.LASF12:
 1907 00bb 666C6F61 		.ascii	"float\000"
 1907      7400
 1908              	.LASF41:
 1909 00c1 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\I2CM_I2C_INT.c\000"
 1909      6E657261 
 1909      7465645F 
 1909      536F7572 
 1909      63655C50 
 1910              	.LASF37:
 1911 00e9 4932434D 		.ascii	"I2CM_mstrWrBufSize\000"
 1911      5F6D7374 
 1911      72577242 
 1911      75665369 
 1911      7A6500
 1912              	.LASF43:
 1913 00fc 4932434D 		.ascii	"I2CM_I2C_ISR\000"
 1913      5F493243 
 1913      5F495352 
 1913      00
 1914              	.LASF18:
 1915 0109 64696666 		.ascii	"diffCount\000"
 1915      436F756E 
 1915      7400
 1916              	.LASF9:
 1917 0113 75696E74 		.ascii	"uint8\000"
 1917      3800
 1918              	.LASF20:
 1919 0119 4932434D 		.ascii	"I2CM_customIntrHandler\000"
 1919      5F637573 
 1919      746F6D49 
 1919      6E747248 
 1919      616E646C 
 1920              	.LASF33:
 1921 0130 4932434D 		.ascii	"I2CM_mstrRdBufPtr\000"
 1921      5F6D7374 
 1921      72526442 
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 51


 1921      75665074 
 1921      7200
 1922              	.LASF22:
 1923 0142 4932434D 		.ascii	"I2CM_slStatus\000"
 1923      5F736C53 
 1923      74617475 
 1923      7300
 1924              	.LASF13:
 1925 0150 646F7562 		.ascii	"double\000"
 1925      6C6500
 1926              	.LASF10:
 1927 0157 75696E74 		.ascii	"uint16\000"
 1927      313600
 1928              	.LASF44:
 1929 015e 4932434D 		.ascii	"I2CM_I2CSlaveNackGeneration\000"
 1929      5F493243 
 1929      536C6176 
 1929      654E6163 
 1929      6B47656E 
 1930              	.LASF11:
 1931 017a 75696E74 		.ascii	"uint32\000"
 1931      333200
 1932              	.LASF5:
 1933 0181 6C6F6E67 		.ascii	"long unsigned int\000"
 1933      20756E73 
 1933      69676E65 
 1933      6420696E 
 1933      7400
 1934              	.LASF8:
 1935 0193 756E7369 		.ascii	"unsigned int\000"
 1935      676E6564 
 1935      20696E74 
 1935      00
 1936              	.LASF38:
 1937 01a0 4932434D 		.ascii	"I2CM_mstrWrBufIndex\000"
 1937      5F6D7374 
 1937      72577242 
 1937      7566496E 
 1937      64657800 
 1938              	.LASF7:
 1939 01b4 6C6F6E67 		.ascii	"long long unsigned int\000"
 1939      206C6F6E 
 1939      6720756E 
 1939      7369676E 
 1939      65642069 
 1940              	.LASF16:
 1941 01cb 63796973 		.ascii	"cyisraddress\000"
 1941      72616464 
 1941      72657373 
 1941      00
 1942              	.LASF23:
 1943 01d8 4932434D 		.ascii	"I2CM_slWrBufPtr\000"
 1943      5F736C57 
 1943      72427566 
 1943      50747200 
 1944              	.LASF29:
 1945 01e8 4932434D 		.ascii	"I2CM_slRdBufIndexTmp\000"
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 52


 1945      5F736C52 
 1945      64427566 
 1945      496E6465 
 1945      78546D70 
 1946              	.LASF1:
 1947 01fd 756E7369 		.ascii	"unsigned char\000"
 1947      676E6564 
 1947      20636861 
 1947      7200
 1948              	.LASF17:
 1949 020b 73697A65 		.ascii	"sizetype\000"
 1949      74797065 
 1949      00
 1950              	.LASF40:
 1951 0214 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1951      4320342E 
 1951      392E3320 
 1951      32303135 
 1951      30333033 
 1952 0247 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1952      20726576 
 1952      6973696F 
 1952      6E203232 
 1952      31323230 
 1953 027a 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1953      66756E63 
 1953      74696F6E 
 1953      2D736563 
 1953      74696F6E 
 1954              	.LASF6:
 1955 02a2 6C6F6E67 		.ascii	"long long int\000"
 1955      206C6F6E 
 1955      6720696E 
 1955      7400
 1956              	.LASF36:
 1957 02b0 4932434D 		.ascii	"I2CM_mstrWrBufPtr\000"
 1957      5F6D7374 
 1957      72577242 
 1957      75665074 
 1957      7200
 1958              	.LASF14:
 1959 02c2 63686172 		.ascii	"char\000"
 1959      00
 1960              	.LASF32:
 1961 02c7 4932434D 		.ascii	"I2CM_mstrControl\000"
 1961      5F6D7374 
 1961      72436F6E 
 1961      74726F6C 
 1961      00
 1962              	.LASF2:
 1963 02d8 73686F72 		.ascii	"short int\000"
 1963      7420696E 
 1963      7400
 1964              	.LASF26:
 1965 02e2 4932434D 		.ascii	"I2CM_slRdBufPtr\000"
 1965      5F736C52 
 1965      64427566 
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccmnFi00.s 			page 53


 1965      50747200 
 1966              	.LASF4:
 1967 02f2 6C6F6E67 		.ascii	"long int\000"
 1967      20696E74 
 1967      00
 1968              	.LASF0:
 1969 02fb 7369676E 		.ascii	"signed char\000"
 1969      65642063 
 1969      68617200 
 1970              	.LASF28:
 1971 0307 4932434D 		.ascii	"I2CM_slRdBufIndex\000"
 1971      5F736C52 
 1971      64427566 
 1971      496E6465 
 1971      7800
 1972              	.LASF27:
 1973 0319 4932434D 		.ascii	"I2CM_slRdBufSize\000"
 1973      5F736C52 
 1973      64427566 
 1973      53697A65 
 1973      00
 1974              	.LASF39:
 1975 032a 4932434D 		.ascii	"I2CM_mstrWrBufIndexTmp\000"
 1975      5F6D7374 
 1975      72577242 
 1975      7566496E 
 1975      64657854 
 1976              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
