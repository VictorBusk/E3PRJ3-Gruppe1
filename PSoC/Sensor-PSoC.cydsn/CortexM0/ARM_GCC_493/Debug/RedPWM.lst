ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"RedPWM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.RedPWM_Stop,"ax",%progbits
  18              		.align	2
  19              		.global	RedPWM_Stop
  20              		.code	16
  21              		.thumb_func
  22              		.type	RedPWM_Stop, %function
  23              	RedPWM_Stop:
  24              	.LFB3:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\RedPWM.c"
   1:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/RedPWM.c **** * File Name: RedPWM.c
   3:.\Generated_Source\PSoC4/RedPWM.c **** * Version 2.10
   4:.\Generated_Source\PSoC4/RedPWM.c **** *
   5:.\Generated_Source\PSoC4/RedPWM.c **** * Description:
   6:.\Generated_Source\PSoC4/RedPWM.c **** *  This file provides the source code to the API for the RedPWM
   7:.\Generated_Source\PSoC4/RedPWM.c **** *  component
   8:.\Generated_Source\PSoC4/RedPWM.c **** *
   9:.\Generated_Source\PSoC4/RedPWM.c **** * Note:
  10:.\Generated_Source\PSoC4/RedPWM.c **** *  None
  11:.\Generated_Source\PSoC4/RedPWM.c **** *
  12:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/RedPWM.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/RedPWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/RedPWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/RedPWM.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/RedPWM.c **** 
  19:.\Generated_Source\PSoC4/RedPWM.c **** #include "RedPWM.h"
  20:.\Generated_Source\PSoC4/RedPWM.c **** 
  21:.\Generated_Source\PSoC4/RedPWM.c **** uint8 RedPWM_initVar = 0u;
  22:.\Generated_Source\PSoC4/RedPWM.c **** 
  23:.\Generated_Source\PSoC4/RedPWM.c **** 
  24:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_Init
  26:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
  27:.\Generated_Source\PSoC4/RedPWM.c **** *
  28:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
  29:.\Generated_Source\PSoC4/RedPWM.c **** *  Initialize/Restore default RedPWM configuration.
  30:.\Generated_Source\PSoC4/RedPWM.c **** *
  31:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
  32:.\Generated_Source\PSoC4/RedPWM.c **** *  None
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 2


  33:.\Generated_Source\PSoC4/RedPWM.c **** *
  34:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
  35:.\Generated_Source\PSoC4/RedPWM.c **** *  None
  36:.\Generated_Source\PSoC4/RedPWM.c **** *
  37:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
  38:.\Generated_Source\PSoC4/RedPWM.c **** void RedPWM_Init(void)
  39:.\Generated_Source\PSoC4/RedPWM.c **** {
  40:.\Generated_Source\PSoC4/RedPWM.c **** 
  41:.\Generated_Source\PSoC4/RedPWM.c ****     /* Set values from customizer to CTRL */
  42:.\Generated_Source\PSoC4/RedPWM.c ****     #if (RedPWM__QUAD == RedPWM_CONFIG)
  43:.\Generated_Source\PSoC4/RedPWM.c ****         RedPWM_CONTROL_REG = RedPWM_CTRL_QUAD_BASE_CONFIG;
  44:.\Generated_Source\PSoC4/RedPWM.c ****         
  45:.\Generated_Source\PSoC4/RedPWM.c ****         /* Set values from customizer to CTRL1 */
  46:.\Generated_Source\PSoC4/RedPWM.c ****         RedPWM_TRIG_CONTROL1_REG  = RedPWM_QUAD_SIGNALS_MODES;
  47:.\Generated_Source\PSoC4/RedPWM.c **** 
  48:.\Generated_Source\PSoC4/RedPWM.c ****         /* Set values from customizer to INTR */
  49:.\Generated_Source\PSoC4/RedPWM.c ****         RedPWM_SetInterruptMode(RedPWM_QUAD_INTERRUPT_MASK);
  50:.\Generated_Source\PSoC4/RedPWM.c ****         
  51:.\Generated_Source\PSoC4/RedPWM.c ****          /* Set other values */
  52:.\Generated_Source\PSoC4/RedPWM.c ****         RedPWM_SetCounterMode(RedPWM_COUNT_DOWN);
  53:.\Generated_Source\PSoC4/RedPWM.c ****         RedPWM_WritePeriod(RedPWM_QUAD_PERIOD_INIT_VALUE);
  54:.\Generated_Source\PSoC4/RedPWM.c ****         RedPWM_WriteCounter(RedPWM_QUAD_PERIOD_INIT_VALUE);
  55:.\Generated_Source\PSoC4/RedPWM.c ****     #endif  /* (RedPWM__QUAD == RedPWM_CONFIG) */
  56:.\Generated_Source\PSoC4/RedPWM.c **** 
  57:.\Generated_Source\PSoC4/RedPWM.c ****     #if (RedPWM__TIMER == RedPWM_CONFIG)
  58:.\Generated_Source\PSoC4/RedPWM.c ****         RedPWM_CONTROL_REG = RedPWM_CTRL_TIMER_BASE_CONFIG;
  59:.\Generated_Source\PSoC4/RedPWM.c ****         
  60:.\Generated_Source\PSoC4/RedPWM.c ****         /* Set values from customizer to CTRL1 */
  61:.\Generated_Source\PSoC4/RedPWM.c ****         RedPWM_TRIG_CONTROL1_REG  = RedPWM_TIMER_SIGNALS_MODES;
  62:.\Generated_Source\PSoC4/RedPWM.c ****     
  63:.\Generated_Source\PSoC4/RedPWM.c ****         /* Set values from customizer to INTR */
  64:.\Generated_Source\PSoC4/RedPWM.c ****         RedPWM_SetInterruptMode(RedPWM_TC_INTERRUPT_MASK);
  65:.\Generated_Source\PSoC4/RedPWM.c ****         
  66:.\Generated_Source\PSoC4/RedPWM.c ****         /* Set other values from customizer */
  67:.\Generated_Source\PSoC4/RedPWM.c ****         RedPWM_WritePeriod(RedPWM_TC_PERIOD_VALUE );
  68:.\Generated_Source\PSoC4/RedPWM.c **** 
  69:.\Generated_Source\PSoC4/RedPWM.c ****         #if (RedPWM__COMPARE == RedPWM_TC_COMP_CAP_MODE)
  70:.\Generated_Source\PSoC4/RedPWM.c ****             RedPWM_WriteCompare(RedPWM_TC_COMPARE_VALUE);
  71:.\Generated_Source\PSoC4/RedPWM.c **** 
  72:.\Generated_Source\PSoC4/RedPWM.c ****             #if (1u == RedPWM_TC_COMPARE_SWAP)
  73:.\Generated_Source\PSoC4/RedPWM.c ****                 RedPWM_SetCompareSwap(1u);
  74:.\Generated_Source\PSoC4/RedPWM.c ****                 RedPWM_WriteCompareBuf(RedPWM_TC_COMPARE_BUF_VALUE);
  75:.\Generated_Source\PSoC4/RedPWM.c ****             #endif  /* (1u == RedPWM_TC_COMPARE_SWAP) */
  76:.\Generated_Source\PSoC4/RedPWM.c ****         #endif  /* (RedPWM__COMPARE == RedPWM_TC_COMP_CAP_MODE) */
  77:.\Generated_Source\PSoC4/RedPWM.c **** 
  78:.\Generated_Source\PSoC4/RedPWM.c ****         /* Initialize counter value */
  79:.\Generated_Source\PSoC4/RedPWM.c ****         #if (RedPWM_CY_TCPWM_V2 && RedPWM_TIMER_UPDOWN_CNT_USED && !RedPWM_CY_TCPWM_4000)
  80:.\Generated_Source\PSoC4/RedPWM.c ****             RedPWM_WriteCounter(1u);
  81:.\Generated_Source\PSoC4/RedPWM.c ****         #elif(RedPWM__COUNT_DOWN == RedPWM_TC_COUNTER_MODE)
  82:.\Generated_Source\PSoC4/RedPWM.c ****             RedPWM_WriteCounter(RedPWM_TC_PERIOD_VALUE);
  83:.\Generated_Source\PSoC4/RedPWM.c ****         #else
  84:.\Generated_Source\PSoC4/RedPWM.c ****             RedPWM_WriteCounter(0u);
  85:.\Generated_Source\PSoC4/RedPWM.c ****         #endif /* (RedPWM_CY_TCPWM_V2 && RedPWM_TIMER_UPDOWN_CNT_USED && !RedPWM_CY_TCPWM_4000) */
  86:.\Generated_Source\PSoC4/RedPWM.c ****     #endif  /* (RedPWM__TIMER == RedPWM_CONFIG) */
  87:.\Generated_Source\PSoC4/RedPWM.c **** 
  88:.\Generated_Source\PSoC4/RedPWM.c ****     #if (RedPWM__PWM_SEL == RedPWM_CONFIG)
  89:.\Generated_Source\PSoC4/RedPWM.c ****         RedPWM_CONTROL_REG = RedPWM_CTRL_PWM_BASE_CONFIG;
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 3


  90:.\Generated_Source\PSoC4/RedPWM.c **** 
  91:.\Generated_Source\PSoC4/RedPWM.c ****         #if (RedPWM__PWM_PR == RedPWM_PWM_MODE)
  92:.\Generated_Source\PSoC4/RedPWM.c ****             RedPWM_CONTROL_REG |= RedPWM_CTRL_PWM_RUN_MODE;
  93:.\Generated_Source\PSoC4/RedPWM.c ****             RedPWM_WriteCounter(RedPWM_PWM_PR_INIT_VALUE);
  94:.\Generated_Source\PSoC4/RedPWM.c ****         #else
  95:.\Generated_Source\PSoC4/RedPWM.c ****             RedPWM_CONTROL_REG |= RedPWM_CTRL_PWM_ALIGN | RedPWM_CTRL_PWM_KILL_EVENT;
  96:.\Generated_Source\PSoC4/RedPWM.c ****             
  97:.\Generated_Source\PSoC4/RedPWM.c ****             /* Initialize counter value */
  98:.\Generated_Source\PSoC4/RedPWM.c ****             #if (RedPWM_CY_TCPWM_V2 && RedPWM_PWM_UPDOWN_CNT_USED && !RedPWM_CY_TCPWM_4000)
  99:.\Generated_Source\PSoC4/RedPWM.c ****                 RedPWM_WriteCounter(1u);
 100:.\Generated_Source\PSoC4/RedPWM.c ****             #elif (RedPWM__RIGHT == RedPWM_PWM_ALIGN)
 101:.\Generated_Source\PSoC4/RedPWM.c ****                 RedPWM_WriteCounter(RedPWM_PWM_PERIOD_VALUE);
 102:.\Generated_Source\PSoC4/RedPWM.c ****             #else 
 103:.\Generated_Source\PSoC4/RedPWM.c ****                 RedPWM_WriteCounter(0u);
 104:.\Generated_Source\PSoC4/RedPWM.c ****             #endif  /* (RedPWM_CY_TCPWM_V2 && RedPWM_PWM_UPDOWN_CNT_USED && !RedPWM_CY_TCPWM_4000) 
 105:.\Generated_Source\PSoC4/RedPWM.c ****         #endif  /* (RedPWM__PWM_PR == RedPWM_PWM_MODE) */
 106:.\Generated_Source\PSoC4/RedPWM.c **** 
 107:.\Generated_Source\PSoC4/RedPWM.c ****         #if (RedPWM__PWM_DT == RedPWM_PWM_MODE)
 108:.\Generated_Source\PSoC4/RedPWM.c ****             RedPWM_CONTROL_REG |= RedPWM_CTRL_PWM_DEAD_TIME_CYCLE;
 109:.\Generated_Source\PSoC4/RedPWM.c ****         #endif  /* (RedPWM__PWM_DT == RedPWM_PWM_MODE) */
 110:.\Generated_Source\PSoC4/RedPWM.c **** 
 111:.\Generated_Source\PSoC4/RedPWM.c ****         #if (RedPWM__PWM == RedPWM_PWM_MODE)
 112:.\Generated_Source\PSoC4/RedPWM.c ****             RedPWM_CONTROL_REG |= RedPWM_CTRL_PWM_PRESCALER;
 113:.\Generated_Source\PSoC4/RedPWM.c ****         #endif  /* (RedPWM__PWM == RedPWM_PWM_MODE) */
 114:.\Generated_Source\PSoC4/RedPWM.c **** 
 115:.\Generated_Source\PSoC4/RedPWM.c ****         /* Set values from customizer to CTRL1 */
 116:.\Generated_Source\PSoC4/RedPWM.c ****         RedPWM_TRIG_CONTROL1_REG  = RedPWM_PWM_SIGNALS_MODES;
 117:.\Generated_Source\PSoC4/RedPWM.c ****     
 118:.\Generated_Source\PSoC4/RedPWM.c ****         /* Set values from customizer to INTR */
 119:.\Generated_Source\PSoC4/RedPWM.c ****         RedPWM_SetInterruptMode(RedPWM_PWM_INTERRUPT_MASK);
 120:.\Generated_Source\PSoC4/RedPWM.c **** 
 121:.\Generated_Source\PSoC4/RedPWM.c ****         /* Set values from customizer to CTRL2 */
 122:.\Generated_Source\PSoC4/RedPWM.c ****         #if (RedPWM__PWM_PR == RedPWM_PWM_MODE)
 123:.\Generated_Source\PSoC4/RedPWM.c ****             RedPWM_TRIG_CONTROL2_REG =
 124:.\Generated_Source\PSoC4/RedPWM.c ****                     (RedPWM_CC_MATCH_NO_CHANGE    |
 125:.\Generated_Source\PSoC4/RedPWM.c ****                     RedPWM_OVERLOW_NO_CHANGE      |
 126:.\Generated_Source\PSoC4/RedPWM.c ****                     RedPWM_UNDERFLOW_NO_CHANGE);
 127:.\Generated_Source\PSoC4/RedPWM.c ****         #else
 128:.\Generated_Source\PSoC4/RedPWM.c ****             #if (RedPWM__LEFT == RedPWM_PWM_ALIGN)
 129:.\Generated_Source\PSoC4/RedPWM.c ****                 RedPWM_TRIG_CONTROL2_REG = RedPWM_PWM_MODE_LEFT;
 130:.\Generated_Source\PSoC4/RedPWM.c ****             #endif  /* ( RedPWM_PWM_LEFT == RedPWM_PWM_ALIGN) */
 131:.\Generated_Source\PSoC4/RedPWM.c **** 
 132:.\Generated_Source\PSoC4/RedPWM.c ****             #if (RedPWM__RIGHT == RedPWM_PWM_ALIGN)
 133:.\Generated_Source\PSoC4/RedPWM.c ****                 RedPWM_TRIG_CONTROL2_REG = RedPWM_PWM_MODE_RIGHT;
 134:.\Generated_Source\PSoC4/RedPWM.c ****             #endif  /* ( RedPWM_PWM_RIGHT == RedPWM_PWM_ALIGN) */
 135:.\Generated_Source\PSoC4/RedPWM.c **** 
 136:.\Generated_Source\PSoC4/RedPWM.c ****             #if (RedPWM__CENTER == RedPWM_PWM_ALIGN)
 137:.\Generated_Source\PSoC4/RedPWM.c ****                 RedPWM_TRIG_CONTROL2_REG = RedPWM_PWM_MODE_CENTER;
 138:.\Generated_Source\PSoC4/RedPWM.c ****             #endif  /* ( RedPWM_PWM_CENTER == RedPWM_PWM_ALIGN) */
 139:.\Generated_Source\PSoC4/RedPWM.c **** 
 140:.\Generated_Source\PSoC4/RedPWM.c ****             #if (RedPWM__ASYMMETRIC == RedPWM_PWM_ALIGN)
 141:.\Generated_Source\PSoC4/RedPWM.c ****                 RedPWM_TRIG_CONTROL2_REG = RedPWM_PWM_MODE_ASYM;
 142:.\Generated_Source\PSoC4/RedPWM.c ****             #endif  /* (RedPWM__ASYMMETRIC == RedPWM_PWM_ALIGN) */
 143:.\Generated_Source\PSoC4/RedPWM.c ****         #endif  /* (RedPWM__PWM_PR == RedPWM_PWM_MODE) */
 144:.\Generated_Source\PSoC4/RedPWM.c **** 
 145:.\Generated_Source\PSoC4/RedPWM.c ****         /* Set other values from customizer */
 146:.\Generated_Source\PSoC4/RedPWM.c ****         RedPWM_WritePeriod(RedPWM_PWM_PERIOD_VALUE );
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 4


 147:.\Generated_Source\PSoC4/RedPWM.c ****         RedPWM_WriteCompare(RedPWM_PWM_COMPARE_VALUE);
 148:.\Generated_Source\PSoC4/RedPWM.c **** 
 149:.\Generated_Source\PSoC4/RedPWM.c ****         #if (1u == RedPWM_PWM_COMPARE_SWAP)
 150:.\Generated_Source\PSoC4/RedPWM.c ****             RedPWM_SetCompareSwap(1u);
 151:.\Generated_Source\PSoC4/RedPWM.c ****             RedPWM_WriteCompareBuf(RedPWM_PWM_COMPARE_BUF_VALUE);
 152:.\Generated_Source\PSoC4/RedPWM.c ****         #endif  /* (1u == RedPWM_PWM_COMPARE_SWAP) */
 153:.\Generated_Source\PSoC4/RedPWM.c **** 
 154:.\Generated_Source\PSoC4/RedPWM.c ****         #if (1u == RedPWM_PWM_PERIOD_SWAP)
 155:.\Generated_Source\PSoC4/RedPWM.c ****             RedPWM_SetPeriodSwap(1u);
 156:.\Generated_Source\PSoC4/RedPWM.c ****             RedPWM_WritePeriodBuf(RedPWM_PWM_PERIOD_BUF_VALUE);
 157:.\Generated_Source\PSoC4/RedPWM.c ****         #endif  /* (1u == RedPWM_PWM_PERIOD_SWAP) */
 158:.\Generated_Source\PSoC4/RedPWM.c ****     #endif  /* (RedPWM__PWM_SEL == RedPWM_CONFIG) */
 159:.\Generated_Source\PSoC4/RedPWM.c ****     
 160:.\Generated_Source\PSoC4/RedPWM.c **** }
 161:.\Generated_Source\PSoC4/RedPWM.c **** 
 162:.\Generated_Source\PSoC4/RedPWM.c **** 
 163:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_Enable
 165:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/RedPWM.c **** *
 167:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
 168:.\Generated_Source\PSoC4/RedPWM.c **** *  Enables the RedPWM.
 169:.\Generated_Source\PSoC4/RedPWM.c **** *
 170:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
 171:.\Generated_Source\PSoC4/RedPWM.c **** *  None
 172:.\Generated_Source\PSoC4/RedPWM.c **** *
 173:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
 174:.\Generated_Source\PSoC4/RedPWM.c **** *  None
 175:.\Generated_Source\PSoC4/RedPWM.c **** *
 176:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
 177:.\Generated_Source\PSoC4/RedPWM.c **** void RedPWM_Enable(void)
 178:.\Generated_Source\PSoC4/RedPWM.c **** {
 179:.\Generated_Source\PSoC4/RedPWM.c ****     uint8 enableInterrupts;
 180:.\Generated_Source\PSoC4/RedPWM.c **** 
 181:.\Generated_Source\PSoC4/RedPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 182:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_BLOCK_CONTROL_REG |= RedPWM_MASK;
 183:.\Generated_Source\PSoC4/RedPWM.c ****     CyExitCriticalSection(enableInterrupts);
 184:.\Generated_Source\PSoC4/RedPWM.c **** 
 185:.\Generated_Source\PSoC4/RedPWM.c ****     /* Start Timer or PWM if start input is absent */
 186:.\Generated_Source\PSoC4/RedPWM.c ****     #if (RedPWM__PWM_SEL == RedPWM_CONFIG)
 187:.\Generated_Source\PSoC4/RedPWM.c ****         #if (0u == RedPWM_PWM_START_SIGNAL_PRESENT)
 188:.\Generated_Source\PSoC4/RedPWM.c ****             RedPWM_TriggerCommand(RedPWM_MASK, RedPWM_CMD_START);
 189:.\Generated_Source\PSoC4/RedPWM.c ****         #endif /* (0u == RedPWM_PWM_START_SIGNAL_PRESENT) */
 190:.\Generated_Source\PSoC4/RedPWM.c ****     #endif /* (RedPWM__PWM_SEL == RedPWM_CONFIG) */
 191:.\Generated_Source\PSoC4/RedPWM.c **** 
 192:.\Generated_Source\PSoC4/RedPWM.c ****     #if (RedPWM__TIMER == RedPWM_CONFIG)
 193:.\Generated_Source\PSoC4/RedPWM.c ****         #if (0u == RedPWM_TC_START_SIGNAL_PRESENT)
 194:.\Generated_Source\PSoC4/RedPWM.c ****             RedPWM_TriggerCommand(RedPWM_MASK, RedPWM_CMD_START);
 195:.\Generated_Source\PSoC4/RedPWM.c ****         #endif /* (0u == RedPWM_TC_START_SIGNAL_PRESENT) */
 196:.\Generated_Source\PSoC4/RedPWM.c ****     #endif /* (RedPWM__TIMER == RedPWM_CONFIG) */
 197:.\Generated_Source\PSoC4/RedPWM.c ****     
 198:.\Generated_Source\PSoC4/RedPWM.c ****     #if (RedPWM__QUAD == RedPWM_CONFIG)
 199:.\Generated_Source\PSoC4/RedPWM.c ****         #if (0u != RedPWM_QUAD_AUTO_START)
 200:.\Generated_Source\PSoC4/RedPWM.c ****             RedPWM_TriggerCommand(RedPWM_MASK, RedPWM_CMD_RELOAD);
 201:.\Generated_Source\PSoC4/RedPWM.c ****         #endif /* (0u != RedPWM_QUAD_AUTO_START) */
 202:.\Generated_Source\PSoC4/RedPWM.c ****     #endif  /* (RedPWM__QUAD == RedPWM_CONFIG) */
 203:.\Generated_Source\PSoC4/RedPWM.c **** }
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 5


 204:.\Generated_Source\PSoC4/RedPWM.c **** 
 205:.\Generated_Source\PSoC4/RedPWM.c **** 
 206:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
 207:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_Start
 208:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
 209:.\Generated_Source\PSoC4/RedPWM.c **** *
 210:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
 211:.\Generated_Source\PSoC4/RedPWM.c **** *  Initializes the RedPWM with default customizer
 212:.\Generated_Source\PSoC4/RedPWM.c **** *  values when called the first time and enables the RedPWM.
 213:.\Generated_Source\PSoC4/RedPWM.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:.\Generated_Source\PSoC4/RedPWM.c **** *  just enabled.
 215:.\Generated_Source\PSoC4/RedPWM.c **** *
 216:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
 217:.\Generated_Source\PSoC4/RedPWM.c **** *  None
 218:.\Generated_Source\PSoC4/RedPWM.c **** *
 219:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
 220:.\Generated_Source\PSoC4/RedPWM.c **** *  None
 221:.\Generated_Source\PSoC4/RedPWM.c **** *
 222:.\Generated_Source\PSoC4/RedPWM.c **** * Global variables:
 223:.\Generated_Source\PSoC4/RedPWM.c **** *  RedPWM_initVar: global variable is used to indicate initial
 224:.\Generated_Source\PSoC4/RedPWM.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:.\Generated_Source\PSoC4/RedPWM.c **** *  to 1 the first time RedPWM_Start() is called. This allows
 226:.\Generated_Source\PSoC4/RedPWM.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:.\Generated_Source\PSoC4/RedPWM.c **** *  calls to the RedPWM_Start() routine.
 228:.\Generated_Source\PSoC4/RedPWM.c **** *
 229:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
 230:.\Generated_Source\PSoC4/RedPWM.c **** void RedPWM_Start(void)
 231:.\Generated_Source\PSoC4/RedPWM.c **** {
 232:.\Generated_Source\PSoC4/RedPWM.c ****     if (0u == RedPWM_initVar)
 233:.\Generated_Source\PSoC4/RedPWM.c ****     {
 234:.\Generated_Source\PSoC4/RedPWM.c ****         RedPWM_Init();
 235:.\Generated_Source\PSoC4/RedPWM.c ****         RedPWM_initVar = 1u;
 236:.\Generated_Source\PSoC4/RedPWM.c ****     }
 237:.\Generated_Source\PSoC4/RedPWM.c **** 
 238:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_Enable();
 239:.\Generated_Source\PSoC4/RedPWM.c **** }
 240:.\Generated_Source\PSoC4/RedPWM.c **** 
 241:.\Generated_Source\PSoC4/RedPWM.c **** 
 242:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
 243:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_Stop
 244:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
 245:.\Generated_Source\PSoC4/RedPWM.c **** *
 246:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
 247:.\Generated_Source\PSoC4/RedPWM.c **** *  Disables the RedPWM.
 248:.\Generated_Source\PSoC4/RedPWM.c **** *
 249:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
 250:.\Generated_Source\PSoC4/RedPWM.c **** *  None
 251:.\Generated_Source\PSoC4/RedPWM.c **** *
 252:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
 253:.\Generated_Source\PSoC4/RedPWM.c **** *  None
 254:.\Generated_Source\PSoC4/RedPWM.c **** *
 255:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
 256:.\Generated_Source\PSoC4/RedPWM.c **** void RedPWM_Stop(void)
 257:.\Generated_Source\PSoC4/RedPWM.c **** {
  26              		.loc 1 257 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 6


  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 3, -8
  31              		.cfi_offset 14, -4
 258:.\Generated_Source\PSoC4/RedPWM.c ****     uint8 enableInterrupts;
 259:.\Generated_Source\PSoC4/RedPWM.c **** 
 260:.\Generated_Source\PSoC4/RedPWM.c ****     enableInterrupts = CyEnterCriticalSection();
  32              		.loc 1 260 0
  33 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  34              	.LVL0:
 261:.\Generated_Source\PSoC4/RedPWM.c **** 
 262:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_BLOCK_CONTROL_REG &= (uint32)~RedPWM_MASK;
  35              		.loc 1 262 0
  36 0006 044A     		ldr	r2, .L2
  37 0008 1368     		ldr	r3, [r2]
  38 000a 0421     		mov	r1, #4
  39 000c 8B43     		bic	r3, r1
  40 000e 1360     		str	r3, [r2]
 263:.\Generated_Source\PSoC4/RedPWM.c **** 
 264:.\Generated_Source\PSoC4/RedPWM.c ****     CyExitCriticalSection(enableInterrupts);
  41              		.loc 1 264 0
  42 0010 FFF7FEFF 		bl	CyExitCriticalSection
  43              	.LVL1:
 265:.\Generated_Source\PSoC4/RedPWM.c **** }
  44              		.loc 1 265 0
  45              		@ sp needed
  46 0014 08BD     		pop	{r3, pc}
  47              	.L3:
  48 0016 C046     		.align	2
  49              	.L2:
  50 0018 00000540 		.word	1074069504
  51              		.cfi_endproc
  52              	.LFE3:
  53              		.size	RedPWM_Stop, .-RedPWM_Stop
  54              		.section	.text.RedPWM_SetMode,"ax",%progbits
  55              		.align	2
  56              		.global	RedPWM_SetMode
  57              		.code	16
  58              		.thumb_func
  59              		.type	RedPWM_SetMode, %function
  60              	RedPWM_SetMode:
  61              	.LFB4:
 266:.\Generated_Source\PSoC4/RedPWM.c **** 
 267:.\Generated_Source\PSoC4/RedPWM.c **** 
 268:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
 269:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_SetMode
 270:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
 271:.\Generated_Source\PSoC4/RedPWM.c **** *
 272:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
 273:.\Generated_Source\PSoC4/RedPWM.c **** *  Sets the operation mode of the RedPWM. This function is used when
 274:.\Generated_Source\PSoC4/RedPWM.c **** *  configured as a generic RedPWM and the actual mode of operation is
 275:.\Generated_Source\PSoC4/RedPWM.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:.\Generated_Source\PSoC4/RedPWM.c **** *
 277:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
 278:.\Generated_Source\PSoC4/RedPWM.c **** *  mode: Mode for the RedPWM to operate in
 279:.\Generated_Source\PSoC4/RedPWM.c **** *   Values:
 280:.\Generated_Source\PSoC4/RedPWM.c **** *   - RedPWM_MODE_TIMER_COMPARE - Timer / Counter with
 281:.\Generated_Source\PSoC4/RedPWM.c **** *                                                 compare capability
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 7


 282:.\Generated_Source\PSoC4/RedPWM.c **** *         - RedPWM_MODE_TIMER_CAPTURE - Timer / Counter with
 283:.\Generated_Source\PSoC4/RedPWM.c **** *                                                 capture capability
 284:.\Generated_Source\PSoC4/RedPWM.c **** *         - RedPWM_MODE_QUAD - Quadrature decoder
 285:.\Generated_Source\PSoC4/RedPWM.c **** *         - RedPWM_MODE_PWM - PWM
 286:.\Generated_Source\PSoC4/RedPWM.c **** *         - RedPWM_MODE_PWM_DT - PWM with dead time
 287:.\Generated_Source\PSoC4/RedPWM.c **** *         - RedPWM_MODE_PWM_PR - PWM with pseudo random capability
 288:.\Generated_Source\PSoC4/RedPWM.c **** *
 289:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
 290:.\Generated_Source\PSoC4/RedPWM.c **** *  None
 291:.\Generated_Source\PSoC4/RedPWM.c **** *
 292:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
 293:.\Generated_Source\PSoC4/RedPWM.c **** void RedPWM_SetMode(uint32 mode)
 294:.\Generated_Source\PSoC4/RedPWM.c **** {
  62              		.loc 1 294 0
  63              		.cfi_startproc
  64              	.LVL2:
  65 0000 10B5     		push	{r4, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 4, -8
  68              		.cfi_offset 14, -4
  69 0002 041C     		mov	r4, r0
 295:.\Generated_Source\PSoC4/RedPWM.c ****     uint8 enableInterrupts;
 296:.\Generated_Source\PSoC4/RedPWM.c **** 
 297:.\Generated_Source\PSoC4/RedPWM.c ****     enableInterrupts = CyEnterCriticalSection();
  70              		.loc 1 297 0
  71 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  72              	.LVL3:
 298:.\Generated_Source\PSoC4/RedPWM.c **** 
 299:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_CONTROL_REG &= (uint32)~RedPWM_MODE_MASK;
  73              		.loc 1 299 0
  74 0008 054B     		ldr	r3, .L5
  75 000a 1968     		ldr	r1, [r3]
  76 000c 054A     		ldr	r2, .L5+4
  77 000e 0A40     		and	r2, r1
  78 0010 1A60     		str	r2, [r3]
 300:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_CONTROL_REG |= mode;
  79              		.loc 1 300 0
  80 0012 1A68     		ldr	r2, [r3]
  81 0014 1443     		orr	r4, r2
  82              	.LVL4:
  83 0016 1C60     		str	r4, [r3]
 301:.\Generated_Source\PSoC4/RedPWM.c **** 
 302:.\Generated_Source\PSoC4/RedPWM.c ****     CyExitCriticalSection(enableInterrupts);
  84              		.loc 1 302 0
  85 0018 FFF7FEFF 		bl	CyExitCriticalSection
  86              	.LVL5:
 303:.\Generated_Source\PSoC4/RedPWM.c **** }
  87              		.loc 1 303 0
  88              		@ sp needed
  89 001c 10BD     		pop	{r4, pc}
  90              	.L6:
  91 001e C046     		.align	2
  92              	.L5:
  93 0020 80010540 		.word	1074069888
  94 0024 FFFFFFF8 		.word	-117440513
  95              		.cfi_endproc
  96              	.LFE4:
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 8


  97              		.size	RedPWM_SetMode, .-RedPWM_SetMode
  98              		.section	.text.RedPWM_SetQDMode,"ax",%progbits
  99              		.align	2
 100              		.global	RedPWM_SetQDMode
 101              		.code	16
 102              		.thumb_func
 103              		.type	RedPWM_SetQDMode, %function
 104              	RedPWM_SetQDMode:
 105              	.LFB5:
 304:.\Generated_Source\PSoC4/RedPWM.c **** 
 305:.\Generated_Source\PSoC4/RedPWM.c **** 
 306:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
 307:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_SetQDMode
 308:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
 309:.\Generated_Source\PSoC4/RedPWM.c **** *
 310:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
 311:.\Generated_Source\PSoC4/RedPWM.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:.\Generated_Source\PSoC4/RedPWM.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:.\Generated_Source\PSoC4/RedPWM.c **** *
 314:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
 315:.\Generated_Source\PSoC4/RedPWM.c **** *  qdMode: Quadrature Decoder mode
 316:.\Generated_Source\PSoC4/RedPWM.c **** *   Values:
 317:.\Generated_Source\PSoC4/RedPWM.c **** *         - RedPWM_MODE_X1 - Counts on phi 1 rising
 318:.\Generated_Source\PSoC4/RedPWM.c **** *         - RedPWM_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:.\Generated_Source\PSoC4/RedPWM.c **** *         - RedPWM_MODE_X4 - Counts on both edges of phi1 and phi2
 320:.\Generated_Source\PSoC4/RedPWM.c **** *                                        (4x faster)
 321:.\Generated_Source\PSoC4/RedPWM.c **** *
 322:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
 323:.\Generated_Source\PSoC4/RedPWM.c **** *  None
 324:.\Generated_Source\PSoC4/RedPWM.c **** *
 325:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
 326:.\Generated_Source\PSoC4/RedPWM.c **** void RedPWM_SetQDMode(uint32 qdMode)
 327:.\Generated_Source\PSoC4/RedPWM.c **** {
 106              		.loc 1 327 0
 107              		.cfi_startproc
 108              	.LVL6:
 109 0000 10B5     		push	{r4, lr}
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 4, -8
 112              		.cfi_offset 14, -4
 113 0002 041C     		mov	r4, r0
 328:.\Generated_Source\PSoC4/RedPWM.c ****     uint8 enableInterrupts;
 329:.\Generated_Source\PSoC4/RedPWM.c **** 
 330:.\Generated_Source\PSoC4/RedPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 114              		.loc 1 330 0
 115 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 116              	.LVL7:
 331:.\Generated_Source\PSoC4/RedPWM.c **** 
 332:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_CONTROL_REG &= (uint32)~RedPWM_QUAD_MODE_MASK;
 117              		.loc 1 332 0
 118 0008 054B     		ldr	r3, .L8
 119 000a 1968     		ldr	r1, [r3]
 120 000c 054A     		ldr	r2, .L8+4
 121 000e 0A40     		and	r2, r1
 122 0010 1A60     		str	r2, [r3]
 333:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_CONTROL_REG |= qdMode;
 123              		.loc 1 333 0
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 9


 124 0012 1A68     		ldr	r2, [r3]
 125 0014 1443     		orr	r4, r2
 126              	.LVL8:
 127 0016 1C60     		str	r4, [r3]
 334:.\Generated_Source\PSoC4/RedPWM.c **** 
 335:.\Generated_Source\PSoC4/RedPWM.c ****     CyExitCriticalSection(enableInterrupts);
 128              		.loc 1 335 0
 129 0018 FFF7FEFF 		bl	CyExitCriticalSection
 130              	.LVL9:
 336:.\Generated_Source\PSoC4/RedPWM.c **** }
 131              		.loc 1 336 0
 132              		@ sp needed
 133 001c 10BD     		pop	{r4, pc}
 134              	.L9:
 135 001e C046     		.align	2
 136              	.L8:
 137 0020 80010540 		.word	1074069888
 138 0024 FFFF8FFF 		.word	-7340033
 139              		.cfi_endproc
 140              	.LFE5:
 141              		.size	RedPWM_SetQDMode, .-RedPWM_SetQDMode
 142              		.section	.text.RedPWM_SetPrescaler,"ax",%progbits
 143              		.align	2
 144              		.global	RedPWM_SetPrescaler
 145              		.code	16
 146              		.thumb_func
 147              		.type	RedPWM_SetPrescaler, %function
 148              	RedPWM_SetPrescaler:
 149              	.LFB6:
 337:.\Generated_Source\PSoC4/RedPWM.c **** 
 338:.\Generated_Source\PSoC4/RedPWM.c **** 
 339:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
 340:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_SetPrescaler
 341:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
 342:.\Generated_Source\PSoC4/RedPWM.c **** *
 343:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
 344:.\Generated_Source\PSoC4/RedPWM.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:.\Generated_Source\PSoC4/RedPWM.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:.\Generated_Source\PSoC4/RedPWM.c **** *
 347:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
 348:.\Generated_Source\PSoC4/RedPWM.c **** *  prescaler: Prescaler divider value
 349:.\Generated_Source\PSoC4/RedPWM.c **** *   Values:
 350:.\Generated_Source\PSoC4/RedPWM.c **** *         - RedPWM_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:.\Generated_Source\PSoC4/RedPWM.c **** *         - RedPWM_PRESCALE_DIVBY2    - Divide by 2
 352:.\Generated_Source\PSoC4/RedPWM.c **** *         - RedPWM_PRESCALE_DIVBY4    - Divide by 4
 353:.\Generated_Source\PSoC4/RedPWM.c **** *         - RedPWM_PRESCALE_DIVBY8    - Divide by 8
 354:.\Generated_Source\PSoC4/RedPWM.c **** *         - RedPWM_PRESCALE_DIVBY16   - Divide by 16
 355:.\Generated_Source\PSoC4/RedPWM.c **** *         - RedPWM_PRESCALE_DIVBY32   - Divide by 32
 356:.\Generated_Source\PSoC4/RedPWM.c **** *         - RedPWM_PRESCALE_DIVBY64   - Divide by 64
 357:.\Generated_Source\PSoC4/RedPWM.c **** *         - RedPWM_PRESCALE_DIVBY128  - Divide by 128
 358:.\Generated_Source\PSoC4/RedPWM.c **** *
 359:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
 360:.\Generated_Source\PSoC4/RedPWM.c **** *  None
 361:.\Generated_Source\PSoC4/RedPWM.c **** *
 362:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
 363:.\Generated_Source\PSoC4/RedPWM.c **** void RedPWM_SetPrescaler(uint32 prescaler)
 364:.\Generated_Source\PSoC4/RedPWM.c **** {
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 10


 150              		.loc 1 364 0
 151              		.cfi_startproc
 152              	.LVL10:
 153 0000 10B5     		push	{r4, lr}
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 4, -8
 156              		.cfi_offset 14, -4
 157 0002 041C     		mov	r4, r0
 365:.\Generated_Source\PSoC4/RedPWM.c ****     uint8 enableInterrupts;
 366:.\Generated_Source\PSoC4/RedPWM.c **** 
 367:.\Generated_Source\PSoC4/RedPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 158              		.loc 1 367 0
 159 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 160              	.LVL11:
 368:.\Generated_Source\PSoC4/RedPWM.c **** 
 369:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_CONTROL_REG &= (uint32)~RedPWM_PRESCALER_MASK;
 161              		.loc 1 369 0
 162 0008 054B     		ldr	r3, .L11
 163 000a 1968     		ldr	r1, [r3]
 164 000c 054A     		ldr	r2, .L11+4
 165 000e 0A40     		and	r2, r1
 166 0010 1A60     		str	r2, [r3]
 370:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_CONTROL_REG |= prescaler;
 167              		.loc 1 370 0
 168 0012 1A68     		ldr	r2, [r3]
 169 0014 1443     		orr	r4, r2
 170              	.LVL12:
 171 0016 1C60     		str	r4, [r3]
 371:.\Generated_Source\PSoC4/RedPWM.c **** 
 372:.\Generated_Source\PSoC4/RedPWM.c ****     CyExitCriticalSection(enableInterrupts);
 172              		.loc 1 372 0
 173 0018 FFF7FEFF 		bl	CyExitCriticalSection
 174              	.LVL13:
 373:.\Generated_Source\PSoC4/RedPWM.c **** }
 175              		.loc 1 373 0
 176              		@ sp needed
 177 001c 10BD     		pop	{r4, pc}
 178              	.L12:
 179 001e C046     		.align	2
 180              	.L11:
 181 0020 80010540 		.word	1074069888
 182 0024 FF00FFFF 		.word	-65281
 183              		.cfi_endproc
 184              	.LFE6:
 185              		.size	RedPWM_SetPrescaler, .-RedPWM_SetPrescaler
 186              		.section	.text.RedPWM_SetOneShot,"ax",%progbits
 187              		.align	2
 188              		.global	RedPWM_SetOneShot
 189              		.code	16
 190              		.thumb_func
 191              		.type	RedPWM_SetOneShot, %function
 192              	RedPWM_SetOneShot:
 193              	.LFB7:
 374:.\Generated_Source\PSoC4/RedPWM.c **** 
 375:.\Generated_Source\PSoC4/RedPWM.c **** 
 376:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
 377:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_SetOneShot
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 11


 378:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
 379:.\Generated_Source\PSoC4/RedPWM.c **** *
 380:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
 381:.\Generated_Source\PSoC4/RedPWM.c **** *  Writes the register that controls whether the RedPWM runs
 382:.\Generated_Source\PSoC4/RedPWM.c **** *  continuously or stops when terminal count is reached.  By default the
 383:.\Generated_Source\PSoC4/RedPWM.c **** *  RedPWM operates in the continuous mode.
 384:.\Generated_Source\PSoC4/RedPWM.c **** *
 385:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
 386:.\Generated_Source\PSoC4/RedPWM.c **** *  oneShotEnable
 387:.\Generated_Source\PSoC4/RedPWM.c **** *   Values:
 388:.\Generated_Source\PSoC4/RedPWM.c **** *     - 0 - Continuous
 389:.\Generated_Source\PSoC4/RedPWM.c **** *     - 1 - Enable One Shot
 390:.\Generated_Source\PSoC4/RedPWM.c **** *
 391:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
 392:.\Generated_Source\PSoC4/RedPWM.c **** *  None
 393:.\Generated_Source\PSoC4/RedPWM.c **** *
 394:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
 395:.\Generated_Source\PSoC4/RedPWM.c **** void RedPWM_SetOneShot(uint32 oneShotEnable)
 396:.\Generated_Source\PSoC4/RedPWM.c **** {
 194              		.loc 1 396 0
 195              		.cfi_startproc
 196              	.LVL14:
 197 0000 10B5     		push	{r4, lr}
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 4, -8
 200              		.cfi_offset 14, -4
 201 0002 041C     		mov	r4, r0
 397:.\Generated_Source\PSoC4/RedPWM.c ****     uint8 enableInterrupts;
 398:.\Generated_Source\PSoC4/RedPWM.c **** 
 399:.\Generated_Source\PSoC4/RedPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 202              		.loc 1 399 0
 203 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 204              	.LVL15:
 400:.\Generated_Source\PSoC4/RedPWM.c **** 
 401:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_CONTROL_REG &= (uint32)~RedPWM_ONESHOT_MASK;
 205              		.loc 1 401 0
 206 0008 064B     		ldr	r3, .L14
 207 000a 1968     		ldr	r1, [r3]
 208 000c 064A     		ldr	r2, .L14+4
 209 000e 0A40     		and	r2, r1
 210 0010 1A60     		str	r2, [r3]
 402:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_CONTROL_REG |= ((uint32)((oneShotEnable & RedPWM_1BIT_MASK) <<
 211              		.loc 1 402 0
 212 0012 1A68     		ldr	r2, [r3]
 213 0014 0121     		mov	r1, #1
 214 0016 0C40     		and	r4, r1
 215              	.LVL16:
 216 0018 A404     		lsl	r4, r4, #18
 217 001a 1443     		orr	r4, r2
 218 001c 1C60     		str	r4, [r3]
 403:.\Generated_Source\PSoC4/RedPWM.c ****                                                                RedPWM_ONESHOT_SHIFT));
 404:.\Generated_Source\PSoC4/RedPWM.c **** 
 405:.\Generated_Source\PSoC4/RedPWM.c ****     CyExitCriticalSection(enableInterrupts);
 219              		.loc 1 405 0
 220 001e FFF7FEFF 		bl	CyExitCriticalSection
 221              	.LVL17:
 406:.\Generated_Source\PSoC4/RedPWM.c **** }
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 12


 222              		.loc 1 406 0
 223              		@ sp needed
 224 0022 10BD     		pop	{r4, pc}
 225              	.L15:
 226              		.align	2
 227              	.L14:
 228 0024 80010540 		.word	1074069888
 229 0028 FFFFFBFF 		.word	-262145
 230              		.cfi_endproc
 231              	.LFE7:
 232              		.size	RedPWM_SetOneShot, .-RedPWM_SetOneShot
 233              		.section	.text.RedPWM_SetPWMMode,"ax",%progbits
 234              		.align	2
 235              		.global	RedPWM_SetPWMMode
 236              		.code	16
 237              		.thumb_func
 238              		.type	RedPWM_SetPWMMode, %function
 239              	RedPWM_SetPWMMode:
 240              	.LFB8:
 407:.\Generated_Source\PSoC4/RedPWM.c **** 
 408:.\Generated_Source\PSoC4/RedPWM.c **** 
 409:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
 410:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_SetPWMMode
 411:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
 412:.\Generated_Source\PSoC4/RedPWM.c **** *
 413:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
 414:.\Generated_Source\PSoC4/RedPWM.c **** *  Writes the control register that determines what mode of operation the PWM
 415:.\Generated_Source\PSoC4/RedPWM.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:.\Generated_Source\PSoC4/RedPWM.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:.\Generated_Source\PSoC4/RedPWM.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:.\Generated_Source\PSoC4/RedPWM.c **** *  the mode.
 419:.\Generated_Source\PSoC4/RedPWM.c **** *
 420:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
 421:.\Generated_Source\PSoC4/RedPWM.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:.\Generated_Source\PSoC4/RedPWM.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:.\Generated_Source\PSoC4/RedPWM.c **** *   Values:
 424:.\Generated_Source\PSoC4/RedPWM.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:.\Generated_Source\PSoC4/RedPWM.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:.\Generated_Source\PSoC4/RedPWM.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:.\Generated_Source\PSoC4/RedPWM.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:.\Generated_Source\PSoC4/RedPWM.c **** *     - OVERLOW_SET         - Set on overflow
 429:.\Generated_Source\PSoC4/RedPWM.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 430:.\Generated_Source\PSoC4/RedPWM.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:.\Generated_Source\PSoC4/RedPWM.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:.\Generated_Source\PSoC4/RedPWM.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:.\Generated_Source\PSoC4/RedPWM.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:.\Generated_Source\PSoC4/RedPWM.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:.\Generated_Source\PSoC4/RedPWM.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:.\Generated_Source\PSoC4/RedPWM.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:.\Generated_Source\PSoC4/RedPWM.c **** *                             with up counting mode
 438:.\Generated_Source\PSoC4/RedPWM.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:.\Generated_Source\PSoC4/RedPWM.c **** *                             with down counting mode
 440:.\Generated_Source\PSoC4/RedPWM.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:.\Generated_Source\PSoC4/RedPWM.c **** *                             combined with up/down 0 mode
 442:.\Generated_Source\PSoC4/RedPWM.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:.\Generated_Source\PSoC4/RedPWM.c **** *                             with up/down 1 mode
 444:.\Generated_Source\PSoC4/RedPWM.c **** *
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 13


 445:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
 446:.\Generated_Source\PSoC4/RedPWM.c **** *  None
 447:.\Generated_Source\PSoC4/RedPWM.c **** *
 448:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
 449:.\Generated_Source\PSoC4/RedPWM.c **** void RedPWM_SetPWMMode(uint32 modeMask)
 450:.\Generated_Source\PSoC4/RedPWM.c **** {
 241              		.loc 1 450 0
 242              		.cfi_startproc
 243              	.LVL18:
 451:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_TRIG_CONTROL2_REG = (modeMask & RedPWM_6BIT_MASK);
 244              		.loc 1 451 0
 245 0000 3F23     		mov	r3, #63
 246 0002 1840     		and	r0, r3
 247              	.LVL19:
 248 0004 014B     		ldr	r3, .L17
 249 0006 1860     		str	r0, [r3]
 452:.\Generated_Source\PSoC4/RedPWM.c **** }
 250              		.loc 1 452 0
 251              		@ sp needed
 252 0008 7047     		bx	lr
 253              	.L18:
 254 000a C046     		.align	2
 255              	.L17:
 256 000c A8010540 		.word	1074069928
 257              		.cfi_endproc
 258              	.LFE8:
 259              		.size	RedPWM_SetPWMMode, .-RedPWM_SetPWMMode
 260              		.section	.text.RedPWM_SetPWMSyncKill,"ax",%progbits
 261              		.align	2
 262              		.global	RedPWM_SetPWMSyncKill
 263              		.code	16
 264              		.thumb_func
 265              		.type	RedPWM_SetPWMSyncKill, %function
 266              	RedPWM_SetPWMSyncKill:
 267              	.LFB9:
 453:.\Generated_Source\PSoC4/RedPWM.c **** 
 454:.\Generated_Source\PSoC4/RedPWM.c **** 
 455:.\Generated_Source\PSoC4/RedPWM.c **** 
 456:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
 457:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_SetPWMSyncKill
 458:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
 459:.\Generated_Source\PSoC4/RedPWM.c **** *
 460:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
 461:.\Generated_Source\PSoC4/RedPWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:.\Generated_Source\PSoC4/RedPWM.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:.\Generated_Source\PSoC4/RedPWM.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:.\Generated_Source\PSoC4/RedPWM.c **** *  and PWM with dead time modes.
 465:.\Generated_Source\PSoC4/RedPWM.c **** *
 466:.\Generated_Source\PSoC4/RedPWM.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:.\Generated_Source\PSoC4/RedPWM.c **** *  signals until the next terminal count.
 468:.\Generated_Source\PSoC4/RedPWM.c **** *
 469:.\Generated_Source\PSoC4/RedPWM.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:.\Generated_Source\PSoC4/RedPWM.c **** *  signals when the kill signal is present.  This mode should only be used
 471:.\Generated_Source\PSoC4/RedPWM.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:.\Generated_Source\PSoC4/RedPWM.c **** *  (Level sensitive signal).
 473:.\Generated_Source\PSoC4/RedPWM.c **** 
 474:.\Generated_Source\PSoC4/RedPWM.c **** *
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 14


 475:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
 476:.\Generated_Source\PSoC4/RedPWM.c **** *  syncKillEnable
 477:.\Generated_Source\PSoC4/RedPWM.c **** *   Values:
 478:.\Generated_Source\PSoC4/RedPWM.c **** *     - 0 - Asynchronous
 479:.\Generated_Source\PSoC4/RedPWM.c **** *     - 1 - Synchronous
 480:.\Generated_Source\PSoC4/RedPWM.c **** *
 481:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
 482:.\Generated_Source\PSoC4/RedPWM.c **** *  None
 483:.\Generated_Source\PSoC4/RedPWM.c **** *
 484:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
 485:.\Generated_Source\PSoC4/RedPWM.c **** void RedPWM_SetPWMSyncKill(uint32 syncKillEnable)
 486:.\Generated_Source\PSoC4/RedPWM.c **** {
 268              		.loc 1 486 0
 269              		.cfi_startproc
 270              	.LVL20:
 271 0000 10B5     		push	{r4, lr}
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 4, -8
 274              		.cfi_offset 14, -4
 275 0002 041C     		mov	r4, r0
 487:.\Generated_Source\PSoC4/RedPWM.c ****     uint8 enableInterrupts;
 488:.\Generated_Source\PSoC4/RedPWM.c **** 
 489:.\Generated_Source\PSoC4/RedPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 276              		.loc 1 489 0
 277 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 278              	.LVL21:
 490:.\Generated_Source\PSoC4/RedPWM.c **** 
 491:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_CONTROL_REG &= (uint32)~RedPWM_PWM_SYNC_KILL_MASK;
 279              		.loc 1 491 0
 280 0008 064B     		ldr	r3, .L20
 281 000a 1A68     		ldr	r2, [r3]
 282 000c 0421     		mov	r1, #4
 283 000e 8A43     		bic	r2, r1
 284 0010 1A60     		str	r2, [r3]
 492:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_CONTROL_REG |= ((uint32)((syncKillEnable & RedPWM_1BIT_MASK)  <<
 285              		.loc 1 492 0
 286 0012 1A68     		ldr	r2, [r3]
 287 0014 0339     		sub	r1, r1, #3
 288 0016 0C40     		and	r4, r1
 289              	.LVL22:
 290 0018 A400     		lsl	r4, r4, #2
 291 001a 1443     		orr	r4, r2
 292 001c 1C60     		str	r4, [r3]
 493:.\Generated_Source\PSoC4/RedPWM.c ****                                                RedPWM_PWM_SYNC_KILL_SHIFT));
 494:.\Generated_Source\PSoC4/RedPWM.c **** 
 495:.\Generated_Source\PSoC4/RedPWM.c ****     CyExitCriticalSection(enableInterrupts);
 293              		.loc 1 495 0
 294 001e FFF7FEFF 		bl	CyExitCriticalSection
 295              	.LVL23:
 496:.\Generated_Source\PSoC4/RedPWM.c **** }
 296              		.loc 1 496 0
 297              		@ sp needed
 298 0022 10BD     		pop	{r4, pc}
 299              	.L21:
 300              		.align	2
 301              	.L20:
 302 0024 80010540 		.word	1074069888
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 15


 303              		.cfi_endproc
 304              	.LFE9:
 305              		.size	RedPWM_SetPWMSyncKill, .-RedPWM_SetPWMSyncKill
 306              		.section	.text.RedPWM_SetPWMStopOnKill,"ax",%progbits
 307              		.align	2
 308              		.global	RedPWM_SetPWMStopOnKill
 309              		.code	16
 310              		.thumb_func
 311              		.type	RedPWM_SetPWMStopOnKill, %function
 312              	RedPWM_SetPWMStopOnKill:
 313              	.LFB10:
 497:.\Generated_Source\PSoC4/RedPWM.c **** 
 498:.\Generated_Source\PSoC4/RedPWM.c **** 
 499:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
 500:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_SetPWMStopOnKill
 501:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
 502:.\Generated_Source\PSoC4/RedPWM.c **** *
 503:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
 504:.\Generated_Source\PSoC4/RedPWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:.\Generated_Source\PSoC4/RedPWM.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:.\Generated_Source\PSoC4/RedPWM.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:.\Generated_Source\PSoC4/RedPWM.c **** *
 508:.\Generated_Source\PSoC4/RedPWM.c **** *
 509:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
 510:.\Generated_Source\PSoC4/RedPWM.c **** *  stopOnKillEnable
 511:.\Generated_Source\PSoC4/RedPWM.c **** *   Values:
 512:.\Generated_Source\PSoC4/RedPWM.c **** *     - 0 - Don't stop
 513:.\Generated_Source\PSoC4/RedPWM.c **** *     - 1 - Stop
 514:.\Generated_Source\PSoC4/RedPWM.c **** *
 515:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
 516:.\Generated_Source\PSoC4/RedPWM.c **** *  None
 517:.\Generated_Source\PSoC4/RedPWM.c **** *
 518:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
 519:.\Generated_Source\PSoC4/RedPWM.c **** void RedPWM_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:.\Generated_Source\PSoC4/RedPWM.c **** {
 314              		.loc 1 520 0
 315              		.cfi_startproc
 316              	.LVL24:
 317 0000 10B5     		push	{r4, lr}
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 4, -8
 320              		.cfi_offset 14, -4
 321 0002 041C     		mov	r4, r0
 521:.\Generated_Source\PSoC4/RedPWM.c ****     uint8 enableInterrupts;
 522:.\Generated_Source\PSoC4/RedPWM.c **** 
 523:.\Generated_Source\PSoC4/RedPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 322              		.loc 1 523 0
 323 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 324              	.LVL25:
 524:.\Generated_Source\PSoC4/RedPWM.c **** 
 525:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_CONTROL_REG &= (uint32)~RedPWM_PWM_STOP_KILL_MASK;
 325              		.loc 1 525 0
 326 0008 064B     		ldr	r3, .L23
 327 000a 1A68     		ldr	r2, [r3]
 328 000c 0821     		mov	r1, #8
 329 000e 8A43     		bic	r2, r1
 330 0010 1A60     		str	r2, [r3]
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 16


 526:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & RedPWM_1BIT_MASK)  <<
 331              		.loc 1 526 0
 332 0012 1A68     		ldr	r2, [r3]
 333 0014 0739     		sub	r1, r1, #7
 334 0016 0C40     		and	r4, r1
 335              	.LVL26:
 336 0018 E400     		lsl	r4, r4, #3
 337 001a 1443     		orr	r4, r2
 338 001c 1C60     		str	r4, [r3]
 527:.\Generated_Source\PSoC4/RedPWM.c ****                                                          RedPWM_PWM_STOP_KILL_SHIFT));
 528:.\Generated_Source\PSoC4/RedPWM.c **** 
 529:.\Generated_Source\PSoC4/RedPWM.c ****     CyExitCriticalSection(enableInterrupts);
 339              		.loc 1 529 0
 340 001e FFF7FEFF 		bl	CyExitCriticalSection
 341              	.LVL27:
 530:.\Generated_Source\PSoC4/RedPWM.c **** }
 342              		.loc 1 530 0
 343              		@ sp needed
 344 0022 10BD     		pop	{r4, pc}
 345              	.L24:
 346              		.align	2
 347              	.L23:
 348 0024 80010540 		.word	1074069888
 349              		.cfi_endproc
 350              	.LFE10:
 351              		.size	RedPWM_SetPWMStopOnKill, .-RedPWM_SetPWMStopOnKill
 352              		.section	.text.RedPWM_SetPWMDeadTime,"ax",%progbits
 353              		.align	2
 354              		.global	RedPWM_SetPWMDeadTime
 355              		.code	16
 356              		.thumb_func
 357              		.type	RedPWM_SetPWMDeadTime, %function
 358              	RedPWM_SetPWMDeadTime:
 359              	.LFB11:
 531:.\Generated_Source\PSoC4/RedPWM.c **** 
 532:.\Generated_Source\PSoC4/RedPWM.c **** 
 533:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
 534:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_SetPWMDeadTime
 535:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
 536:.\Generated_Source\PSoC4/RedPWM.c **** *
 537:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
 538:.\Generated_Source\PSoC4/RedPWM.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:.\Generated_Source\PSoC4/RedPWM.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:.\Generated_Source\PSoC4/RedPWM.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:.\Generated_Source\PSoC4/RedPWM.c **** *  only applicable to the PWM in the dead time mode.
 542:.\Generated_Source\PSoC4/RedPWM.c **** 
 543:.\Generated_Source\PSoC4/RedPWM.c **** *
 544:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
 545:.\Generated_Source\PSoC4/RedPWM.c **** *  Dead time to insert
 546:.\Generated_Source\PSoC4/RedPWM.c **** *   Values: 0 to 255
 547:.\Generated_Source\PSoC4/RedPWM.c **** *
 548:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
 549:.\Generated_Source\PSoC4/RedPWM.c **** *  None
 550:.\Generated_Source\PSoC4/RedPWM.c **** *
 551:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
 552:.\Generated_Source\PSoC4/RedPWM.c **** void RedPWM_SetPWMDeadTime(uint32 deadTime)
 553:.\Generated_Source\PSoC4/RedPWM.c **** {
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 17


 360              		.loc 1 553 0
 361              		.cfi_startproc
 362              	.LVL28:
 363 0000 10B5     		push	{r4, lr}
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 4, -8
 366              		.cfi_offset 14, -4
 367 0002 041C     		mov	r4, r0
 554:.\Generated_Source\PSoC4/RedPWM.c ****     uint8 enableInterrupts;
 555:.\Generated_Source\PSoC4/RedPWM.c **** 
 556:.\Generated_Source\PSoC4/RedPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 368              		.loc 1 556 0
 369 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 370              	.LVL29:
 557:.\Generated_Source\PSoC4/RedPWM.c **** 
 558:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_CONTROL_REG &= (uint32)~RedPWM_PRESCALER_MASK;
 371              		.loc 1 558 0
 372 0008 064B     		ldr	r3, .L26
 373 000a 1968     		ldr	r1, [r3]
 374 000c 064A     		ldr	r2, .L26+4
 375 000e 0A40     		and	r2, r1
 376 0010 1A60     		str	r2, [r3]
 559:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_CONTROL_REG |= ((uint32)((deadTime & RedPWM_8BIT_MASK) <<
 377              		.loc 1 559 0
 378 0012 1A68     		ldr	r2, [r3]
 379 0014 2406     		lsl	r4, r4, #24
 380              	.LVL30:
 381 0016 240C     		lsr	r4, r4, #16
 382 0018 1443     		orr	r4, r2
 383 001a 1C60     		str	r4, [r3]
 560:.\Generated_Source\PSoC4/RedPWM.c ****                                                           RedPWM_PRESCALER_SHIFT));
 561:.\Generated_Source\PSoC4/RedPWM.c **** 
 562:.\Generated_Source\PSoC4/RedPWM.c ****     CyExitCriticalSection(enableInterrupts);
 384              		.loc 1 562 0
 385 001c FFF7FEFF 		bl	CyExitCriticalSection
 386              	.LVL31:
 563:.\Generated_Source\PSoC4/RedPWM.c **** }
 387              		.loc 1 563 0
 388              		@ sp needed
 389 0020 10BD     		pop	{r4, pc}
 390              	.L27:
 391 0022 C046     		.align	2
 392              	.L26:
 393 0024 80010540 		.word	1074069888
 394 0028 FF00FFFF 		.word	-65281
 395              		.cfi_endproc
 396              	.LFE11:
 397              		.size	RedPWM_SetPWMDeadTime, .-RedPWM_SetPWMDeadTime
 398              		.section	.text.RedPWM_SetPWMInvert,"ax",%progbits
 399              		.align	2
 400              		.global	RedPWM_SetPWMInvert
 401              		.code	16
 402              		.thumb_func
 403              		.type	RedPWM_SetPWMInvert, %function
 404              	RedPWM_SetPWMInvert:
 405              	.LFB12:
 564:.\Generated_Source\PSoC4/RedPWM.c **** 
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 18


 565:.\Generated_Source\PSoC4/RedPWM.c **** 
 566:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
 567:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_SetPWMInvert
 568:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
 569:.\Generated_Source\PSoC4/RedPWM.c **** *
 570:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
 571:.\Generated_Source\PSoC4/RedPWM.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:.\Generated_Source\PSoC4/RedPWM.c **** *  inverted from their normal output values.  This functionality is only
 573:.\Generated_Source\PSoC4/RedPWM.c **** *  applicable to the three PWM modes.
 574:.\Generated_Source\PSoC4/RedPWM.c **** *
 575:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
 576:.\Generated_Source\PSoC4/RedPWM.c **** *  mask: Mask of outputs to invert.
 577:.\Generated_Source\PSoC4/RedPWM.c **** *   Values:
 578:.\Generated_Source\PSoC4/RedPWM.c **** *         - RedPWM_INVERT_LINE   - Inverts the line output
 579:.\Generated_Source\PSoC4/RedPWM.c **** *         - RedPWM_INVERT_LINE_N - Inverts the line_n output
 580:.\Generated_Source\PSoC4/RedPWM.c **** *
 581:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
 582:.\Generated_Source\PSoC4/RedPWM.c **** *  None
 583:.\Generated_Source\PSoC4/RedPWM.c **** *
 584:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
 585:.\Generated_Source\PSoC4/RedPWM.c **** void RedPWM_SetPWMInvert(uint32 mask)
 586:.\Generated_Source\PSoC4/RedPWM.c **** {
 406              		.loc 1 586 0
 407              		.cfi_startproc
 408              	.LVL32:
 409 0000 10B5     		push	{r4, lr}
 410              		.cfi_def_cfa_offset 8
 411              		.cfi_offset 4, -8
 412              		.cfi_offset 14, -4
 413 0002 041C     		mov	r4, r0
 587:.\Generated_Source\PSoC4/RedPWM.c ****     uint8 enableInterrupts;
 588:.\Generated_Source\PSoC4/RedPWM.c **** 
 589:.\Generated_Source\PSoC4/RedPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 414              		.loc 1 589 0
 415 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 416              	.LVL33:
 590:.\Generated_Source\PSoC4/RedPWM.c **** 
 591:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_CONTROL_REG &= (uint32)~RedPWM_INV_OUT_MASK;
 417              		.loc 1 591 0
 418 0008 054B     		ldr	r3, .L29
 419 000a 1968     		ldr	r1, [r3]
 420 000c 054A     		ldr	r2, .L29+4
 421 000e 0A40     		and	r2, r1
 422 0010 1A60     		str	r2, [r3]
 592:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_CONTROL_REG |= mask;
 423              		.loc 1 592 0
 424 0012 1A68     		ldr	r2, [r3]
 425 0014 1443     		orr	r4, r2
 426              	.LVL34:
 427 0016 1C60     		str	r4, [r3]
 593:.\Generated_Source\PSoC4/RedPWM.c **** 
 594:.\Generated_Source\PSoC4/RedPWM.c ****     CyExitCriticalSection(enableInterrupts);
 428              		.loc 1 594 0
 429 0018 FFF7FEFF 		bl	CyExitCriticalSection
 430              	.LVL35:
 595:.\Generated_Source\PSoC4/RedPWM.c **** }
 431              		.loc 1 595 0
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 19


 432              		@ sp needed
 433 001c 10BD     		pop	{r4, pc}
 434              	.L30:
 435 001e C046     		.align	2
 436              	.L29:
 437 0020 80010540 		.word	1074069888
 438 0024 FFFFCFFF 		.word	-3145729
 439              		.cfi_endproc
 440              	.LFE12:
 441              		.size	RedPWM_SetPWMInvert, .-RedPWM_SetPWMInvert
 442              		.section	.text.RedPWM_WriteCounter,"ax",%progbits
 443              		.align	2
 444              		.global	RedPWM_WriteCounter
 445              		.code	16
 446              		.thumb_func
 447              		.type	RedPWM_WriteCounter, %function
 448              	RedPWM_WriteCounter:
 449              	.LFB13:
 596:.\Generated_Source\PSoC4/RedPWM.c **** 
 597:.\Generated_Source\PSoC4/RedPWM.c **** 
 598:.\Generated_Source\PSoC4/RedPWM.c **** 
 599:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
 600:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_WriteCounter
 601:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
 602:.\Generated_Source\PSoC4/RedPWM.c **** *
 603:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
 604:.\Generated_Source\PSoC4/RedPWM.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:.\Generated_Source\PSoC4/RedPWM.c **** *  setting the counter (not the period) to the value written. It is not
 606:.\Generated_Source\PSoC4/RedPWM.c **** *  advised to write to this field when the counter is running.
 607:.\Generated_Source\PSoC4/RedPWM.c **** *
 608:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
 609:.\Generated_Source\PSoC4/RedPWM.c **** *  count: value to write
 610:.\Generated_Source\PSoC4/RedPWM.c **** *
 611:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
 612:.\Generated_Source\PSoC4/RedPWM.c **** *  None
 613:.\Generated_Source\PSoC4/RedPWM.c **** *
 614:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
 615:.\Generated_Source\PSoC4/RedPWM.c **** void RedPWM_WriteCounter(uint32 count)
 616:.\Generated_Source\PSoC4/RedPWM.c **** {
 450              		.loc 1 616 0
 451              		.cfi_startproc
 452              	.LVL36:
 617:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_COUNTER_REG = (count & RedPWM_16BIT_MASK);
 453              		.loc 1 617 0
 454 0000 0004     		lsl	r0, r0, #16
 455              	.LVL37:
 456 0002 000C     		lsr	r0, r0, #16
 457 0004 014B     		ldr	r3, .L32
 458 0006 1860     		str	r0, [r3]
 618:.\Generated_Source\PSoC4/RedPWM.c **** }
 459              		.loc 1 618 0
 460              		@ sp needed
 461 0008 7047     		bx	lr
 462              	.L33:
 463 000a C046     		.align	2
 464              	.L32:
 465 000c 88010540 		.word	1074069896
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 20


 466              		.cfi_endproc
 467              	.LFE13:
 468              		.size	RedPWM_WriteCounter, .-RedPWM_WriteCounter
 469              		.section	.text.RedPWM_ReadCounter,"ax",%progbits
 470              		.align	2
 471              		.global	RedPWM_ReadCounter
 472              		.code	16
 473              		.thumb_func
 474              		.type	RedPWM_ReadCounter, %function
 475              	RedPWM_ReadCounter:
 476              	.LFB14:
 619:.\Generated_Source\PSoC4/RedPWM.c **** 
 620:.\Generated_Source\PSoC4/RedPWM.c **** 
 621:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_ReadCounter
 623:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/RedPWM.c **** *
 625:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
 626:.\Generated_Source\PSoC4/RedPWM.c **** *  Reads the current counter value.
 627:.\Generated_Source\PSoC4/RedPWM.c **** *
 628:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
 629:.\Generated_Source\PSoC4/RedPWM.c **** *  None
 630:.\Generated_Source\PSoC4/RedPWM.c **** *
 631:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
 632:.\Generated_Source\PSoC4/RedPWM.c **** *  Current counter value
 633:.\Generated_Source\PSoC4/RedPWM.c **** *
 634:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
 635:.\Generated_Source\PSoC4/RedPWM.c **** uint32 RedPWM_ReadCounter(void)
 636:.\Generated_Source\PSoC4/RedPWM.c **** {
 477              		.loc 1 636 0
 478              		.cfi_startproc
 637:.\Generated_Source\PSoC4/RedPWM.c ****     return (RedPWM_COUNTER_REG & RedPWM_16BIT_MASK);
 479              		.loc 1 637 0
 480 0000 024B     		ldr	r3, .L35
 481 0002 1868     		ldr	r0, [r3]
 482 0004 0004     		lsl	r0, r0, #16
 483 0006 000C     		lsr	r0, r0, #16
 638:.\Generated_Source\PSoC4/RedPWM.c **** }
 484              		.loc 1 638 0
 485              		@ sp needed
 486 0008 7047     		bx	lr
 487              	.L36:
 488 000a C046     		.align	2
 489              	.L35:
 490 000c 88010540 		.word	1074069896
 491              		.cfi_endproc
 492              	.LFE14:
 493              		.size	RedPWM_ReadCounter, .-RedPWM_ReadCounter
 494              		.section	.text.RedPWM_SetCounterMode,"ax",%progbits
 495              		.align	2
 496              		.global	RedPWM_SetCounterMode
 497              		.code	16
 498              		.thumb_func
 499              		.type	RedPWM_SetCounterMode, %function
 500              	RedPWM_SetCounterMode:
 501              	.LFB15:
 639:.\Generated_Source\PSoC4/RedPWM.c **** 
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 21


 640:.\Generated_Source\PSoC4/RedPWM.c **** 
 641:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
 642:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_SetCounterMode
 643:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
 644:.\Generated_Source\PSoC4/RedPWM.c **** *
 645:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
 646:.\Generated_Source\PSoC4/RedPWM.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:.\Generated_Source\PSoC4/RedPWM.c **** *  and the PWM with a pseudo random output.
 648:.\Generated_Source\PSoC4/RedPWM.c **** *
 649:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
 650:.\Generated_Source\PSoC4/RedPWM.c **** *  counterMode: Enumerated counter type values
 651:.\Generated_Source\PSoC4/RedPWM.c **** *   Values:
 652:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_COUNT_UP       - Counts up
 653:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_COUNT_DOWN     - Counts down
 654:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:.\Generated_Source\PSoC4/RedPWM.c **** *                                         generated when counter reaches 0
 656:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:.\Generated_Source\PSoC4/RedPWM.c **** *                                         generated both when counter reaches 0
 658:.\Generated_Source\PSoC4/RedPWM.c **** *                                         and period
 659:.\Generated_Source\PSoC4/RedPWM.c **** *
 660:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
 661:.\Generated_Source\PSoC4/RedPWM.c **** *  None
 662:.\Generated_Source\PSoC4/RedPWM.c **** *
 663:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
 664:.\Generated_Source\PSoC4/RedPWM.c **** void RedPWM_SetCounterMode(uint32 counterMode)
 665:.\Generated_Source\PSoC4/RedPWM.c **** {
 502              		.loc 1 665 0
 503              		.cfi_startproc
 504              	.LVL38:
 505 0000 10B5     		push	{r4, lr}
 506              		.cfi_def_cfa_offset 8
 507              		.cfi_offset 4, -8
 508              		.cfi_offset 14, -4
 509 0002 041C     		mov	r4, r0
 666:.\Generated_Source\PSoC4/RedPWM.c ****     uint8 enableInterrupts;
 667:.\Generated_Source\PSoC4/RedPWM.c **** 
 668:.\Generated_Source\PSoC4/RedPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 510              		.loc 1 668 0
 511 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 512              	.LVL39:
 669:.\Generated_Source\PSoC4/RedPWM.c **** 
 670:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_CONTROL_REG &= (uint32)~RedPWM_UPDOWN_MASK;
 513              		.loc 1 670 0
 514 0008 054B     		ldr	r3, .L38
 515 000a 1968     		ldr	r1, [r3]
 516 000c 054A     		ldr	r2, .L38+4
 517 000e 0A40     		and	r2, r1
 518 0010 1A60     		str	r2, [r3]
 671:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_CONTROL_REG |= counterMode;
 519              		.loc 1 671 0
 520 0012 1A68     		ldr	r2, [r3]
 521 0014 1443     		orr	r4, r2
 522              	.LVL40:
 523 0016 1C60     		str	r4, [r3]
 672:.\Generated_Source\PSoC4/RedPWM.c **** 
 673:.\Generated_Source\PSoC4/RedPWM.c ****     CyExitCriticalSection(enableInterrupts);
 524              		.loc 1 673 0
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 22


 525 0018 FFF7FEFF 		bl	CyExitCriticalSection
 526              	.LVL41:
 674:.\Generated_Source\PSoC4/RedPWM.c **** }
 527              		.loc 1 674 0
 528              		@ sp needed
 529 001c 10BD     		pop	{r4, pc}
 530              	.L39:
 531 001e C046     		.align	2
 532              	.L38:
 533 0020 80010540 		.word	1074069888
 534 0024 FFFFFCFF 		.word	-196609
 535              		.cfi_endproc
 536              	.LFE15:
 537              		.size	RedPWM_SetCounterMode, .-RedPWM_SetCounterMode
 538              		.section	.text.RedPWM_WritePeriod,"ax",%progbits
 539              		.align	2
 540              		.global	RedPWM_WritePeriod
 541              		.code	16
 542              		.thumb_func
 543              		.type	RedPWM_WritePeriod, %function
 544              	RedPWM_WritePeriod:
 545              	.LFB16:
 675:.\Generated_Source\PSoC4/RedPWM.c **** 
 676:.\Generated_Source\PSoC4/RedPWM.c **** 
 677:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
 678:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_WritePeriod
 679:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
 680:.\Generated_Source\PSoC4/RedPWM.c **** *
 681:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
 682:.\Generated_Source\PSoC4/RedPWM.c **** *  Writes the 16 bit period register with the new period value.
 683:.\Generated_Source\PSoC4/RedPWM.c **** *  To cause the counter to count for N cycles this register should be written
 684:.\Generated_Source\PSoC4/RedPWM.c **** *  with N-1 (counts from 0 to period inclusive).
 685:.\Generated_Source\PSoC4/RedPWM.c **** *
 686:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
 687:.\Generated_Source\PSoC4/RedPWM.c **** *  period: Period value
 688:.\Generated_Source\PSoC4/RedPWM.c **** *
 689:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
 690:.\Generated_Source\PSoC4/RedPWM.c **** *  None
 691:.\Generated_Source\PSoC4/RedPWM.c **** *
 692:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
 693:.\Generated_Source\PSoC4/RedPWM.c **** void RedPWM_WritePeriod(uint32 period)
 694:.\Generated_Source\PSoC4/RedPWM.c **** {
 546              		.loc 1 694 0
 547              		.cfi_startproc
 548              	.LVL42:
 695:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_PERIOD_REG = (period & RedPWM_16BIT_MASK);
 549              		.loc 1 695 0
 550 0000 0004     		lsl	r0, r0, #16
 551              	.LVL43:
 552 0002 000C     		lsr	r0, r0, #16
 553 0004 014B     		ldr	r3, .L41
 554 0006 1860     		str	r0, [r3]
 696:.\Generated_Source\PSoC4/RedPWM.c **** }
 555              		.loc 1 696 0
 556              		@ sp needed
 557 0008 7047     		bx	lr
 558              	.L42:
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 23


 559 000a C046     		.align	2
 560              	.L41:
 561 000c 94010540 		.word	1074069908
 562              		.cfi_endproc
 563              	.LFE16:
 564              		.size	RedPWM_WritePeriod, .-RedPWM_WritePeriod
 565              		.section	.text.RedPWM_ReadPeriod,"ax",%progbits
 566              		.align	2
 567              		.global	RedPWM_ReadPeriod
 568              		.code	16
 569              		.thumb_func
 570              		.type	RedPWM_ReadPeriod, %function
 571              	RedPWM_ReadPeriod:
 572              	.LFB17:
 697:.\Generated_Source\PSoC4/RedPWM.c **** 
 698:.\Generated_Source\PSoC4/RedPWM.c **** 
 699:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
 700:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_ReadPeriod
 701:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
 702:.\Generated_Source\PSoC4/RedPWM.c **** *
 703:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
 704:.\Generated_Source\PSoC4/RedPWM.c **** *  Reads the 16 bit period register.
 705:.\Generated_Source\PSoC4/RedPWM.c **** *
 706:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
 707:.\Generated_Source\PSoC4/RedPWM.c **** *  None
 708:.\Generated_Source\PSoC4/RedPWM.c **** *
 709:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
 710:.\Generated_Source\PSoC4/RedPWM.c **** *  Period value
 711:.\Generated_Source\PSoC4/RedPWM.c **** *
 712:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
 713:.\Generated_Source\PSoC4/RedPWM.c **** uint32 RedPWM_ReadPeriod(void)
 714:.\Generated_Source\PSoC4/RedPWM.c **** {
 573              		.loc 1 714 0
 574              		.cfi_startproc
 715:.\Generated_Source\PSoC4/RedPWM.c ****     return (RedPWM_PERIOD_REG & RedPWM_16BIT_MASK);
 575              		.loc 1 715 0
 576 0000 024B     		ldr	r3, .L44
 577 0002 1868     		ldr	r0, [r3]
 578 0004 0004     		lsl	r0, r0, #16
 579 0006 000C     		lsr	r0, r0, #16
 716:.\Generated_Source\PSoC4/RedPWM.c **** }
 580              		.loc 1 716 0
 581              		@ sp needed
 582 0008 7047     		bx	lr
 583              	.L45:
 584 000a C046     		.align	2
 585              	.L44:
 586 000c 94010540 		.word	1074069908
 587              		.cfi_endproc
 588              	.LFE17:
 589              		.size	RedPWM_ReadPeriod, .-RedPWM_ReadPeriod
 590              		.section	.text.RedPWM_SetCompareSwap,"ax",%progbits
 591              		.align	2
 592              		.global	RedPWM_SetCompareSwap
 593              		.code	16
 594              		.thumb_func
 595              		.type	RedPWM_SetCompareSwap, %function
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 24


 596              	RedPWM_SetCompareSwap:
 597              	.LFB18:
 717:.\Generated_Source\PSoC4/RedPWM.c **** 
 718:.\Generated_Source\PSoC4/RedPWM.c **** 
 719:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
 720:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_SetCompareSwap
 721:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
 722:.\Generated_Source\PSoC4/RedPWM.c **** *
 723:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
 724:.\Generated_Source\PSoC4/RedPWM.c **** *  Writes the register that controls whether the compare registers are
 725:.\Generated_Source\PSoC4/RedPWM.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:.\Generated_Source\PSoC4/RedPWM.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:.\Generated_Source\PSoC4/RedPWM.c **** *  following a hardware switch event.
 728:.\Generated_Source\PSoC4/RedPWM.c **** *
 729:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
 730:.\Generated_Source\PSoC4/RedPWM.c **** *  swapEnable
 731:.\Generated_Source\PSoC4/RedPWM.c **** *   Values:
 732:.\Generated_Source\PSoC4/RedPWM.c **** *     - 0 - Disable swap
 733:.\Generated_Source\PSoC4/RedPWM.c **** *     - 1 - Enable swap
 734:.\Generated_Source\PSoC4/RedPWM.c **** *
 735:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
 736:.\Generated_Source\PSoC4/RedPWM.c **** *  None
 737:.\Generated_Source\PSoC4/RedPWM.c **** *
 738:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
 739:.\Generated_Source\PSoC4/RedPWM.c **** void RedPWM_SetCompareSwap(uint32 swapEnable)
 740:.\Generated_Source\PSoC4/RedPWM.c **** {
 598              		.loc 1 740 0
 599              		.cfi_startproc
 600              	.LVL44:
 601 0000 10B5     		push	{r4, lr}
 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 4, -8
 604              		.cfi_offset 14, -4
 605 0002 041C     		mov	r4, r0
 741:.\Generated_Source\PSoC4/RedPWM.c ****     uint8 enableInterrupts;
 742:.\Generated_Source\PSoC4/RedPWM.c **** 
 743:.\Generated_Source\PSoC4/RedPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 606              		.loc 1 743 0
 607 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 608              	.LVL45:
 744:.\Generated_Source\PSoC4/RedPWM.c **** 
 745:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_CONTROL_REG &= (uint32)~RedPWM_RELOAD_CC_MASK;
 609              		.loc 1 745 0
 610 0008 054B     		ldr	r3, .L47
 611 000a 1A68     		ldr	r2, [r3]
 612 000c 0121     		mov	r1, #1
 613 000e 8A43     		bic	r2, r1
 614 0010 1A60     		str	r2, [r3]
 746:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_CONTROL_REG |= (swapEnable & RedPWM_1BIT_MASK);
 615              		.loc 1 746 0
 616 0012 1A68     		ldr	r2, [r3]
 617 0014 0C40     		and	r4, r1
 618              	.LVL46:
 619 0016 1443     		orr	r4, r2
 620 0018 1C60     		str	r4, [r3]
 747:.\Generated_Source\PSoC4/RedPWM.c **** 
 748:.\Generated_Source\PSoC4/RedPWM.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 25


 621              		.loc 1 748 0
 622 001a FFF7FEFF 		bl	CyExitCriticalSection
 623              	.LVL47:
 749:.\Generated_Source\PSoC4/RedPWM.c **** }
 624              		.loc 1 749 0
 625              		@ sp needed
 626 001e 10BD     		pop	{r4, pc}
 627              	.L48:
 628              		.align	2
 629              	.L47:
 630 0020 80010540 		.word	1074069888
 631              		.cfi_endproc
 632              	.LFE18:
 633              		.size	RedPWM_SetCompareSwap, .-RedPWM_SetCompareSwap
 634              		.section	.text.RedPWM_WritePeriodBuf,"ax",%progbits
 635              		.align	2
 636              		.global	RedPWM_WritePeriodBuf
 637              		.code	16
 638              		.thumb_func
 639              		.type	RedPWM_WritePeriodBuf, %function
 640              	RedPWM_WritePeriodBuf:
 641              	.LFB19:
 750:.\Generated_Source\PSoC4/RedPWM.c **** 
 751:.\Generated_Source\PSoC4/RedPWM.c **** 
 752:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
 753:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_WritePeriodBuf
 754:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
 755:.\Generated_Source\PSoC4/RedPWM.c **** *
 756:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
 757:.\Generated_Source\PSoC4/RedPWM.c **** *  Writes the 16 bit period buf register with the new period value.
 758:.\Generated_Source\PSoC4/RedPWM.c **** *
 759:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
 760:.\Generated_Source\PSoC4/RedPWM.c **** *  periodBuf: Period value
 761:.\Generated_Source\PSoC4/RedPWM.c **** *
 762:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
 763:.\Generated_Source\PSoC4/RedPWM.c **** *  None
 764:.\Generated_Source\PSoC4/RedPWM.c **** *
 765:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
 766:.\Generated_Source\PSoC4/RedPWM.c **** void RedPWM_WritePeriodBuf(uint32 periodBuf)
 767:.\Generated_Source\PSoC4/RedPWM.c **** {
 642              		.loc 1 767 0
 643              		.cfi_startproc
 644              	.LVL48:
 768:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_PERIOD_BUF_REG = (periodBuf & RedPWM_16BIT_MASK);
 645              		.loc 1 768 0
 646 0000 0004     		lsl	r0, r0, #16
 647              	.LVL49:
 648 0002 000C     		lsr	r0, r0, #16
 649 0004 014B     		ldr	r3, .L50
 650 0006 1860     		str	r0, [r3]
 769:.\Generated_Source\PSoC4/RedPWM.c **** }
 651              		.loc 1 769 0
 652              		@ sp needed
 653 0008 7047     		bx	lr
 654              	.L51:
 655 000a C046     		.align	2
 656              	.L50:
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 26


 657 000c 98010540 		.word	1074069912
 658              		.cfi_endproc
 659              	.LFE19:
 660              		.size	RedPWM_WritePeriodBuf, .-RedPWM_WritePeriodBuf
 661              		.section	.text.RedPWM_ReadPeriodBuf,"ax",%progbits
 662              		.align	2
 663              		.global	RedPWM_ReadPeriodBuf
 664              		.code	16
 665              		.thumb_func
 666              		.type	RedPWM_ReadPeriodBuf, %function
 667              	RedPWM_ReadPeriodBuf:
 668              	.LFB20:
 770:.\Generated_Source\PSoC4/RedPWM.c **** 
 771:.\Generated_Source\PSoC4/RedPWM.c **** 
 772:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
 773:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_ReadPeriodBuf
 774:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
 775:.\Generated_Source\PSoC4/RedPWM.c **** *
 776:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
 777:.\Generated_Source\PSoC4/RedPWM.c **** *  Reads the 16 bit period buf register.
 778:.\Generated_Source\PSoC4/RedPWM.c **** *
 779:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
 780:.\Generated_Source\PSoC4/RedPWM.c **** *  None
 781:.\Generated_Source\PSoC4/RedPWM.c **** *
 782:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
 783:.\Generated_Source\PSoC4/RedPWM.c **** *  Period value
 784:.\Generated_Source\PSoC4/RedPWM.c **** *
 785:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
 786:.\Generated_Source\PSoC4/RedPWM.c **** uint32 RedPWM_ReadPeriodBuf(void)
 787:.\Generated_Source\PSoC4/RedPWM.c **** {
 669              		.loc 1 787 0
 670              		.cfi_startproc
 788:.\Generated_Source\PSoC4/RedPWM.c ****     return (RedPWM_PERIOD_BUF_REG & RedPWM_16BIT_MASK);
 671              		.loc 1 788 0
 672 0000 024B     		ldr	r3, .L53
 673 0002 1868     		ldr	r0, [r3]
 674 0004 0004     		lsl	r0, r0, #16
 675 0006 000C     		lsr	r0, r0, #16
 789:.\Generated_Source\PSoC4/RedPWM.c **** }
 676              		.loc 1 789 0
 677              		@ sp needed
 678 0008 7047     		bx	lr
 679              	.L54:
 680 000a C046     		.align	2
 681              	.L53:
 682 000c 98010540 		.word	1074069912
 683              		.cfi_endproc
 684              	.LFE20:
 685              		.size	RedPWM_ReadPeriodBuf, .-RedPWM_ReadPeriodBuf
 686              		.section	.text.RedPWM_SetPeriodSwap,"ax",%progbits
 687              		.align	2
 688              		.global	RedPWM_SetPeriodSwap
 689              		.code	16
 690              		.thumb_func
 691              		.type	RedPWM_SetPeriodSwap, %function
 692              	RedPWM_SetPeriodSwap:
 693              	.LFB21:
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 27


 790:.\Generated_Source\PSoC4/RedPWM.c **** 
 791:.\Generated_Source\PSoC4/RedPWM.c **** 
 792:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
 793:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_SetPeriodSwap
 794:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
 795:.\Generated_Source\PSoC4/RedPWM.c **** *
 796:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
 797:.\Generated_Source\PSoC4/RedPWM.c **** *  Writes the register that controls whether the period registers are
 798:.\Generated_Source\PSoC4/RedPWM.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:.\Generated_Source\PSoC4/RedPWM.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:.\Generated_Source\PSoC4/RedPWM.c **** *  switch event.
 801:.\Generated_Source\PSoC4/RedPWM.c **** *
 802:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
 803:.\Generated_Source\PSoC4/RedPWM.c **** *  swapEnable
 804:.\Generated_Source\PSoC4/RedPWM.c **** *   Values:
 805:.\Generated_Source\PSoC4/RedPWM.c **** *     - 0 - Disable swap
 806:.\Generated_Source\PSoC4/RedPWM.c **** *     - 1 - Enable swap
 807:.\Generated_Source\PSoC4/RedPWM.c **** *
 808:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
 809:.\Generated_Source\PSoC4/RedPWM.c **** *  None
 810:.\Generated_Source\PSoC4/RedPWM.c **** *
 811:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
 812:.\Generated_Source\PSoC4/RedPWM.c **** void RedPWM_SetPeriodSwap(uint32 swapEnable)
 813:.\Generated_Source\PSoC4/RedPWM.c **** {
 694              		.loc 1 813 0
 695              		.cfi_startproc
 696              	.LVL50:
 697 0000 10B5     		push	{r4, lr}
 698              		.cfi_def_cfa_offset 8
 699              		.cfi_offset 4, -8
 700              		.cfi_offset 14, -4
 701 0002 041C     		mov	r4, r0
 814:.\Generated_Source\PSoC4/RedPWM.c ****     uint8 enableInterrupts;
 815:.\Generated_Source\PSoC4/RedPWM.c **** 
 816:.\Generated_Source\PSoC4/RedPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 702              		.loc 1 816 0
 703 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 704              	.LVL51:
 817:.\Generated_Source\PSoC4/RedPWM.c **** 
 818:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_CONTROL_REG &= (uint32)~RedPWM_RELOAD_PERIOD_MASK;
 705              		.loc 1 818 0
 706 0008 064B     		ldr	r3, .L56
 707 000a 1A68     		ldr	r2, [r3]
 708 000c 0221     		mov	r1, #2
 709 000e 8A43     		bic	r2, r1
 710 0010 1A60     		str	r2, [r3]
 819:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_CONTROL_REG |= ((uint32)((swapEnable & RedPWM_1BIT_MASK) <<
 711              		.loc 1 819 0
 712 0012 1A68     		ldr	r2, [r3]
 713 0014 0139     		sub	r1, r1, #1
 714 0016 0C40     		and	r4, r1
 715              	.LVL52:
 716 0018 6400     		lsl	r4, r4, #1
 717 001a 1443     		orr	r4, r2
 718 001c 1C60     		str	r4, [r3]
 820:.\Generated_Source\PSoC4/RedPWM.c ****                                                             RedPWM_RELOAD_PERIOD_SHIFT));
 821:.\Generated_Source\PSoC4/RedPWM.c **** 
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 28


 822:.\Generated_Source\PSoC4/RedPWM.c ****     CyExitCriticalSection(enableInterrupts);
 719              		.loc 1 822 0
 720 001e FFF7FEFF 		bl	CyExitCriticalSection
 721              	.LVL53:
 823:.\Generated_Source\PSoC4/RedPWM.c **** }
 722              		.loc 1 823 0
 723              		@ sp needed
 724 0022 10BD     		pop	{r4, pc}
 725              	.L57:
 726              		.align	2
 727              	.L56:
 728 0024 80010540 		.word	1074069888
 729              		.cfi_endproc
 730              	.LFE21:
 731              		.size	RedPWM_SetPeriodSwap, .-RedPWM_SetPeriodSwap
 732              		.section	.text.RedPWM_WriteCompare,"ax",%progbits
 733              		.align	2
 734              		.global	RedPWM_WriteCompare
 735              		.code	16
 736              		.thumb_func
 737              		.type	RedPWM_WriteCompare, %function
 738              	RedPWM_WriteCompare:
 739              	.LFB22:
 824:.\Generated_Source\PSoC4/RedPWM.c **** 
 825:.\Generated_Source\PSoC4/RedPWM.c **** 
 826:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
 827:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_WriteCompare
 828:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
 829:.\Generated_Source\PSoC4/RedPWM.c **** *
 830:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
 831:.\Generated_Source\PSoC4/RedPWM.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:.\Generated_Source\PSoC4/RedPWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:.\Generated_Source\PSoC4/RedPWM.c **** *
 834:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
 835:.\Generated_Source\PSoC4/RedPWM.c **** *  compare: Compare value
 836:.\Generated_Source\PSoC4/RedPWM.c **** *
 837:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
 838:.\Generated_Source\PSoC4/RedPWM.c **** *  None
 839:.\Generated_Source\PSoC4/RedPWM.c **** *
 840:.\Generated_Source\PSoC4/RedPWM.c **** * Note:
 841:.\Generated_Source\PSoC4/RedPWM.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:.\Generated_Source\PSoC4/RedPWM.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:.\Generated_Source\PSoC4/RedPWM.c **** *  PSoC 4100/PSoC 4200 devices.
 844:.\Generated_Source\PSoC4/RedPWM.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:.\Generated_Source\PSoC4/RedPWM.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:.\Generated_Source\PSoC4/RedPWM.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:.\Generated_Source\PSoC4/RedPWM.c **** *
 848:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
 849:.\Generated_Source\PSoC4/RedPWM.c **** void RedPWM_WriteCompare(uint32 compare)
 850:.\Generated_Source\PSoC4/RedPWM.c **** {
 740              		.loc 1 850 0
 741              		.cfi_startproc
 742              	.LVL54:
 851:.\Generated_Source\PSoC4/RedPWM.c ****     #if (RedPWM_CY_TCPWM_4000)
 852:.\Generated_Source\PSoC4/RedPWM.c ****         uint32 currentMode;
 853:.\Generated_Source\PSoC4/RedPWM.c ****     #endif /* (RedPWM_CY_TCPWM_4000) */
 854:.\Generated_Source\PSoC4/RedPWM.c **** 
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 29


 855:.\Generated_Source\PSoC4/RedPWM.c ****     #if (RedPWM_CY_TCPWM_4000)
 856:.\Generated_Source\PSoC4/RedPWM.c ****         currentMode = ((RedPWM_CONTROL_REG & RedPWM_UPDOWN_MASK) >> RedPWM_UPDOWN_SHIFT);
 857:.\Generated_Source\PSoC4/RedPWM.c **** 
 858:.\Generated_Source\PSoC4/RedPWM.c ****         if (((uint32)RedPWM__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:.\Generated_Source\PSoC4/RedPWM.c ****         {
 860:.\Generated_Source\PSoC4/RedPWM.c ****             compare++;
 861:.\Generated_Source\PSoC4/RedPWM.c ****         }
 862:.\Generated_Source\PSoC4/RedPWM.c ****         else if (((uint32)RedPWM__COUNT_UP == currentMode) && (0u != compare))
 863:.\Generated_Source\PSoC4/RedPWM.c ****         {
 864:.\Generated_Source\PSoC4/RedPWM.c ****             compare--;
 865:.\Generated_Source\PSoC4/RedPWM.c ****         }
 866:.\Generated_Source\PSoC4/RedPWM.c ****         else
 867:.\Generated_Source\PSoC4/RedPWM.c ****         {
 868:.\Generated_Source\PSoC4/RedPWM.c ****         }
 869:.\Generated_Source\PSoC4/RedPWM.c ****         
 870:.\Generated_Source\PSoC4/RedPWM.c ****     
 871:.\Generated_Source\PSoC4/RedPWM.c ****     #endif /* (RedPWM_CY_TCPWM_4000) */
 872:.\Generated_Source\PSoC4/RedPWM.c ****     
 873:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_COMP_CAP_REG = (compare & RedPWM_16BIT_MASK);
 743              		.loc 1 873 0
 744 0000 0004     		lsl	r0, r0, #16
 745              	.LVL55:
 746 0002 000C     		lsr	r0, r0, #16
 747 0004 014B     		ldr	r3, .L59
 748 0006 1860     		str	r0, [r3]
 874:.\Generated_Source\PSoC4/RedPWM.c **** }
 749              		.loc 1 874 0
 750              		@ sp needed
 751 0008 7047     		bx	lr
 752              	.L60:
 753 000a C046     		.align	2
 754              	.L59:
 755 000c 8C010540 		.word	1074069900
 756              		.cfi_endproc
 757              	.LFE22:
 758              		.size	RedPWM_WriteCompare, .-RedPWM_WriteCompare
 759              		.section	.text.RedPWM_ReadCompare,"ax",%progbits
 760              		.align	2
 761              		.global	RedPWM_ReadCompare
 762              		.code	16
 763              		.thumb_func
 764              		.type	RedPWM_ReadCompare, %function
 765              	RedPWM_ReadCompare:
 766              	.LFB23:
 875:.\Generated_Source\PSoC4/RedPWM.c **** 
 876:.\Generated_Source\PSoC4/RedPWM.c **** 
 877:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
 878:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_ReadCompare
 879:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
 880:.\Generated_Source\PSoC4/RedPWM.c **** *
 881:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
 882:.\Generated_Source\PSoC4/RedPWM.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:.\Generated_Source\PSoC4/RedPWM.c **** *  or in Quadrature Decoder modes.
 884:.\Generated_Source\PSoC4/RedPWM.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:.\Generated_Source\PSoC4/RedPWM.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:.\Generated_Source\PSoC4/RedPWM.c **** *  Down counting mode (except 0x0u).
 887:.\Generated_Source\PSoC4/RedPWM.c **** *
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 30


 888:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
 889:.\Generated_Source\PSoC4/RedPWM.c **** *  None
 890:.\Generated_Source\PSoC4/RedPWM.c **** *
 891:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
 892:.\Generated_Source\PSoC4/RedPWM.c **** *  Compare value
 893:.\Generated_Source\PSoC4/RedPWM.c **** *
 894:.\Generated_Source\PSoC4/RedPWM.c **** * Note:
 895:.\Generated_Source\PSoC4/RedPWM.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:.\Generated_Source\PSoC4/RedPWM.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:.\Generated_Source\PSoC4/RedPWM.c **** *  Down counting mode (except 0x0u).
 898:.\Generated_Source\PSoC4/RedPWM.c **** *
 899:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
 900:.\Generated_Source\PSoC4/RedPWM.c **** uint32 RedPWM_ReadCompare(void)
 901:.\Generated_Source\PSoC4/RedPWM.c **** {
 767              		.loc 1 901 0
 768              		.cfi_startproc
 902:.\Generated_Source\PSoC4/RedPWM.c ****     #if (RedPWM_CY_TCPWM_4000)
 903:.\Generated_Source\PSoC4/RedPWM.c ****         uint32 currentMode;
 904:.\Generated_Source\PSoC4/RedPWM.c ****         uint32 regVal;
 905:.\Generated_Source\PSoC4/RedPWM.c ****     #endif /* (RedPWM_CY_TCPWM_4000) */
 906:.\Generated_Source\PSoC4/RedPWM.c **** 
 907:.\Generated_Source\PSoC4/RedPWM.c ****     #if (RedPWM_CY_TCPWM_4000)
 908:.\Generated_Source\PSoC4/RedPWM.c ****         currentMode = ((RedPWM_CONTROL_REG & RedPWM_UPDOWN_MASK) >> RedPWM_UPDOWN_SHIFT);
 909:.\Generated_Source\PSoC4/RedPWM.c ****         
 910:.\Generated_Source\PSoC4/RedPWM.c ****         regVal = RedPWM_COMP_CAP_REG;
 911:.\Generated_Source\PSoC4/RedPWM.c ****         
 912:.\Generated_Source\PSoC4/RedPWM.c ****         if (((uint32)RedPWM__COUNT_DOWN == currentMode) && (0u != regVal))
 913:.\Generated_Source\PSoC4/RedPWM.c ****         {
 914:.\Generated_Source\PSoC4/RedPWM.c ****             regVal--;
 915:.\Generated_Source\PSoC4/RedPWM.c ****         }
 916:.\Generated_Source\PSoC4/RedPWM.c ****         else if (((uint32)RedPWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:.\Generated_Source\PSoC4/RedPWM.c ****         {
 918:.\Generated_Source\PSoC4/RedPWM.c ****             regVal++;
 919:.\Generated_Source\PSoC4/RedPWM.c ****         }
 920:.\Generated_Source\PSoC4/RedPWM.c ****         else
 921:.\Generated_Source\PSoC4/RedPWM.c ****         {
 922:.\Generated_Source\PSoC4/RedPWM.c ****         }
 923:.\Generated_Source\PSoC4/RedPWM.c **** 
 924:.\Generated_Source\PSoC4/RedPWM.c ****         return (regVal & RedPWM_16BIT_MASK);
 925:.\Generated_Source\PSoC4/RedPWM.c ****     #else
 926:.\Generated_Source\PSoC4/RedPWM.c ****         return (RedPWM_COMP_CAP_REG & RedPWM_16BIT_MASK);
 769              		.loc 1 926 0
 770 0000 024B     		ldr	r3, .L62
 771 0002 1868     		ldr	r0, [r3]
 772 0004 0004     		lsl	r0, r0, #16
 773 0006 000C     		lsr	r0, r0, #16
 927:.\Generated_Source\PSoC4/RedPWM.c ****     #endif /* (RedPWM_CY_TCPWM_4000) */
 928:.\Generated_Source\PSoC4/RedPWM.c **** }
 774              		.loc 1 928 0
 775              		@ sp needed
 776 0008 7047     		bx	lr
 777              	.L63:
 778 000a C046     		.align	2
 779              	.L62:
 780 000c 8C010540 		.word	1074069900
 781              		.cfi_endproc
 782              	.LFE23:
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 31


 783              		.size	RedPWM_ReadCompare, .-RedPWM_ReadCompare
 784              		.section	.text.RedPWM_WriteCompareBuf,"ax",%progbits
 785              		.align	2
 786              		.global	RedPWM_WriteCompareBuf
 787              		.code	16
 788              		.thumb_func
 789              		.type	RedPWM_WriteCompareBuf, %function
 790              	RedPWM_WriteCompareBuf:
 791              	.LFB24:
 929:.\Generated_Source\PSoC4/RedPWM.c **** 
 930:.\Generated_Source\PSoC4/RedPWM.c **** 
 931:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
 932:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_WriteCompareBuf
 933:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
 934:.\Generated_Source\PSoC4/RedPWM.c **** *
 935:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
 936:.\Generated_Source\PSoC4/RedPWM.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:.\Generated_Source\PSoC4/RedPWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:.\Generated_Source\PSoC4/RedPWM.c **** *
 939:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
 940:.\Generated_Source\PSoC4/RedPWM.c **** *  compareBuf: Compare value
 941:.\Generated_Source\PSoC4/RedPWM.c **** *
 942:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
 943:.\Generated_Source\PSoC4/RedPWM.c **** *  None
 944:.\Generated_Source\PSoC4/RedPWM.c **** *
 945:.\Generated_Source\PSoC4/RedPWM.c **** * Note:
 946:.\Generated_Source\PSoC4/RedPWM.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:.\Generated_Source\PSoC4/RedPWM.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:.\Generated_Source\PSoC4/RedPWM.c **** *  PSoC 4100/PSoC 4200 devices.
 949:.\Generated_Source\PSoC4/RedPWM.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:.\Generated_Source\PSoC4/RedPWM.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:.\Generated_Source\PSoC4/RedPWM.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:.\Generated_Source\PSoC4/RedPWM.c **** *
 953:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
 954:.\Generated_Source\PSoC4/RedPWM.c **** void RedPWM_WriteCompareBuf(uint32 compareBuf)
 955:.\Generated_Source\PSoC4/RedPWM.c **** {
 792              		.loc 1 955 0
 793              		.cfi_startproc
 794              	.LVL56:
 956:.\Generated_Source\PSoC4/RedPWM.c ****     #if (RedPWM_CY_TCPWM_4000)
 957:.\Generated_Source\PSoC4/RedPWM.c ****         uint32 currentMode;
 958:.\Generated_Source\PSoC4/RedPWM.c ****     #endif /* (RedPWM_CY_TCPWM_4000) */
 959:.\Generated_Source\PSoC4/RedPWM.c **** 
 960:.\Generated_Source\PSoC4/RedPWM.c ****     #if (RedPWM_CY_TCPWM_4000)
 961:.\Generated_Source\PSoC4/RedPWM.c ****         currentMode = ((RedPWM_CONTROL_REG & RedPWM_UPDOWN_MASK) >> RedPWM_UPDOWN_SHIFT);
 962:.\Generated_Source\PSoC4/RedPWM.c **** 
 963:.\Generated_Source\PSoC4/RedPWM.c ****         if (((uint32)RedPWM__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:.\Generated_Source\PSoC4/RedPWM.c ****         {
 965:.\Generated_Source\PSoC4/RedPWM.c ****             compareBuf++;
 966:.\Generated_Source\PSoC4/RedPWM.c ****         }
 967:.\Generated_Source\PSoC4/RedPWM.c ****         else if (((uint32)RedPWM__COUNT_UP == currentMode) && (0u != compareBuf))
 968:.\Generated_Source\PSoC4/RedPWM.c ****         {
 969:.\Generated_Source\PSoC4/RedPWM.c ****             compareBuf --;
 970:.\Generated_Source\PSoC4/RedPWM.c ****         }
 971:.\Generated_Source\PSoC4/RedPWM.c ****         else
 972:.\Generated_Source\PSoC4/RedPWM.c ****         {
 973:.\Generated_Source\PSoC4/RedPWM.c ****         }
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 32


 974:.\Generated_Source\PSoC4/RedPWM.c ****     #endif /* (RedPWM_CY_TCPWM_4000) */
 975:.\Generated_Source\PSoC4/RedPWM.c ****     
 976:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_COMP_CAP_BUF_REG = (compareBuf & RedPWM_16BIT_MASK);
 795              		.loc 1 976 0
 796 0000 0004     		lsl	r0, r0, #16
 797              	.LVL57:
 798 0002 000C     		lsr	r0, r0, #16
 799 0004 014B     		ldr	r3, .L65
 800 0006 1860     		str	r0, [r3]
 977:.\Generated_Source\PSoC4/RedPWM.c **** }
 801              		.loc 1 977 0
 802              		@ sp needed
 803 0008 7047     		bx	lr
 804              	.L66:
 805 000a C046     		.align	2
 806              	.L65:
 807 000c 90010540 		.word	1074069904
 808              		.cfi_endproc
 809              	.LFE24:
 810              		.size	RedPWM_WriteCompareBuf, .-RedPWM_WriteCompareBuf
 811              		.section	.text.RedPWM_ReadCompareBuf,"ax",%progbits
 812              		.align	2
 813              		.global	RedPWM_ReadCompareBuf
 814              		.code	16
 815              		.thumb_func
 816              		.type	RedPWM_ReadCompareBuf, %function
 817              	RedPWM_ReadCompareBuf:
 818              	.LFB25:
 978:.\Generated_Source\PSoC4/RedPWM.c **** 
 979:.\Generated_Source\PSoC4/RedPWM.c **** 
 980:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
 981:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_ReadCompareBuf
 982:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
 983:.\Generated_Source\PSoC4/RedPWM.c **** *
 984:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
 985:.\Generated_Source\PSoC4/RedPWM.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:.\Generated_Source\PSoC4/RedPWM.c **** *  Capture or in Quadrature Decoder modes.
 987:.\Generated_Source\PSoC4/RedPWM.c **** *
 988:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
 989:.\Generated_Source\PSoC4/RedPWM.c **** *  None
 990:.\Generated_Source\PSoC4/RedPWM.c **** *
 991:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
 992:.\Generated_Source\PSoC4/RedPWM.c **** *  Compare buffer value
 993:.\Generated_Source\PSoC4/RedPWM.c **** *
 994:.\Generated_Source\PSoC4/RedPWM.c **** * Note:
 995:.\Generated_Source\PSoC4/RedPWM.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:.\Generated_Source\PSoC4/RedPWM.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:.\Generated_Source\PSoC4/RedPWM.c **** *  Down counting mode (except 0x0u).
 998:.\Generated_Source\PSoC4/RedPWM.c **** *
 999:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
1000:.\Generated_Source\PSoC4/RedPWM.c **** uint32 RedPWM_ReadCompareBuf(void)
1001:.\Generated_Source\PSoC4/RedPWM.c **** {
 819              		.loc 1 1001 0
 820              		.cfi_startproc
1002:.\Generated_Source\PSoC4/RedPWM.c ****     #if (RedPWM_CY_TCPWM_4000)
1003:.\Generated_Source\PSoC4/RedPWM.c ****         uint32 currentMode;
1004:.\Generated_Source\PSoC4/RedPWM.c ****         uint32 regVal;
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 33


1005:.\Generated_Source\PSoC4/RedPWM.c ****     #endif /* (RedPWM_CY_TCPWM_4000) */
1006:.\Generated_Source\PSoC4/RedPWM.c **** 
1007:.\Generated_Source\PSoC4/RedPWM.c ****     #if (RedPWM_CY_TCPWM_4000)
1008:.\Generated_Source\PSoC4/RedPWM.c ****         currentMode = ((RedPWM_CONTROL_REG & RedPWM_UPDOWN_MASK) >> RedPWM_UPDOWN_SHIFT);
1009:.\Generated_Source\PSoC4/RedPWM.c **** 
1010:.\Generated_Source\PSoC4/RedPWM.c ****         regVal = RedPWM_COMP_CAP_BUF_REG;
1011:.\Generated_Source\PSoC4/RedPWM.c ****         
1012:.\Generated_Source\PSoC4/RedPWM.c ****         if (((uint32)RedPWM__COUNT_DOWN == currentMode) && (0u != regVal))
1013:.\Generated_Source\PSoC4/RedPWM.c ****         {
1014:.\Generated_Source\PSoC4/RedPWM.c ****             regVal--;
1015:.\Generated_Source\PSoC4/RedPWM.c ****         }
1016:.\Generated_Source\PSoC4/RedPWM.c ****         else if (((uint32)RedPWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:.\Generated_Source\PSoC4/RedPWM.c ****         {
1018:.\Generated_Source\PSoC4/RedPWM.c ****             regVal++;
1019:.\Generated_Source\PSoC4/RedPWM.c ****         }
1020:.\Generated_Source\PSoC4/RedPWM.c ****         else
1021:.\Generated_Source\PSoC4/RedPWM.c ****         {
1022:.\Generated_Source\PSoC4/RedPWM.c ****         }
1023:.\Generated_Source\PSoC4/RedPWM.c **** 
1024:.\Generated_Source\PSoC4/RedPWM.c ****         return (regVal & RedPWM_16BIT_MASK);
1025:.\Generated_Source\PSoC4/RedPWM.c ****     #else
1026:.\Generated_Source\PSoC4/RedPWM.c ****         return (RedPWM_COMP_CAP_BUF_REG & RedPWM_16BIT_MASK);
 821              		.loc 1 1026 0
 822 0000 024B     		ldr	r3, .L68
 823 0002 1868     		ldr	r0, [r3]
 824 0004 0004     		lsl	r0, r0, #16
 825 0006 000C     		lsr	r0, r0, #16
1027:.\Generated_Source\PSoC4/RedPWM.c ****     #endif /* (RedPWM_CY_TCPWM_4000) */
1028:.\Generated_Source\PSoC4/RedPWM.c **** }
 826              		.loc 1 1028 0
 827              		@ sp needed
 828 0008 7047     		bx	lr
 829              	.L69:
 830 000a C046     		.align	2
 831              	.L68:
 832 000c 90010540 		.word	1074069904
 833              		.cfi_endproc
 834              	.LFE25:
 835              		.size	RedPWM_ReadCompareBuf, .-RedPWM_ReadCompareBuf
 836              		.section	.text.RedPWM_ReadCapture,"ax",%progbits
 837              		.align	2
 838              		.global	RedPWM_ReadCapture
 839              		.code	16
 840              		.thumb_func
 841              		.type	RedPWM_ReadCapture, %function
 842              	RedPWM_ReadCapture:
 843              	.LFB26:
1029:.\Generated_Source\PSoC4/RedPWM.c **** 
1030:.\Generated_Source\PSoC4/RedPWM.c **** 
1031:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
1032:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_ReadCapture
1033:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
1034:.\Generated_Source\PSoC4/RedPWM.c **** *
1035:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
1036:.\Generated_Source\PSoC4/RedPWM.c **** *  Reads the captured counter value. This API is applicable only for
1037:.\Generated_Source\PSoC4/RedPWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:.\Generated_Source\PSoC4/RedPWM.c **** *
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 34


1039:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
1040:.\Generated_Source\PSoC4/RedPWM.c **** *  None
1041:.\Generated_Source\PSoC4/RedPWM.c **** *
1042:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
1043:.\Generated_Source\PSoC4/RedPWM.c **** *  Capture value
1044:.\Generated_Source\PSoC4/RedPWM.c **** *
1045:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
1046:.\Generated_Source\PSoC4/RedPWM.c **** uint32 RedPWM_ReadCapture(void)
1047:.\Generated_Source\PSoC4/RedPWM.c **** {
 844              		.loc 1 1047 0
 845              		.cfi_startproc
1048:.\Generated_Source\PSoC4/RedPWM.c ****     return (RedPWM_COMP_CAP_REG & RedPWM_16BIT_MASK);
 846              		.loc 1 1048 0
 847 0000 024B     		ldr	r3, .L71
 848 0002 1868     		ldr	r0, [r3]
 849 0004 0004     		lsl	r0, r0, #16
 850 0006 000C     		lsr	r0, r0, #16
1049:.\Generated_Source\PSoC4/RedPWM.c **** }
 851              		.loc 1 1049 0
 852              		@ sp needed
 853 0008 7047     		bx	lr
 854              	.L72:
 855 000a C046     		.align	2
 856              	.L71:
 857 000c 8C010540 		.word	1074069900
 858              		.cfi_endproc
 859              	.LFE26:
 860              		.size	RedPWM_ReadCapture, .-RedPWM_ReadCapture
 861              		.section	.text.RedPWM_ReadCaptureBuf,"ax",%progbits
 862              		.align	2
 863              		.global	RedPWM_ReadCaptureBuf
 864              		.code	16
 865              		.thumb_func
 866              		.type	RedPWM_ReadCaptureBuf, %function
 867              	RedPWM_ReadCaptureBuf:
 868              	.LFB27:
1050:.\Generated_Source\PSoC4/RedPWM.c **** 
1051:.\Generated_Source\PSoC4/RedPWM.c **** 
1052:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
1053:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_ReadCaptureBuf
1054:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
1055:.\Generated_Source\PSoC4/RedPWM.c **** *
1056:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
1057:.\Generated_Source\PSoC4/RedPWM.c **** *  Reads the capture buffer register. This API is applicable only for
1058:.\Generated_Source\PSoC4/RedPWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:.\Generated_Source\PSoC4/RedPWM.c **** *
1060:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
1061:.\Generated_Source\PSoC4/RedPWM.c **** *  None
1062:.\Generated_Source\PSoC4/RedPWM.c **** *
1063:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
1064:.\Generated_Source\PSoC4/RedPWM.c **** *  Capture buffer value
1065:.\Generated_Source\PSoC4/RedPWM.c **** *
1066:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
1067:.\Generated_Source\PSoC4/RedPWM.c **** uint32 RedPWM_ReadCaptureBuf(void)
1068:.\Generated_Source\PSoC4/RedPWM.c **** {
 869              		.loc 1 1068 0
 870              		.cfi_startproc
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 35


1069:.\Generated_Source\PSoC4/RedPWM.c ****     return (RedPWM_COMP_CAP_BUF_REG & RedPWM_16BIT_MASK);
 871              		.loc 1 1069 0
 872 0000 024B     		ldr	r3, .L74
 873 0002 1868     		ldr	r0, [r3]
 874 0004 0004     		lsl	r0, r0, #16
 875 0006 000C     		lsr	r0, r0, #16
1070:.\Generated_Source\PSoC4/RedPWM.c **** }
 876              		.loc 1 1070 0
 877              		@ sp needed
 878 0008 7047     		bx	lr
 879              	.L75:
 880 000a C046     		.align	2
 881              	.L74:
 882 000c 90010540 		.word	1074069904
 883              		.cfi_endproc
 884              	.LFE27:
 885              		.size	RedPWM_ReadCaptureBuf, .-RedPWM_ReadCaptureBuf
 886              		.section	.text.RedPWM_SetCaptureMode,"ax",%progbits
 887              		.align	2
 888              		.global	RedPWM_SetCaptureMode
 889              		.code	16
 890              		.thumb_func
 891              		.type	RedPWM_SetCaptureMode, %function
 892              	RedPWM_SetCaptureMode:
 893              	.LFB28:
1071:.\Generated_Source\PSoC4/RedPWM.c **** 
1072:.\Generated_Source\PSoC4/RedPWM.c **** 
1073:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
1074:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_SetCaptureMode
1075:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
1076:.\Generated_Source\PSoC4/RedPWM.c **** *
1077:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
1078:.\Generated_Source\PSoC4/RedPWM.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:.\Generated_Source\PSoC4/RedPWM.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:.\Generated_Source\PSoC4/RedPWM.c **** *  Quadrature Decoder modes.
1081:.\Generated_Source\PSoC4/RedPWM.c **** *
1082:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
1083:.\Generated_Source\PSoC4/RedPWM.c **** *  triggerMode: Enumerated trigger mode value
1084:.\Generated_Source\PSoC4/RedPWM.c **** *   Values:
1085:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_TRIG_LEVEL     - Level
1086:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_TRIG_RISING    - Rising edge
1087:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_TRIG_FALLING   - Falling edge
1088:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_TRIG_BOTH      - Both rising and falling edge
1089:.\Generated_Source\PSoC4/RedPWM.c **** *
1090:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
1091:.\Generated_Source\PSoC4/RedPWM.c **** *  None
1092:.\Generated_Source\PSoC4/RedPWM.c **** *
1093:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
1094:.\Generated_Source\PSoC4/RedPWM.c **** void RedPWM_SetCaptureMode(uint32 triggerMode)
1095:.\Generated_Source\PSoC4/RedPWM.c **** {
 894              		.loc 1 1095 0
 895              		.cfi_startproc
 896              	.LVL58:
 897 0000 10B5     		push	{r4, lr}
 898              		.cfi_def_cfa_offset 8
 899              		.cfi_offset 4, -8
 900              		.cfi_offset 14, -4
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 36


 901 0002 041C     		mov	r4, r0
1096:.\Generated_Source\PSoC4/RedPWM.c ****     uint8 enableInterrupts;
1097:.\Generated_Source\PSoC4/RedPWM.c **** 
1098:.\Generated_Source\PSoC4/RedPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 902              		.loc 1 1098 0
 903 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 904              	.LVL59:
1099:.\Generated_Source\PSoC4/RedPWM.c **** 
1100:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_TRIG_CONTROL1_REG &= (uint32)~RedPWM_CAPTURE_MASK;
 905              		.loc 1 1100 0
 906 0008 054B     		ldr	r3, .L77
 907 000a 1A68     		ldr	r2, [r3]
 908 000c 0321     		mov	r1, #3
 909 000e 8A43     		bic	r2, r1
 910 0010 1A60     		str	r2, [r3]
1101:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_TRIG_CONTROL1_REG |= triggerMode;
 911              		.loc 1 1101 0
 912 0012 1A68     		ldr	r2, [r3]
 913 0014 1443     		orr	r4, r2
 914              	.LVL60:
 915 0016 1C60     		str	r4, [r3]
1102:.\Generated_Source\PSoC4/RedPWM.c **** 
1103:.\Generated_Source\PSoC4/RedPWM.c ****     CyExitCriticalSection(enableInterrupts);
 916              		.loc 1 1103 0
 917 0018 FFF7FEFF 		bl	CyExitCriticalSection
 918              	.LVL61:
1104:.\Generated_Source\PSoC4/RedPWM.c **** }
 919              		.loc 1 1104 0
 920              		@ sp needed
 921 001c 10BD     		pop	{r4, pc}
 922              	.L78:
 923 001e C046     		.align	2
 924              	.L77:
 925 0020 A4010540 		.word	1074069924
 926              		.cfi_endproc
 927              	.LFE28:
 928              		.size	RedPWM_SetCaptureMode, .-RedPWM_SetCaptureMode
 929              		.section	.text.RedPWM_SetReloadMode,"ax",%progbits
 930              		.align	2
 931              		.global	RedPWM_SetReloadMode
 932              		.code	16
 933              		.thumb_func
 934              		.type	RedPWM_SetReloadMode, %function
 935              	RedPWM_SetReloadMode:
 936              	.LFB29:
1105:.\Generated_Source\PSoC4/RedPWM.c **** 
1106:.\Generated_Source\PSoC4/RedPWM.c **** 
1107:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
1108:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_SetReloadMode
1109:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
1110:.\Generated_Source\PSoC4/RedPWM.c **** *
1111:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
1112:.\Generated_Source\PSoC4/RedPWM.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:.\Generated_Source\PSoC4/RedPWM.c **** *  input.
1114:.\Generated_Source\PSoC4/RedPWM.c **** *
1115:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
1116:.\Generated_Source\PSoC4/RedPWM.c **** *  triggerMode: Enumerated trigger mode value
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 37


1117:.\Generated_Source\PSoC4/RedPWM.c **** *   Values:
1118:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_TRIG_LEVEL     - Level
1119:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_TRIG_RISING    - Rising edge
1120:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_TRIG_FALLING   - Falling edge
1121:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_TRIG_BOTH      - Both rising and falling edge
1122:.\Generated_Source\PSoC4/RedPWM.c **** *
1123:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
1124:.\Generated_Source\PSoC4/RedPWM.c **** *  None
1125:.\Generated_Source\PSoC4/RedPWM.c **** *
1126:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
1127:.\Generated_Source\PSoC4/RedPWM.c **** void RedPWM_SetReloadMode(uint32 triggerMode)
1128:.\Generated_Source\PSoC4/RedPWM.c **** {
 937              		.loc 1 1128 0
 938              		.cfi_startproc
 939              	.LVL62:
 940 0000 10B5     		push	{r4, lr}
 941              		.cfi_def_cfa_offset 8
 942              		.cfi_offset 4, -8
 943              		.cfi_offset 14, -4
 944 0002 041C     		mov	r4, r0
1129:.\Generated_Source\PSoC4/RedPWM.c ****     uint8 enableInterrupts;
1130:.\Generated_Source\PSoC4/RedPWM.c **** 
1131:.\Generated_Source\PSoC4/RedPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 945              		.loc 1 1131 0
 946 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 947              	.LVL63:
1132:.\Generated_Source\PSoC4/RedPWM.c **** 
1133:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_TRIG_CONTROL1_REG &= (uint32)~RedPWM_RELOAD_MASK;
 948              		.loc 1 1133 0
 949 0008 054B     		ldr	r3, .L80
 950 000a 1A68     		ldr	r2, [r3]
 951 000c 3021     		mov	r1, #48
 952 000e 8A43     		bic	r2, r1
 953 0010 1A60     		str	r2, [r3]
1134:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << RedPWM_RELOAD_SHIFT));
 954              		.loc 1 1134 0
 955 0012 1A68     		ldr	r2, [r3]
 956 0014 2401     		lsl	r4, r4, #4
 957              	.LVL64:
 958 0016 1443     		orr	r4, r2
 959 0018 1C60     		str	r4, [r3]
1135:.\Generated_Source\PSoC4/RedPWM.c **** 
1136:.\Generated_Source\PSoC4/RedPWM.c ****     CyExitCriticalSection(enableInterrupts);
 960              		.loc 1 1136 0
 961 001a FFF7FEFF 		bl	CyExitCriticalSection
 962              	.LVL65:
1137:.\Generated_Source\PSoC4/RedPWM.c **** }
 963              		.loc 1 1137 0
 964              		@ sp needed
 965 001e 10BD     		pop	{r4, pc}
 966              	.L81:
 967              		.align	2
 968              	.L80:
 969 0020 A4010540 		.word	1074069924
 970              		.cfi_endproc
 971              	.LFE29:
 972              		.size	RedPWM_SetReloadMode, .-RedPWM_SetReloadMode
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 38


 973              		.section	.text.RedPWM_SetStartMode,"ax",%progbits
 974              		.align	2
 975              		.global	RedPWM_SetStartMode
 976              		.code	16
 977              		.thumb_func
 978              		.type	RedPWM_SetStartMode, %function
 979              	RedPWM_SetStartMode:
 980              	.LFB30:
1138:.\Generated_Source\PSoC4/RedPWM.c **** 
1139:.\Generated_Source\PSoC4/RedPWM.c **** 
1140:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
1141:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_SetStartMode
1142:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
1143:.\Generated_Source\PSoC4/RedPWM.c **** *
1144:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
1145:.\Generated_Source\PSoC4/RedPWM.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:.\Generated_Source\PSoC4/RedPWM.c **** *  phiB input.
1147:.\Generated_Source\PSoC4/RedPWM.c **** *
1148:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
1149:.\Generated_Source\PSoC4/RedPWM.c **** *  triggerMode: Enumerated trigger mode value
1150:.\Generated_Source\PSoC4/RedPWM.c **** *   Values:
1151:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_TRIG_LEVEL     - Level
1152:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_TRIG_RISING    - Rising edge
1153:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_TRIG_FALLING   - Falling edge
1154:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_TRIG_BOTH      - Both rising and falling edge
1155:.\Generated_Source\PSoC4/RedPWM.c **** *
1156:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
1157:.\Generated_Source\PSoC4/RedPWM.c **** *  None
1158:.\Generated_Source\PSoC4/RedPWM.c **** *
1159:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
1160:.\Generated_Source\PSoC4/RedPWM.c **** void RedPWM_SetStartMode(uint32 triggerMode)
1161:.\Generated_Source\PSoC4/RedPWM.c **** {
 981              		.loc 1 1161 0
 982              		.cfi_startproc
 983              	.LVL66:
 984 0000 10B5     		push	{r4, lr}
 985              		.cfi_def_cfa_offset 8
 986              		.cfi_offset 4, -8
 987              		.cfi_offset 14, -4
 988 0002 041C     		mov	r4, r0
1162:.\Generated_Source\PSoC4/RedPWM.c ****     uint8 enableInterrupts;
1163:.\Generated_Source\PSoC4/RedPWM.c **** 
1164:.\Generated_Source\PSoC4/RedPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 989              		.loc 1 1164 0
 990 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 991              	.LVL67:
1165:.\Generated_Source\PSoC4/RedPWM.c **** 
1166:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_TRIG_CONTROL1_REG &= (uint32)~RedPWM_START_MASK;
 992              		.loc 1 1166 0
 993 0008 054B     		ldr	r3, .L83
 994 000a 1968     		ldr	r1, [r3]
 995 000c 054A     		ldr	r2, .L83+4
 996 000e 0A40     		and	r2, r1
 997 0010 1A60     		str	r2, [r3]
1167:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << RedPWM_START_SHIFT));
 998              		.loc 1 1167 0
 999 0012 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 39


 1000 0014 2402     		lsl	r4, r4, #8
 1001              	.LVL68:
 1002 0016 1443     		orr	r4, r2
 1003 0018 1C60     		str	r4, [r3]
1168:.\Generated_Source\PSoC4/RedPWM.c **** 
1169:.\Generated_Source\PSoC4/RedPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1004              		.loc 1 1169 0
 1005 001a FFF7FEFF 		bl	CyExitCriticalSection
 1006              	.LVL69:
1170:.\Generated_Source\PSoC4/RedPWM.c **** }
 1007              		.loc 1 1170 0
 1008              		@ sp needed
 1009 001e 10BD     		pop	{r4, pc}
 1010              	.L84:
 1011              		.align	2
 1012              	.L83:
 1013 0020 A4010540 		.word	1074069924
 1014 0024 FFFCFFFF 		.word	-769
 1015              		.cfi_endproc
 1016              	.LFE30:
 1017              		.size	RedPWM_SetStartMode, .-RedPWM_SetStartMode
 1018              		.section	.text.RedPWM_SetStopMode,"ax",%progbits
 1019              		.align	2
 1020              		.global	RedPWM_SetStopMode
 1021              		.code	16
 1022              		.thumb_func
 1023              		.type	RedPWM_SetStopMode, %function
 1024              	RedPWM_SetStopMode:
 1025              	.LFB31:
1171:.\Generated_Source\PSoC4/RedPWM.c **** 
1172:.\Generated_Source\PSoC4/RedPWM.c **** 
1173:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
1174:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_SetStopMode
1175:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
1176:.\Generated_Source\PSoC4/RedPWM.c **** *
1177:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
1178:.\Generated_Source\PSoC4/RedPWM.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:.\Generated_Source\PSoC4/RedPWM.c **** *
1180:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
1181:.\Generated_Source\PSoC4/RedPWM.c **** *  triggerMode: Enumerated trigger mode value
1182:.\Generated_Source\PSoC4/RedPWM.c **** *   Values:
1183:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_TRIG_LEVEL     - Level
1184:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_TRIG_RISING    - Rising edge
1185:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_TRIG_FALLING   - Falling edge
1186:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_TRIG_BOTH      - Both rising and falling edge
1187:.\Generated_Source\PSoC4/RedPWM.c **** *
1188:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
1189:.\Generated_Source\PSoC4/RedPWM.c **** *  None
1190:.\Generated_Source\PSoC4/RedPWM.c **** *
1191:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
1192:.\Generated_Source\PSoC4/RedPWM.c **** void RedPWM_SetStopMode(uint32 triggerMode)
1193:.\Generated_Source\PSoC4/RedPWM.c **** {
 1026              		.loc 1 1193 0
 1027              		.cfi_startproc
 1028              	.LVL70:
 1029 0000 10B5     		push	{r4, lr}
 1030              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 40


 1031              		.cfi_offset 4, -8
 1032              		.cfi_offset 14, -4
 1033 0002 041C     		mov	r4, r0
1194:.\Generated_Source\PSoC4/RedPWM.c ****     uint8 enableInterrupts;
1195:.\Generated_Source\PSoC4/RedPWM.c **** 
1196:.\Generated_Source\PSoC4/RedPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1034              		.loc 1 1196 0
 1035 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1036              	.LVL71:
1197:.\Generated_Source\PSoC4/RedPWM.c **** 
1198:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_TRIG_CONTROL1_REG &= (uint32)~RedPWM_STOP_MASK;
 1037              		.loc 1 1198 0
 1038 0008 054B     		ldr	r3, .L86
 1039 000a 1A68     		ldr	r2, [r3]
 1040 000c C021     		mov	r1, #192
 1041 000e 8A43     		bic	r2, r1
 1042 0010 1A60     		str	r2, [r3]
1199:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << RedPWM_STOP_SHIFT));
 1043              		.loc 1 1199 0
 1044 0012 1A68     		ldr	r2, [r3]
 1045 0014 A401     		lsl	r4, r4, #6
 1046              	.LVL72:
 1047 0016 1443     		orr	r4, r2
 1048 0018 1C60     		str	r4, [r3]
1200:.\Generated_Source\PSoC4/RedPWM.c **** 
1201:.\Generated_Source\PSoC4/RedPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1049              		.loc 1 1201 0
 1050 001a FFF7FEFF 		bl	CyExitCriticalSection
 1051              	.LVL73:
1202:.\Generated_Source\PSoC4/RedPWM.c **** }
 1052              		.loc 1 1202 0
 1053              		@ sp needed
 1054 001e 10BD     		pop	{r4, pc}
 1055              	.L87:
 1056              		.align	2
 1057              	.L86:
 1058 0020 A4010540 		.word	1074069924
 1059              		.cfi_endproc
 1060              	.LFE31:
 1061              		.size	RedPWM_SetStopMode, .-RedPWM_SetStopMode
 1062              		.section	.text.RedPWM_SetCountMode,"ax",%progbits
 1063              		.align	2
 1064              		.global	RedPWM_SetCountMode
 1065              		.code	16
 1066              		.thumb_func
 1067              		.type	RedPWM_SetCountMode, %function
 1068              	RedPWM_SetCountMode:
 1069              	.LFB32:
1203:.\Generated_Source\PSoC4/RedPWM.c **** 
1204:.\Generated_Source\PSoC4/RedPWM.c **** 
1205:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
1206:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_SetCountMode
1207:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
1208:.\Generated_Source\PSoC4/RedPWM.c **** *
1209:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
1210:.\Generated_Source\PSoC4/RedPWM.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:.\Generated_Source\PSoC4/RedPWM.c **** *  input.
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 41


1212:.\Generated_Source\PSoC4/RedPWM.c **** *
1213:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
1214:.\Generated_Source\PSoC4/RedPWM.c **** *  triggerMode: Enumerated trigger mode value
1215:.\Generated_Source\PSoC4/RedPWM.c **** *   Values:
1216:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_TRIG_LEVEL     - Level
1217:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_TRIG_RISING    - Rising edge
1218:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_TRIG_FALLING   - Falling edge
1219:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_TRIG_BOTH      - Both rising and falling edge
1220:.\Generated_Source\PSoC4/RedPWM.c **** *
1221:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
1222:.\Generated_Source\PSoC4/RedPWM.c **** *  None
1223:.\Generated_Source\PSoC4/RedPWM.c **** *
1224:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
1225:.\Generated_Source\PSoC4/RedPWM.c **** void RedPWM_SetCountMode(uint32 triggerMode)
1226:.\Generated_Source\PSoC4/RedPWM.c **** {
 1070              		.loc 1 1226 0
 1071              		.cfi_startproc
 1072              	.LVL74:
 1073 0000 10B5     		push	{r4, lr}
 1074              		.cfi_def_cfa_offset 8
 1075              		.cfi_offset 4, -8
 1076              		.cfi_offset 14, -4
 1077 0002 041C     		mov	r4, r0
1227:.\Generated_Source\PSoC4/RedPWM.c ****     uint8 enableInterrupts;
1228:.\Generated_Source\PSoC4/RedPWM.c **** 
1229:.\Generated_Source\PSoC4/RedPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1078              		.loc 1 1229 0
 1079 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1080              	.LVL75:
1230:.\Generated_Source\PSoC4/RedPWM.c **** 
1231:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_TRIG_CONTROL1_REG &= (uint32)~RedPWM_COUNT_MASK;
 1081              		.loc 1 1231 0
 1082 0008 054B     		ldr	r3, .L89
 1083 000a 1A68     		ldr	r2, [r3]
 1084 000c 0C21     		mov	r1, #12
 1085 000e 8A43     		bic	r2, r1
 1086 0010 1A60     		str	r2, [r3]
1232:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << RedPWM_COUNT_SHIFT));
 1087              		.loc 1 1232 0
 1088 0012 1A68     		ldr	r2, [r3]
 1089 0014 A400     		lsl	r4, r4, #2
 1090              	.LVL76:
 1091 0016 1443     		orr	r4, r2
 1092 0018 1C60     		str	r4, [r3]
1233:.\Generated_Source\PSoC4/RedPWM.c **** 
1234:.\Generated_Source\PSoC4/RedPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1093              		.loc 1 1234 0
 1094 001a FFF7FEFF 		bl	CyExitCriticalSection
 1095              	.LVL77:
1235:.\Generated_Source\PSoC4/RedPWM.c **** }
 1096              		.loc 1 1235 0
 1097              		@ sp needed
 1098 001e 10BD     		pop	{r4, pc}
 1099              	.L90:
 1100              		.align	2
 1101              	.L89:
 1102 0020 A4010540 		.word	1074069924
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 42


 1103              		.cfi_endproc
 1104              	.LFE32:
 1105              		.size	RedPWM_SetCountMode, .-RedPWM_SetCountMode
 1106              		.section	.text.RedPWM_TriggerCommand,"ax",%progbits
 1107              		.align	2
 1108              		.global	RedPWM_TriggerCommand
 1109              		.code	16
 1110              		.thumb_func
 1111              		.type	RedPWM_TriggerCommand, %function
 1112              	RedPWM_TriggerCommand:
 1113              	.LFB33:
1236:.\Generated_Source\PSoC4/RedPWM.c **** 
1237:.\Generated_Source\PSoC4/RedPWM.c **** 
1238:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
1239:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_TriggerCommand
1240:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
1241:.\Generated_Source\PSoC4/RedPWM.c **** *
1242:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
1243:.\Generated_Source\PSoC4/RedPWM.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:.\Generated_Source\PSoC4/RedPWM.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:.\Generated_Source\PSoC4/RedPWM.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:.\Generated_Source\PSoC4/RedPWM.c **** *
1247:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
1248:.\Generated_Source\PSoC4/RedPWM.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:.\Generated_Source\PSoC4/RedPWM.c **** *        command should apply to.  This function from one instance can be used
1250:.\Generated_Source\PSoC4/RedPWM.c **** *        to apply the command to any of the instances in the design.
1251:.\Generated_Source\PSoC4/RedPWM.c **** *        The mask value for a specific instance is available with the MASK
1252:.\Generated_Source\PSoC4/RedPWM.c **** *        define.
1253:.\Generated_Source\PSoC4/RedPWM.c **** *  command: Enumerated command values. Capture command only applicable for
1254:.\Generated_Source\PSoC4/RedPWM.c **** *           Timer/Counter with Capture and PWM modes.
1255:.\Generated_Source\PSoC4/RedPWM.c **** *   Values:
1256:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_CMD_CAPTURE    - Trigger Capture/Switch command
1257:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_CMD_RELOAD     - Trigger Reload/Index command
1258:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_CMD_STOP       - Trigger Stop/Kill command
1259:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_CMD_START      - Trigger Start/phiB command
1260:.\Generated_Source\PSoC4/RedPWM.c **** *
1261:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
1262:.\Generated_Source\PSoC4/RedPWM.c **** *  None
1263:.\Generated_Source\PSoC4/RedPWM.c **** *
1264:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
1265:.\Generated_Source\PSoC4/RedPWM.c **** void RedPWM_TriggerCommand(uint32 mask, uint32 command)
1266:.\Generated_Source\PSoC4/RedPWM.c **** {
 1114              		.loc 1 1266 0
 1115              		.cfi_startproc
 1116              	.LVL78:
 1117 0000 38B5     		push	{r3, r4, r5, lr}
 1118              		.cfi_def_cfa_offset 16
 1119              		.cfi_offset 3, -16
 1120              		.cfi_offset 4, -12
 1121              		.cfi_offset 5, -8
 1122              		.cfi_offset 14, -4
 1123 0002 041C     		mov	r4, r0
 1124 0004 0D1C     		mov	r5, r1
1267:.\Generated_Source\PSoC4/RedPWM.c ****     uint8 enableInterrupts;
1268:.\Generated_Source\PSoC4/RedPWM.c **** 
1269:.\Generated_Source\PSoC4/RedPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1125              		.loc 1 1269 0
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 43


 1126 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1127              	.LVL79:
1270:.\Generated_Source\PSoC4/RedPWM.c **** 
1271:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_COMMAND_REG = ((uint32)(mask << command));
 1128              		.loc 1 1271 0
 1129 000a AC40     		lsl	r4, r4, r5
 1130              	.LVL80:
 1131 000c 024B     		ldr	r3, .L92
 1132 000e 1C60     		str	r4, [r3]
1272:.\Generated_Source\PSoC4/RedPWM.c **** 
1273:.\Generated_Source\PSoC4/RedPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1133              		.loc 1 1273 0
 1134 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1135              	.LVL81:
1274:.\Generated_Source\PSoC4/RedPWM.c **** }
 1136              		.loc 1 1274 0
 1137              		@ sp needed
 1138              	.LVL82:
 1139 0014 38BD     		pop	{r3, r4, r5, pc}
 1140              	.L93:
 1141 0016 C046     		.align	2
 1142              	.L92:
 1143 0018 08000540 		.word	1074069512
 1144              		.cfi_endproc
 1145              	.LFE33:
 1146              		.size	RedPWM_TriggerCommand, .-RedPWM_TriggerCommand
 1147              		.section	.text.RedPWM_Enable,"ax",%progbits
 1148              		.align	2
 1149              		.global	RedPWM_Enable
 1150              		.code	16
 1151              		.thumb_func
 1152              		.type	RedPWM_Enable, %function
 1153              	RedPWM_Enable:
 1154              	.LFB1:
 178:.\Generated_Source\PSoC4/RedPWM.c ****     uint8 enableInterrupts;
 1155              		.loc 1 178 0
 1156              		.cfi_startproc
 1157 0000 08B5     		push	{r3, lr}
 1158              		.cfi_def_cfa_offset 8
 1159              		.cfi_offset 3, -8
 1160              		.cfi_offset 14, -4
 181:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_BLOCK_CONTROL_REG |= RedPWM_MASK;
 1161              		.loc 1 181 0
 1162 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1163              	.LVL83:
 182:.\Generated_Source\PSoC4/RedPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1164              		.loc 1 182 0
 1165 0006 064A     		ldr	r2, .L95
 1166 0008 1168     		ldr	r1, [r2]
 1167 000a 0423     		mov	r3, #4
 1168 000c 0B43     		orr	r3, r1
 1169 000e 1360     		str	r3, [r2]
 183:.\Generated_Source\PSoC4/RedPWM.c **** 
 1170              		.loc 1 183 0
 1171 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1172              	.LVL84:
 188:.\Generated_Source\PSoC4/RedPWM.c ****         #endif /* (0u == RedPWM_PWM_START_SIGNAL_PRESENT) */
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 44


 1173              		.loc 1 188 0
 1174 0014 0420     		mov	r0, #4
 1175 0016 1821     		mov	r1, #24
 1176 0018 FFF7FEFF 		bl	RedPWM_TriggerCommand
 1177              	.LVL85:
 203:.\Generated_Source\PSoC4/RedPWM.c **** 
 1178              		.loc 1 203 0
 1179              		@ sp needed
 1180 001c 08BD     		pop	{r3, pc}
 1181              	.L96:
 1182 001e C046     		.align	2
 1183              	.L95:
 1184 0020 00000540 		.word	1074069504
 1185              		.cfi_endproc
 1186              	.LFE1:
 1187              		.size	RedPWM_Enable, .-RedPWM_Enable
 1188              		.section	.text.RedPWM_ReadStatus,"ax",%progbits
 1189              		.align	2
 1190              		.global	RedPWM_ReadStatus
 1191              		.code	16
 1192              		.thumb_func
 1193              		.type	RedPWM_ReadStatus, %function
 1194              	RedPWM_ReadStatus:
 1195              	.LFB34:
1275:.\Generated_Source\PSoC4/RedPWM.c **** 
1276:.\Generated_Source\PSoC4/RedPWM.c **** 
1277:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
1278:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_ReadStatus
1279:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
1280:.\Generated_Source\PSoC4/RedPWM.c **** *
1281:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
1282:.\Generated_Source\PSoC4/RedPWM.c **** *  Reads the status of the RedPWM.
1283:.\Generated_Source\PSoC4/RedPWM.c **** *
1284:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
1285:.\Generated_Source\PSoC4/RedPWM.c **** *  None
1286:.\Generated_Source\PSoC4/RedPWM.c **** *
1287:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
1288:.\Generated_Source\PSoC4/RedPWM.c **** *  Status
1289:.\Generated_Source\PSoC4/RedPWM.c **** *   Values:
1290:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_STATUS_DOWN    - Set if counting down
1291:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_STATUS_RUNNING - Set if counter is running
1292:.\Generated_Source\PSoC4/RedPWM.c **** *
1293:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
1294:.\Generated_Source\PSoC4/RedPWM.c **** uint32 RedPWM_ReadStatus(void)
1295:.\Generated_Source\PSoC4/RedPWM.c **** {
 1196              		.loc 1 1295 0
 1197              		.cfi_startproc
1296:.\Generated_Source\PSoC4/RedPWM.c ****     return ((RedPWM_STATUS_REG >> RedPWM_RUNNING_STATUS_SHIFT) |
 1198              		.loc 1 1296 0
 1199 0000 034B     		ldr	r3, .L98
 1200 0002 1868     		ldr	r0, [r3]
 1201 0004 820F     		lsr	r2, r0, #30
1297:.\Generated_Source\PSoC4/RedPWM.c ****             (RedPWM_STATUS_REG & RedPWM_STATUS_DOWN));
 1202              		.loc 1 1297 0
 1203 0006 1B68     		ldr	r3, [r3]
 1204 0008 0120     		mov	r0, #1
 1205 000a 1840     		and	r0, r3
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 45


1296:.\Generated_Source\PSoC4/RedPWM.c ****     return ((RedPWM_STATUS_REG >> RedPWM_RUNNING_STATUS_SHIFT) |
 1206              		.loc 1 1296 0
 1207 000c 1043     		orr	r0, r2
1298:.\Generated_Source\PSoC4/RedPWM.c **** }
 1208              		.loc 1 1298 0
 1209              		@ sp needed
 1210 000e 7047     		bx	lr
 1211              	.L99:
 1212              		.align	2
 1213              	.L98:
 1214 0010 84010540 		.word	1074069892
 1215              		.cfi_endproc
 1216              	.LFE34:
 1217              		.size	RedPWM_ReadStatus, .-RedPWM_ReadStatus
 1218              		.section	.text.RedPWM_SetInterruptMode,"ax",%progbits
 1219              		.align	2
 1220              		.global	RedPWM_SetInterruptMode
 1221              		.code	16
 1222              		.thumb_func
 1223              		.type	RedPWM_SetInterruptMode, %function
 1224              	RedPWM_SetInterruptMode:
 1225              	.LFB35:
1299:.\Generated_Source\PSoC4/RedPWM.c **** 
1300:.\Generated_Source\PSoC4/RedPWM.c **** 
1301:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
1302:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_SetInterruptMode
1303:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
1304:.\Generated_Source\PSoC4/RedPWM.c **** *
1305:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
1306:.\Generated_Source\PSoC4/RedPWM.c **** *  Sets the interrupt mask to control which interrupt
1307:.\Generated_Source\PSoC4/RedPWM.c **** *  requests generate the interrupt signal.
1308:.\Generated_Source\PSoC4/RedPWM.c **** *
1309:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
1310:.\Generated_Source\PSoC4/RedPWM.c **** *   interruptMask: Mask of bits to be enabled
1311:.\Generated_Source\PSoC4/RedPWM.c **** *   Values:
1312:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_INTR_MASK_TC       - Terminal count mask
1313:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:.\Generated_Source\PSoC4/RedPWM.c **** *
1315:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
1316:.\Generated_Source\PSoC4/RedPWM.c **** *  None
1317:.\Generated_Source\PSoC4/RedPWM.c **** *
1318:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
1319:.\Generated_Source\PSoC4/RedPWM.c **** void RedPWM_SetInterruptMode(uint32 interruptMask)
1320:.\Generated_Source\PSoC4/RedPWM.c **** {
 1226              		.loc 1 1320 0
 1227              		.cfi_startproc
 1228              	.LVL86:
1321:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_INTERRUPT_MASK_REG =  interruptMask;
 1229              		.loc 1 1321 0
 1230 0000 014B     		ldr	r3, .L101
 1231 0002 1860     		str	r0, [r3]
1322:.\Generated_Source\PSoC4/RedPWM.c **** }
 1232              		.loc 1 1322 0
 1233              		@ sp needed
 1234 0004 7047     		bx	lr
 1235              	.L102:
 1236 0006 C046     		.align	2
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 46


 1237              	.L101:
 1238 0008 B8010540 		.word	1074069944
 1239              		.cfi_endproc
 1240              	.LFE35:
 1241              		.size	RedPWM_SetInterruptMode, .-RedPWM_SetInterruptMode
 1242              		.section	.text.RedPWM_Init,"ax",%progbits
 1243              		.align	2
 1244              		.global	RedPWM_Init
 1245              		.code	16
 1246              		.thumb_func
 1247              		.type	RedPWM_Init, %function
 1248              	RedPWM_Init:
 1249              	.LFB0:
  39:.\Generated_Source\PSoC4/RedPWM.c **** 
 1250              		.loc 1 39 0
 1251              		.cfi_startproc
 1252 0000 10B5     		push	{r4, lr}
 1253              		.cfi_def_cfa_offset 8
 1254              		.cfi_offset 4, -8
 1255              		.cfi_offset 14, -4
  89:.\Generated_Source\PSoC4/RedPWM.c **** 
 1256              		.loc 1 89 0
 1257 0002 0F4C     		ldr	r4, .L104
 1258 0004 8023     		mov	r3, #128
 1259 0006 DB04     		lsl	r3, r3, #19
 1260 0008 2360     		str	r3, [r4]
  95:.\Generated_Source\PSoC4/RedPWM.c ****             
 1261              		.loc 1 95 0
 1262 000a 2368     		ldr	r3, [r4]
 1263 000c 2360     		str	r3, [r4]
 103:.\Generated_Source\PSoC4/RedPWM.c ****             #endif  /* (RedPWM_CY_TCPWM_V2 && RedPWM_PWM_UPDOWN_CNT_USED && !RedPWM_CY_TCPWM_4000) 
 1264              		.loc 1 103 0
 1265 000e 0020     		mov	r0, #0
 1266 0010 FFF7FEFF 		bl	RedPWM_WriteCounter
 1267              	.LVL87:
 112:.\Generated_Source\PSoC4/RedPWM.c ****         #endif  /* (RedPWM__PWM == RedPWM_PWM_MODE) */
 1268              		.loc 1 112 0
 1269 0014 2368     		ldr	r3, [r4]
 1270 0016 8022     		mov	r2, #128
 1271 0018 9200     		lsl	r2, r2, #2
 1272 001a 1343     		orr	r3, r2
 1273 001c 2360     		str	r3, [r4]
 116:.\Generated_Source\PSoC4/RedPWM.c ****     
 1274              		.loc 1 116 0
 1275 001e F53A     		sub	r2, r2, #245
 1276 0020 FF3A     		sub	r2, r2, #255
 1277 0022 084B     		ldr	r3, .L104+4
 1278 0024 1A60     		str	r2, [r3]
 119:.\Generated_Source\PSoC4/RedPWM.c **** 
 1279              		.loc 1 119 0
 1280 0026 0020     		mov	r0, #0
 1281 0028 FFF7FEFF 		bl	RedPWM_SetInterruptMode
 1282              	.LVL88:
 129:.\Generated_Source\PSoC4/RedPWM.c ****             #endif  /* ( RedPWM_PWM_LEFT == RedPWM_PWM_ALIGN) */
 1283              		.loc 1 129 0
 1284 002c 3122     		mov	r2, #49
 1285 002e 064B     		ldr	r3, .L104+8
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 47


 1286 0030 1A60     		str	r2, [r3]
 146:.\Generated_Source\PSoC4/RedPWM.c ****         RedPWM_WriteCompare(RedPWM_PWM_COMPARE_VALUE);
 1287              		.loc 1 146 0
 1288 0032 FF20     		mov	r0, #255
 1289 0034 FFF7FEFF 		bl	RedPWM_WritePeriod
 1290              	.LVL89:
 147:.\Generated_Source\PSoC4/RedPWM.c **** 
 1291              		.loc 1 147 0
 1292 0038 0020     		mov	r0, #0
 1293 003a FFF7FEFF 		bl	RedPWM_WriteCompare
 1294              	.LVL90:
 160:.\Generated_Source\PSoC4/RedPWM.c **** 
 1295              		.loc 1 160 0
 1296              		@ sp needed
 1297 003e 10BD     		pop	{r4, pc}
 1298              	.L105:
 1299              		.align	2
 1300              	.L104:
 1301 0040 80010540 		.word	1074069888
 1302 0044 A4010540 		.word	1074069924
 1303 0048 A8010540 		.word	1074069928
 1304              		.cfi_endproc
 1305              	.LFE0:
 1306              		.size	RedPWM_Init, .-RedPWM_Init
 1307              		.section	.text.RedPWM_Start,"ax",%progbits
 1308              		.align	2
 1309              		.global	RedPWM_Start
 1310              		.code	16
 1311              		.thumb_func
 1312              		.type	RedPWM_Start, %function
 1313              	RedPWM_Start:
 1314              	.LFB2:
 231:.\Generated_Source\PSoC4/RedPWM.c ****     if (0u == RedPWM_initVar)
 1315              		.loc 1 231 0
 1316              		.cfi_startproc
 1317 0000 08B5     		push	{r3, lr}
 1318              		.cfi_def_cfa_offset 8
 1319              		.cfi_offset 3, -8
 1320              		.cfi_offset 14, -4
 232:.\Generated_Source\PSoC4/RedPWM.c ****     {
 1321              		.loc 1 232 0
 1322 0002 064B     		ldr	r3, .L108
 1323 0004 1B78     		ldrb	r3, [r3]
 1324 0006 002B     		cmp	r3, #0
 1325 0008 04D1     		bne	.L107
 234:.\Generated_Source\PSoC4/RedPWM.c ****         RedPWM_initVar = 1u;
 1326              		.loc 1 234 0
 1327 000a FFF7FEFF 		bl	RedPWM_Init
 1328              	.LVL91:
 235:.\Generated_Source\PSoC4/RedPWM.c ****     }
 1329              		.loc 1 235 0
 1330 000e 0122     		mov	r2, #1
 1331 0010 024B     		ldr	r3, .L108
 1332 0012 1A70     		strb	r2, [r3]
 1333              	.L107:
 238:.\Generated_Source\PSoC4/RedPWM.c **** }
 1334              		.loc 1 238 0
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 48


 1335 0014 FFF7FEFF 		bl	RedPWM_Enable
 1336              	.LVL92:
 239:.\Generated_Source\PSoC4/RedPWM.c **** 
 1337              		.loc 1 239 0
 1338              		@ sp needed
 1339 0018 08BD     		pop	{r3, pc}
 1340              	.L109:
 1341 001a C046     		.align	2
 1342              	.L108:
 1343 001c 00000000 		.word	.LANCHOR0
 1344              		.cfi_endproc
 1345              	.LFE2:
 1346              		.size	RedPWM_Start, .-RedPWM_Start
 1347              		.section	.text.RedPWM_GetInterruptSourceMasked,"ax",%progbits
 1348              		.align	2
 1349              		.global	RedPWM_GetInterruptSourceMasked
 1350              		.code	16
 1351              		.thumb_func
 1352              		.type	RedPWM_GetInterruptSourceMasked, %function
 1353              	RedPWM_GetInterruptSourceMasked:
 1354              	.LFB36:
1323:.\Generated_Source\PSoC4/RedPWM.c **** 
1324:.\Generated_Source\PSoC4/RedPWM.c **** 
1325:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
1326:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_GetInterruptSourceMasked
1327:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
1328:.\Generated_Source\PSoC4/RedPWM.c **** *
1329:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
1330:.\Generated_Source\PSoC4/RedPWM.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:.\Generated_Source\PSoC4/RedPWM.c **** *
1332:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
1333:.\Generated_Source\PSoC4/RedPWM.c **** *   None
1334:.\Generated_Source\PSoC4/RedPWM.c **** *
1335:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
1336:.\Generated_Source\PSoC4/RedPWM.c **** *  Masked interrupt source
1337:.\Generated_Source\PSoC4/RedPWM.c **** *   Values:
1338:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_INTR_MASK_TC       - Terminal count mask
1339:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:.\Generated_Source\PSoC4/RedPWM.c **** *
1341:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
1342:.\Generated_Source\PSoC4/RedPWM.c **** uint32 RedPWM_GetInterruptSourceMasked(void)
1343:.\Generated_Source\PSoC4/RedPWM.c **** {
 1355              		.loc 1 1343 0
 1356              		.cfi_startproc
1344:.\Generated_Source\PSoC4/RedPWM.c ****     return (RedPWM_INTERRUPT_MASKED_REG);
 1357              		.loc 1 1344 0
 1358 0000 014B     		ldr	r3, .L111
 1359 0002 1868     		ldr	r0, [r3]
1345:.\Generated_Source\PSoC4/RedPWM.c **** }
 1360              		.loc 1 1345 0
 1361              		@ sp needed
 1362 0004 7047     		bx	lr
 1363              	.L112:
 1364 0006 C046     		.align	2
 1365              	.L111:
 1366 0008 BC010540 		.word	1074069948
 1367              		.cfi_endproc
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 49


 1368              	.LFE36:
 1369              		.size	RedPWM_GetInterruptSourceMasked, .-RedPWM_GetInterruptSourceMasked
 1370              		.section	.text.RedPWM_GetInterruptSource,"ax",%progbits
 1371              		.align	2
 1372              		.global	RedPWM_GetInterruptSource
 1373              		.code	16
 1374              		.thumb_func
 1375              		.type	RedPWM_GetInterruptSource, %function
 1376              	RedPWM_GetInterruptSource:
 1377              	.LFB37:
1346:.\Generated_Source\PSoC4/RedPWM.c **** 
1347:.\Generated_Source\PSoC4/RedPWM.c **** 
1348:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
1349:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_GetInterruptSource
1350:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
1351:.\Generated_Source\PSoC4/RedPWM.c **** *
1352:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
1353:.\Generated_Source\PSoC4/RedPWM.c **** *  Gets the interrupt requests (without masking).
1354:.\Generated_Source\PSoC4/RedPWM.c **** *
1355:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
1356:.\Generated_Source\PSoC4/RedPWM.c **** *  None
1357:.\Generated_Source\PSoC4/RedPWM.c **** *
1358:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
1359:.\Generated_Source\PSoC4/RedPWM.c **** *  Interrupt request value
1360:.\Generated_Source\PSoC4/RedPWM.c **** *   Values:
1361:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_INTR_MASK_TC       - Terminal count mask
1362:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:.\Generated_Source\PSoC4/RedPWM.c **** *
1364:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
1365:.\Generated_Source\PSoC4/RedPWM.c **** uint32 RedPWM_GetInterruptSource(void)
1366:.\Generated_Source\PSoC4/RedPWM.c **** {
 1378              		.loc 1 1366 0
 1379              		.cfi_startproc
1367:.\Generated_Source\PSoC4/RedPWM.c ****     return (RedPWM_INTERRUPT_REQ_REG);
 1380              		.loc 1 1367 0
 1381 0000 014B     		ldr	r3, .L114
 1382 0002 1868     		ldr	r0, [r3]
1368:.\Generated_Source\PSoC4/RedPWM.c **** }
 1383              		.loc 1 1368 0
 1384              		@ sp needed
 1385 0004 7047     		bx	lr
 1386              	.L115:
 1387 0006 C046     		.align	2
 1388              	.L114:
 1389 0008 B0010540 		.word	1074069936
 1390              		.cfi_endproc
 1391              	.LFE37:
 1392              		.size	RedPWM_GetInterruptSource, .-RedPWM_GetInterruptSource
 1393              		.section	.text.RedPWM_ClearInterrupt,"ax",%progbits
 1394              		.align	2
 1395              		.global	RedPWM_ClearInterrupt
 1396              		.code	16
 1397              		.thumb_func
 1398              		.type	RedPWM_ClearInterrupt, %function
 1399              	RedPWM_ClearInterrupt:
 1400              	.LFB38:
1369:.\Generated_Source\PSoC4/RedPWM.c **** 
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 50


1370:.\Generated_Source\PSoC4/RedPWM.c **** 
1371:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
1372:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_ClearInterrupt
1373:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
1374:.\Generated_Source\PSoC4/RedPWM.c **** *
1375:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
1376:.\Generated_Source\PSoC4/RedPWM.c **** *  Clears the interrupt request.
1377:.\Generated_Source\PSoC4/RedPWM.c **** *
1378:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
1379:.\Generated_Source\PSoC4/RedPWM.c **** *   interruptMask: Mask of interrupts to clear
1380:.\Generated_Source\PSoC4/RedPWM.c **** *   Values:
1381:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_INTR_MASK_TC       - Terminal count mask
1382:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:.\Generated_Source\PSoC4/RedPWM.c **** *
1384:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
1385:.\Generated_Source\PSoC4/RedPWM.c **** *  None
1386:.\Generated_Source\PSoC4/RedPWM.c **** *
1387:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
1388:.\Generated_Source\PSoC4/RedPWM.c **** void RedPWM_ClearInterrupt(uint32 interruptMask)
1389:.\Generated_Source\PSoC4/RedPWM.c **** {
 1401              		.loc 1 1389 0
 1402              		.cfi_startproc
 1403              	.LVL93:
1390:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_INTERRUPT_REQ_REG = interruptMask;
 1404              		.loc 1 1390 0
 1405 0000 014B     		ldr	r3, .L117
 1406 0002 1860     		str	r0, [r3]
1391:.\Generated_Source\PSoC4/RedPWM.c **** }
 1407              		.loc 1 1391 0
 1408              		@ sp needed
 1409 0004 7047     		bx	lr
 1410              	.L118:
 1411 0006 C046     		.align	2
 1412              	.L117:
 1413 0008 B0010540 		.word	1074069936
 1414              		.cfi_endproc
 1415              	.LFE38:
 1416              		.size	RedPWM_ClearInterrupt, .-RedPWM_ClearInterrupt
 1417              		.section	.text.RedPWM_SetInterrupt,"ax",%progbits
 1418              		.align	2
 1419              		.global	RedPWM_SetInterrupt
 1420              		.code	16
 1421              		.thumb_func
 1422              		.type	RedPWM_SetInterrupt, %function
 1423              	RedPWM_SetInterrupt:
 1424              	.LFB39:
1392:.\Generated_Source\PSoC4/RedPWM.c **** 
1393:.\Generated_Source\PSoC4/RedPWM.c **** 
1394:.\Generated_Source\PSoC4/RedPWM.c **** /*******************************************************************************
1395:.\Generated_Source\PSoC4/RedPWM.c **** * Function Name: RedPWM_SetInterrupt
1396:.\Generated_Source\PSoC4/RedPWM.c **** ********************************************************************************
1397:.\Generated_Source\PSoC4/RedPWM.c **** *
1398:.\Generated_Source\PSoC4/RedPWM.c **** * Summary:
1399:.\Generated_Source\PSoC4/RedPWM.c **** *  Sets a software interrupt request.
1400:.\Generated_Source\PSoC4/RedPWM.c **** *
1401:.\Generated_Source\PSoC4/RedPWM.c **** * Parameters:
1402:.\Generated_Source\PSoC4/RedPWM.c **** *   interruptMask: Mask of interrupts to set
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 51


1403:.\Generated_Source\PSoC4/RedPWM.c **** *   Values:
1404:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_INTR_MASK_TC       - Terminal count mask
1405:.\Generated_Source\PSoC4/RedPWM.c **** *     - RedPWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:.\Generated_Source\PSoC4/RedPWM.c **** *
1407:.\Generated_Source\PSoC4/RedPWM.c **** * Return:
1408:.\Generated_Source\PSoC4/RedPWM.c **** *  None
1409:.\Generated_Source\PSoC4/RedPWM.c **** *
1410:.\Generated_Source\PSoC4/RedPWM.c **** *******************************************************************************/
1411:.\Generated_Source\PSoC4/RedPWM.c **** void RedPWM_SetInterrupt(uint32 interruptMask)
1412:.\Generated_Source\PSoC4/RedPWM.c **** {
 1425              		.loc 1 1412 0
 1426              		.cfi_startproc
 1427              	.LVL94:
1413:.\Generated_Source\PSoC4/RedPWM.c ****     RedPWM_INTERRUPT_SET_REG = interruptMask;
 1428              		.loc 1 1413 0
 1429 0000 014B     		ldr	r3, .L120
 1430 0002 1860     		str	r0, [r3]
1414:.\Generated_Source\PSoC4/RedPWM.c **** }
 1431              		.loc 1 1414 0
 1432              		@ sp needed
 1433 0004 7047     		bx	lr
 1434              	.L121:
 1435 0006 C046     		.align	2
 1436              	.L120:
 1437 0008 B4010540 		.word	1074069940
 1438              		.cfi_endproc
 1439              	.LFE39:
 1440              		.size	RedPWM_SetInterrupt, .-RedPWM_SetInterrupt
 1441              		.global	RedPWM_initVar
 1442              		.bss
 1443              		.set	.LANCHOR0,. + 0
 1444              		.type	RedPWM_initVar, %object
 1445              		.size	RedPWM_initVar, 1
 1446              	RedPWM_initVar:
 1447 0000 00       		.space	1
 1448              		.text
 1449              	.Letext0:
 1450              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1451              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1452              		.section	.debug_info,"",%progbits
 1453              	.Ldebug_info0:
 1454 0000 FF080000 		.4byte	0x8ff
 1455 0004 0400     		.2byte	0x4
 1456 0006 00000000 		.4byte	.Ldebug_abbrev0
 1457 000a 04       		.byte	0x4
 1458 000b 01       		.uleb128 0x1
 1459 000c DC020000 		.4byte	.LASF76
 1460 0010 01       		.byte	0x1
 1461 0011 9E030000 		.4byte	.LASF77
 1462 0015 E9030000 		.4byte	.LASF78
 1463 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1464 001d 00000000 		.4byte	0
 1465 0021 00000000 		.4byte	.Ldebug_line0
 1466 0025 02       		.uleb128 0x2
 1467 0026 01       		.byte	0x1
 1468 0027 06       		.byte	0x6
 1469 0028 C5000000 		.4byte	.LASF0
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 52


 1470 002c 02       		.uleb128 0x2
 1471 002d 01       		.byte	0x1
 1472 002e 08       		.byte	0x8
 1473 002f 12040000 		.4byte	.LASF1
 1474 0033 02       		.uleb128 0x2
 1475 0034 02       		.byte	0x2
 1476 0035 05       		.byte	0x5
 1477 0036 3D040000 		.4byte	.LASF2
 1478 003a 02       		.uleb128 0x2
 1479 003b 02       		.byte	0x2
 1480 003c 07       		.byte	0x7
 1481 003d 25020000 		.4byte	.LASF3
 1482 0041 02       		.uleb128 0x2
 1483 0042 04       		.byte	0x4
 1484 0043 05       		.byte	0x5
 1485 0044 09010000 		.4byte	.LASF4
 1486 0048 02       		.uleb128 0x2
 1487 0049 04       		.byte	0x4
 1488 004a 07       		.byte	0x7
 1489 004b C9010000 		.4byte	.LASF5
 1490 004f 02       		.uleb128 0x2
 1491 0050 08       		.byte	0x8
 1492 0051 05       		.byte	0x5
 1493 0052 B7000000 		.4byte	.LASF6
 1494 0056 02       		.uleb128 0x2
 1495 0057 08       		.byte	0x8
 1496 0058 07       		.byte	0x7
 1497 0059 6F000000 		.4byte	.LASF7
 1498 005d 03       		.uleb128 0x3
 1499 005e 04       		.byte	0x4
 1500 005f 05       		.byte	0x5
 1501 0060 696E7400 		.ascii	"int\000"
 1502 0064 02       		.uleb128 0x2
 1503 0065 04       		.byte	0x4
 1504 0066 07       		.byte	0x7
 1505 0067 8C010000 		.4byte	.LASF8
 1506 006b 04       		.uleb128 0x4
 1507 006c 20010000 		.4byte	.LASF9
 1508 0070 02       		.byte	0x2
 1509 0071 3801     		.2byte	0x138
 1510 0073 2C000000 		.4byte	0x2c
 1511 0077 04       		.uleb128 0x4
 1512 0078 6B010000 		.4byte	.LASF10
 1513 007c 02       		.byte	0x2
 1514 007d 3A01     		.2byte	0x13a
 1515 007f 48000000 		.4byte	0x48
 1516 0083 02       		.uleb128 0x2
 1517 0084 04       		.byte	0x4
 1518 0085 04       		.byte	0x4
 1519 0086 8E030000 		.4byte	.LASF11
 1520 008a 02       		.uleb128 0x2
 1521 008b 08       		.byte	0x8
 1522 008c 04       		.byte	0x4
 1523 008d 3A010000 		.4byte	.LASF12
 1524 0091 02       		.uleb128 0x2
 1525 0092 01       		.byte	0x1
 1526 0093 08       		.byte	0x8
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 53


 1527 0094 A7040000 		.4byte	.LASF13
 1528 0098 04       		.uleb128 0x4
 1529 0099 A0020000 		.4byte	.LASF14
 1530 009d 02       		.byte	0x2
 1531 009e E401     		.2byte	0x1e4
 1532 00a0 A4000000 		.4byte	0xa4
 1533 00a4 05       		.uleb128 0x5
 1534 00a5 77000000 		.4byte	0x77
 1535 00a9 02       		.uleb128 0x2
 1536 00aa 04       		.byte	0x4
 1537 00ab 07       		.byte	0x7
 1538 00ac A6020000 		.4byte	.LASF15
 1539 00b0 06       		.uleb128 0x6
 1540 00b1 20040000 		.4byte	.LASF16
 1541 00b5 01       		.byte	0x1
 1542 00b6 0001     		.2byte	0x100
 1543 00b8 00000000 		.4byte	.LFB3
 1544 00bc 1C000000 		.4byte	.LFE3-.LFB3
 1545 00c0 01       		.uleb128 0x1
 1546 00c1 9C       		.byte	0x9c
 1547 00c2 E9000000 		.4byte	0xe9
 1548 00c6 07       		.uleb128 0x7
 1549 00c7 F3040000 		.4byte	.LASF18
 1550 00cb 01       		.byte	0x1
 1551 00cc 0201     		.2byte	0x102
 1552 00ce 6B000000 		.4byte	0x6b
 1553 00d2 00000000 		.4byte	.LLST0
 1554 00d6 08       		.uleb128 0x8
 1555 00d7 06000000 		.4byte	.LVL0
 1556 00db EA080000 		.4byte	0x8ea
 1557 00df 08       		.uleb128 0x8
 1558 00e0 14000000 		.4byte	.LVL1
 1559 00e4 F5080000 		.4byte	0x8f5
 1560 00e8 00       		.byte	0
 1561 00e9 06       		.uleb128 0x6
 1562 00ea E7000000 		.4byte	.LASF17
 1563 00ee 01       		.byte	0x1
 1564 00ef 2501     		.2byte	0x125
 1565 00f1 00000000 		.4byte	.LFB4
 1566 00f5 28000000 		.4byte	.LFE4-.LFB4
 1567 00f9 01       		.uleb128 0x1
 1568 00fa 9C       		.byte	0x9c
 1569 00fb 32010000 		.4byte	0x132
 1570 00ff 09       		.uleb128 0x9
 1571 0100 AC040000 		.4byte	.LASF20
 1572 0104 01       		.byte	0x1
 1573 0105 2501     		.2byte	0x125
 1574 0107 77000000 		.4byte	0x77
 1575 010b 13000000 		.4byte	.LLST1
 1576 010f 07       		.uleb128 0x7
 1577 0110 F3040000 		.4byte	.LASF18
 1578 0114 01       		.byte	0x1
 1579 0115 2701     		.2byte	0x127
 1580 0117 6B000000 		.4byte	0x6b
 1581 011b 3F000000 		.4byte	.LLST2
 1582 011f 08       		.uleb128 0x8
 1583 0120 08000000 		.4byte	.LVL3
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 54


 1584 0124 EA080000 		.4byte	0x8ea
 1585 0128 08       		.uleb128 0x8
 1586 0129 1C000000 		.4byte	.LVL5
 1587 012d F5080000 		.4byte	0x8f5
 1588 0131 00       		.byte	0
 1589 0132 06       		.uleb128 0x6
 1590 0133 3C000000 		.4byte	.LASF19
 1591 0137 01       		.byte	0x1
 1592 0138 4601     		.2byte	0x146
 1593 013a 00000000 		.4byte	.LFB5
 1594 013e 28000000 		.4byte	.LFE5-.LFB5
 1595 0142 01       		.uleb128 0x1
 1596 0143 9C       		.byte	0x9c
 1597 0144 7B010000 		.4byte	0x17b
 1598 0148 09       		.uleb128 0x9
 1599 0149 B0000000 		.4byte	.LASF21
 1600 014d 01       		.byte	0x1
 1601 014e 4601     		.2byte	0x146
 1602 0150 77000000 		.4byte	0x77
 1603 0154 52000000 		.4byte	.LLST3
 1604 0158 07       		.uleb128 0x7
 1605 0159 F3040000 		.4byte	.LASF18
 1606 015d 01       		.byte	0x1
 1607 015e 4801     		.2byte	0x148
 1608 0160 6B000000 		.4byte	0x6b
 1609 0164 7E000000 		.4byte	.LLST4
 1610 0168 08       		.uleb128 0x8
 1611 0169 08000000 		.4byte	.LVL7
 1612 016d EA080000 		.4byte	0x8ea
 1613 0171 08       		.uleb128 0x8
 1614 0172 1C000000 		.4byte	.LVL9
 1615 0176 F5080000 		.4byte	0x8f5
 1616 017a 00       		.byte	0
 1617 017b 06       		.uleb128 0x6
 1618 017c 38020000 		.4byte	.LASF22
 1619 0180 01       		.byte	0x1
 1620 0181 6B01     		.2byte	0x16b
 1621 0183 00000000 		.4byte	.LFB6
 1622 0187 28000000 		.4byte	.LFE6-.LFB6
 1623 018b 01       		.uleb128 0x1
 1624 018c 9C       		.byte	0x9c
 1625 018d C4010000 		.4byte	0x1c4
 1626 0191 09       		.uleb128 0x9
 1627 0192 94030000 		.4byte	.LASF23
 1628 0196 01       		.byte	0x1
 1629 0197 6B01     		.2byte	0x16b
 1630 0199 77000000 		.4byte	0x77
 1631 019d 91000000 		.4byte	.LLST5
 1632 01a1 07       		.uleb128 0x7
 1633 01a2 F3040000 		.4byte	.LASF18
 1634 01a6 01       		.byte	0x1
 1635 01a7 6D01     		.2byte	0x16d
 1636 01a9 6B000000 		.4byte	0x6b
 1637 01ad BD000000 		.4byte	.LLST6
 1638 01b1 08       		.uleb128 0x8
 1639 01b2 08000000 		.4byte	.LVL11
 1640 01b6 EA080000 		.4byte	0x8ea
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 55


 1641 01ba 08       		.uleb128 0x8
 1642 01bb 1C000000 		.4byte	.LVL13
 1643 01bf F5080000 		.4byte	0x8f5
 1644 01c3 00       		.byte	0
 1645 01c4 06       		.uleb128 0x6
 1646 01c5 AF010000 		.4byte	.LASF24
 1647 01c9 01       		.byte	0x1
 1648 01ca 8B01     		.2byte	0x18b
 1649 01cc 00000000 		.4byte	.LFB7
 1650 01d0 2C000000 		.4byte	.LFE7-.LFB7
 1651 01d4 01       		.uleb128 0x1
 1652 01d5 9C       		.byte	0x9c
 1653 01d6 0D020000 		.4byte	0x20d
 1654 01da 09       		.uleb128 0x9
 1655 01db 4C020000 		.4byte	.LASF25
 1656 01df 01       		.byte	0x1
 1657 01e0 8B01     		.2byte	0x18b
 1658 01e2 77000000 		.4byte	0x77
 1659 01e6 D0000000 		.4byte	.LLST7
 1660 01ea 07       		.uleb128 0x7
 1661 01eb F3040000 		.4byte	.LASF18
 1662 01ef 01       		.byte	0x1
 1663 01f0 8D01     		.2byte	0x18d
 1664 01f2 6B000000 		.4byte	0x6b
 1665 01f6 FC000000 		.4byte	.LLST8
 1666 01fa 08       		.uleb128 0x8
 1667 01fb 08000000 		.4byte	.LVL15
 1668 01ff EA080000 		.4byte	0x8ea
 1669 0203 08       		.uleb128 0x8
 1670 0204 22000000 		.4byte	.LVL17
 1671 0208 F5080000 		.4byte	0x8f5
 1672 020c 00       		.byte	0
 1673 020d 06       		.uleb128 0x6
 1674 020e 6A030000 		.4byte	.LASF26
 1675 0212 01       		.byte	0x1
 1676 0213 C101     		.2byte	0x1c1
 1677 0215 00000000 		.4byte	.LFB8
 1678 0219 10000000 		.4byte	.LFE8-.LFB8
 1679 021d 01       		.uleb128 0x1
 1680 021e 9C       		.byte	0x9c
 1681 021f 34020000 		.4byte	0x234
 1682 0223 09       		.uleb128 0x9
 1683 0224 DB010000 		.4byte	.LASF27
 1684 0228 01       		.byte	0x1
 1685 0229 C101     		.2byte	0x1c1
 1686 022b 77000000 		.4byte	0x77
 1687 022f 0F010000 		.4byte	.LLST9
 1688 0233 00       		.byte	0
 1689 0234 06       		.uleb128 0x6
 1690 0235 99010000 		.4byte	.LASF28
 1691 0239 01       		.byte	0x1
 1692 023a E501     		.2byte	0x1e5
 1693 023c 00000000 		.4byte	.LFB9
 1694 0240 28000000 		.4byte	.LFE9-.LFB9
 1695 0244 01       		.uleb128 0x1
 1696 0245 9C       		.byte	0x9c
 1697 0246 7D020000 		.4byte	0x27d
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 56


 1698 024a 09       		.uleb128 0x9
 1699 024b AF020000 		.4byte	.LASF29
 1700 024f 01       		.byte	0x1
 1701 0250 E501     		.2byte	0x1e5
 1702 0252 77000000 		.4byte	0x77
 1703 0256 30010000 		.4byte	.LLST10
 1704 025a 07       		.uleb128 0x7
 1705 025b F3040000 		.4byte	.LASF18
 1706 025f 01       		.byte	0x1
 1707 0260 E701     		.2byte	0x1e7
 1708 0262 6B000000 		.4byte	0x6b
 1709 0266 5C010000 		.4byte	.LLST11
 1710 026a 08       		.uleb128 0x8
 1711 026b 08000000 		.4byte	.LVL21
 1712 026f EA080000 		.4byte	0x8ea
 1713 0273 08       		.uleb128 0x8
 1714 0274 22000000 		.4byte	.LVL23
 1715 0278 F5080000 		.4byte	0x8f5
 1716 027c 00       		.byte	0
 1717 027d 06       		.uleb128 0x6
 1718 027e BD040000 		.4byte	.LASF30
 1719 0282 01       		.byte	0x1
 1720 0283 0702     		.2byte	0x207
 1721 0285 00000000 		.4byte	.LFB10
 1722 0289 28000000 		.4byte	.LFE10-.LFB10
 1723 028d 01       		.uleb128 0x1
 1724 028e 9C       		.byte	0x9c
 1725 028f C6020000 		.4byte	0x2c6
 1726 0293 09       		.uleb128 0x9
 1727 0294 2C040000 		.4byte	.LASF31
 1728 0298 01       		.byte	0x1
 1729 0299 0702     		.2byte	0x207
 1730 029b 77000000 		.4byte	0x77
 1731 029f 6F010000 		.4byte	.LLST12
 1732 02a3 07       		.uleb128 0x7
 1733 02a4 F3040000 		.4byte	.LASF18
 1734 02a8 01       		.byte	0x1
 1735 02a9 0902     		.2byte	0x209
 1736 02ab 6B000000 		.4byte	0x6b
 1737 02af 9B010000 		.4byte	.LLST13
 1738 02b3 08       		.uleb128 0x8
 1739 02b4 08000000 		.4byte	.LVL25
 1740 02b8 EA080000 		.4byte	0x8ea
 1741 02bc 08       		.uleb128 0x8
 1742 02bd 22000000 		.4byte	.LVL27
 1743 02c1 F5080000 		.4byte	0x8f5
 1744 02c5 00       		.byte	0
 1745 02c6 06       		.uleb128 0x6
 1746 02c7 D3030000 		.4byte	.LASF32
 1747 02cb 01       		.byte	0x1
 1748 02cc 2802     		.2byte	0x228
 1749 02ce 00000000 		.4byte	.LFB11
 1750 02d2 2C000000 		.4byte	.LFE11-.LFB11
 1751 02d6 01       		.uleb128 0x1
 1752 02d7 9C       		.byte	0x9c
 1753 02d8 0F030000 		.4byte	0x30f
 1754 02dc 09       		.uleb128 0x9
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 57


 1755 02dd 83010000 		.4byte	.LASF33
 1756 02e1 01       		.byte	0x1
 1757 02e2 2802     		.2byte	0x228
 1758 02e4 77000000 		.4byte	0x77
 1759 02e8 AE010000 		.4byte	.LLST14
 1760 02ec 07       		.uleb128 0x7
 1761 02ed F3040000 		.4byte	.LASF18
 1762 02f1 01       		.byte	0x1
 1763 02f2 2A02     		.2byte	0x22a
 1764 02f4 6B000000 		.4byte	0x6b
 1765 02f8 DA010000 		.4byte	.LLST15
 1766 02fc 08       		.uleb128 0x8
 1767 02fd 08000000 		.4byte	.LVL29
 1768 0301 EA080000 		.4byte	0x8ea
 1769 0305 08       		.uleb128 0x8
 1770 0306 20000000 		.4byte	.LVL31
 1771 030a F5080000 		.4byte	0x8f5
 1772 030e 00       		.byte	0
 1773 030f 06       		.uleb128 0x6
 1774 0310 26010000 		.4byte	.LASF34
 1775 0314 01       		.byte	0x1
 1776 0315 4902     		.2byte	0x249
 1777 0317 00000000 		.4byte	.LFB12
 1778 031b 28000000 		.4byte	.LFE12-.LFB12
 1779 031f 01       		.uleb128 0x1
 1780 0320 9C       		.byte	0x9c
 1781 0321 58030000 		.4byte	0x358
 1782 0325 09       		.uleb128 0x9
 1783 0326 7E010000 		.4byte	.LASF35
 1784 032a 01       		.byte	0x1
 1785 032b 4902     		.2byte	0x249
 1786 032d 77000000 		.4byte	0x77
 1787 0331 ED010000 		.4byte	.LLST16
 1788 0335 07       		.uleb128 0x7
 1789 0336 F3040000 		.4byte	.LASF18
 1790 033a 01       		.byte	0x1
 1791 033b 4B02     		.2byte	0x24b
 1792 033d 6B000000 		.4byte	0x6b
 1793 0341 19020000 		.4byte	.LLST17
 1794 0345 08       		.uleb128 0x8
 1795 0346 08000000 		.4byte	.LVL33
 1796 034a EA080000 		.4byte	0x8ea
 1797 034e 08       		.uleb128 0x8
 1798 034f 1C000000 		.4byte	.LVL35
 1799 0353 F5080000 		.4byte	0x8f5
 1800 0357 00       		.byte	0
 1801 0358 06       		.uleb128 0x6
 1802 0359 86000000 		.4byte	.LASF36
 1803 035d 01       		.byte	0x1
 1804 035e 6702     		.2byte	0x267
 1805 0360 00000000 		.4byte	.LFB13
 1806 0364 10000000 		.4byte	.LFE13-.LFB13
 1807 0368 01       		.uleb128 0x1
 1808 0369 9C       		.byte	0x9c
 1809 036a 7F030000 		.4byte	0x37f
 1810 036e 09       		.uleb128 0x9
 1811 036f 20000000 		.4byte	.LASF37
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 58


 1812 0373 01       		.byte	0x1
 1813 0374 6702     		.2byte	0x267
 1814 0376 77000000 		.4byte	0x77
 1815 037a 2C020000 		.4byte	.LLST18
 1816 037e 00       		.byte	0
 1817 037f 0A       		.uleb128 0xa
 1818 0380 85050000 		.4byte	.LASF42
 1819 0384 01       		.byte	0x1
 1820 0385 7B02     		.2byte	0x27b
 1821 0387 77000000 		.4byte	0x77
 1822 038b 00000000 		.4byte	.LFB14
 1823 038f 10000000 		.4byte	.LFE14-.LFB14
 1824 0393 01       		.uleb128 0x1
 1825 0394 9C       		.byte	0x9c
 1826 0395 06       		.uleb128 0x6
 1827 0396 98050000 		.4byte	.LASF38
 1828 039a 01       		.byte	0x1
 1829 039b 9802     		.2byte	0x298
 1830 039d 00000000 		.4byte	.LFB15
 1831 03a1 28000000 		.4byte	.LFE15-.LFB15
 1832 03a5 01       		.uleb128 0x1
 1833 03a6 9C       		.byte	0x9c
 1834 03a7 DE030000 		.4byte	0x3de
 1835 03ab 09       		.uleb128 0x9
 1836 03ac B1040000 		.4byte	.LASF39
 1837 03b0 01       		.byte	0x1
 1838 03b1 9802     		.2byte	0x298
 1839 03b3 77000000 		.4byte	0x77
 1840 03b7 4D020000 		.4byte	.LLST19
 1841 03bb 07       		.uleb128 0x7
 1842 03bc F3040000 		.4byte	.LASF18
 1843 03c0 01       		.byte	0x1
 1844 03c1 9A02     		.2byte	0x29a
 1845 03c3 6B000000 		.4byte	0x6b
 1846 03c7 79020000 		.4byte	.LLST20
 1847 03cb 08       		.uleb128 0x8
 1848 03cc 08000000 		.4byte	.LVL39
 1849 03d0 EA080000 		.4byte	0x8ea
 1850 03d4 08       		.uleb128 0x8
 1851 03d5 1C000000 		.4byte	.LVL41
 1852 03d9 F5080000 		.4byte	0x8f5
 1853 03dd 00       		.byte	0
 1854 03de 06       		.uleb128 0x6
 1855 03df C0030000 		.4byte	.LASF40
 1856 03e3 01       		.byte	0x1
 1857 03e4 B502     		.2byte	0x2b5
 1858 03e6 00000000 		.4byte	.LFB16
 1859 03ea 10000000 		.4byte	.LFE16-.LFB16
 1860 03ee 01       		.uleb128 0x1
 1861 03ef 9C       		.byte	0x9c
 1862 03f0 05040000 		.4byte	0x405
 1863 03f4 09       		.uleb128 0x9
 1864 03f5 68000000 		.4byte	.LASF41
 1865 03f9 01       		.byte	0x1
 1866 03fa B502     		.2byte	0x2b5
 1867 03fc 77000000 		.4byte	0x77
 1868 0400 8C020000 		.4byte	.LLST21
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 59


 1869 0404 00       		.byte	0
 1870 0405 0A       		.uleb128 0xa
 1871 0406 7C030000 		.4byte	.LASF43
 1872 040a 01       		.byte	0x1
 1873 040b C902     		.2byte	0x2c9
 1874 040d 77000000 		.4byte	0x77
 1875 0411 00000000 		.4byte	.LFB17
 1876 0415 10000000 		.4byte	.LFE17-.LFB17
 1877 0419 01       		.uleb128 0x1
 1878 041a 9C       		.byte	0x9c
 1879 041b 06       		.uleb128 0x6
 1880 041c 41010000 		.4byte	.LASF44
 1881 0420 01       		.byte	0x1
 1882 0421 E302     		.2byte	0x2e3
 1883 0423 00000000 		.4byte	.LFB18
 1884 0427 24000000 		.4byte	.LFE18-.LFB18
 1885 042b 01       		.uleb128 0x1
 1886 042c 9C       		.byte	0x9c
 1887 042d 64040000 		.4byte	0x464
 1888 0431 09       		.uleb128 0x9
 1889 0432 4F050000 		.4byte	.LASF45
 1890 0436 01       		.byte	0x1
 1891 0437 E302     		.2byte	0x2e3
 1892 0439 77000000 		.4byte	0x77
 1893 043d AD020000 		.4byte	.LLST22
 1894 0441 07       		.uleb128 0x7
 1895 0442 F3040000 		.4byte	.LASF18
 1896 0446 01       		.byte	0x1
 1897 0447 E502     		.2byte	0x2e5
 1898 0449 6B000000 		.4byte	0x6b
 1899 044d D9020000 		.4byte	.LLST23
 1900 0451 08       		.uleb128 0x8
 1901 0452 08000000 		.4byte	.LVL45
 1902 0456 EA080000 		.4byte	0x8ea
 1903 045a 08       		.uleb128 0x8
 1904 045b 1E000000 		.4byte	.LVL47
 1905 045f F5080000 		.4byte	0x8f5
 1906 0463 00       		.byte	0
 1907 0464 06       		.uleb128 0x6
 1908 0465 6A040000 		.4byte	.LASF46
 1909 0469 01       		.byte	0x1
 1910 046a FE02     		.2byte	0x2fe
 1911 046c 00000000 		.4byte	.LFB19
 1912 0470 10000000 		.4byte	.LFE19-.LFB19
 1913 0474 01       		.uleb128 0x1
 1914 0475 9C       		.byte	0x9c
 1915 0476 8B040000 		.4byte	0x48b
 1916 047a 09       		.uleb128 0x9
 1917 047b AE050000 		.4byte	.LASF47
 1918 047f 01       		.byte	0x1
 1919 0480 FE02     		.2byte	0x2fe
 1920 0482 77000000 		.4byte	0x77
 1921 0486 EC020000 		.4byte	.LLST24
 1922 048a 00       		.byte	0
 1923 048b 0A       		.uleb128 0xa
 1924 048c 3A050000 		.4byte	.LASF48
 1925 0490 01       		.byte	0x1
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 60


 1926 0491 1203     		.2byte	0x312
 1927 0493 77000000 		.4byte	0x77
 1928 0497 00000000 		.4byte	.LFB20
 1929 049b 10000000 		.4byte	.LFE20-.LFB20
 1930 049f 01       		.uleb128 0x1
 1931 04a0 9C       		.byte	0x9c
 1932 04a1 06       		.uleb128 0x6
 1933 04a2 55040000 		.4byte	.LASF49
 1934 04a6 01       		.byte	0x1
 1935 04a7 2C03     		.2byte	0x32c
 1936 04a9 00000000 		.4byte	.LFB21
 1937 04ad 28000000 		.4byte	.LFE21-.LFB21
 1938 04b1 01       		.uleb128 0x1
 1939 04b2 9C       		.byte	0x9c
 1940 04b3 EA040000 		.4byte	0x4ea
 1941 04b7 09       		.uleb128 0x9
 1942 04b8 4F050000 		.4byte	.LASF45
 1943 04bc 01       		.byte	0x1
 1944 04bd 2C03     		.2byte	0x32c
 1945 04bf 77000000 		.4byte	0x77
 1946 04c3 0D030000 		.4byte	.LLST25
 1947 04c7 07       		.uleb128 0x7
 1948 04c8 F3040000 		.4byte	.LASF18
 1949 04cc 01       		.byte	0x1
 1950 04cd 2E03     		.2byte	0x32e
 1951 04cf 6B000000 		.4byte	0x6b
 1952 04d3 39030000 		.4byte	.LLST26
 1953 04d7 08       		.uleb128 0x8
 1954 04d8 08000000 		.4byte	.LVL51
 1955 04dc EA080000 		.4byte	0x8ea
 1956 04e0 08       		.uleb128 0x8
 1957 04e1 22000000 		.4byte	.LVL53
 1958 04e5 F5080000 		.4byte	0x8f5
 1959 04e9 00       		.byte	0
 1960 04ea 06       		.uleb128 0x6
 1961 04eb 71050000 		.4byte	.LASF50
 1962 04ef 01       		.byte	0x1
 1963 04f0 5103     		.2byte	0x351
 1964 04f2 00000000 		.4byte	.LFB22
 1965 04f6 10000000 		.4byte	.LFE22-.LFB22
 1966 04fa 01       		.uleb128 0x1
 1967 04fb 9C       		.byte	0x9c
 1968 04fc 11050000 		.4byte	0x511
 1969 0500 09       		.uleb128 0x9
 1970 0501 D4020000 		.4byte	.LASF51
 1971 0505 01       		.byte	0x1
 1972 0506 5103     		.2byte	0x351
 1973 0508 77000000 		.4byte	0x77
 1974 050c 4C030000 		.4byte	.LLST27
 1975 0510 00       		.byte	0
 1976 0511 0A       		.uleb128 0xa
 1977 0512 E0040000 		.4byte	.LASF52
 1978 0516 01       		.byte	0x1
 1979 0517 8403     		.2byte	0x384
 1980 0519 77000000 		.4byte	0x77
 1981 051d 00000000 		.4byte	.LFB23
 1982 0521 10000000 		.4byte	.LFE23-.LFB23
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 61


 1983 0525 01       		.uleb128 0x1
 1984 0526 9C       		.byte	0x9c
 1985 0527 06       		.uleb128 0x6
 1986 0528 5A050000 		.4byte	.LASF53
 1987 052c 01       		.byte	0x1
 1988 052d BA03     		.2byte	0x3ba
 1989 052f 00000000 		.4byte	.LFB24
 1990 0533 10000000 		.4byte	.LFE24-.LFB24
 1991 0537 01       		.uleb128 0x1
 1992 0538 9C       		.byte	0x9c
 1993 0539 4E050000 		.4byte	0x54e
 1994 053d 09       		.uleb128 0x9
 1995 053e D5040000 		.4byte	.LASF54
 1996 0542 01       		.byte	0x1
 1997 0543 BA03     		.2byte	0x3ba
 1998 0545 77000000 		.4byte	0x77
 1999 0549 6D030000 		.4byte	.LLST28
 2000 054d 00       		.byte	0
 2001 054e 0A       		.uleb128 0xa
 2002 054f BE020000 		.4byte	.LASF55
 2003 0553 01       		.byte	0x1
 2004 0554 E803     		.2byte	0x3e8
 2005 0556 77000000 		.4byte	0x77
 2006 055a 00000000 		.4byte	.LFB25
 2007 055e 10000000 		.4byte	.LFE25-.LFB25
 2008 0562 01       		.uleb128 0x1
 2009 0563 9C       		.byte	0x9c
 2010 0564 0A       		.uleb128 0xa
 2011 0565 94040000 		.4byte	.LASF56
 2012 0569 01       		.byte	0x1
 2013 056a 1604     		.2byte	0x416
 2014 056c 77000000 		.4byte	0x77
 2015 0570 00000000 		.4byte	.LFB26
 2016 0574 10000000 		.4byte	.LFE26-.LFB26
 2017 0578 01       		.uleb128 0x1
 2018 0579 9C       		.byte	0x9c
 2019 057a 0A       		.uleb128 0xa
 2020 057b D1000000 		.4byte	.LASF57
 2021 057f 01       		.byte	0x1
 2022 0580 2B04     		.2byte	0x42b
 2023 0582 77000000 		.4byte	0x77
 2024 0586 00000000 		.4byte	.LFB27
 2025 058a 10000000 		.4byte	.LFE27-.LFB27
 2026 058e 01       		.uleb128 0x1
 2027 058f 9C       		.byte	0x9c
 2028 0590 06       		.uleb128 0x6
 2029 0591 9A000000 		.4byte	.LASF58
 2030 0595 01       		.byte	0x1
 2031 0596 4604     		.2byte	0x446
 2032 0598 00000000 		.4byte	.LFB28
 2033 059c 24000000 		.4byte	.LFE28-.LFB28
 2034 05a0 01       		.uleb128 0x1
 2035 05a1 9C       		.byte	0x9c
 2036 05a2 D9050000 		.4byte	0x5d9
 2037 05a6 09       		.uleb128 0x9
 2038 05a7 72010000 		.4byte	.LASF59
 2039 05ab 01       		.byte	0x1
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 62


 2040 05ac 4604     		.2byte	0x446
 2041 05ae 77000000 		.4byte	0x77
 2042 05b2 8E030000 		.4byte	.LLST29
 2043 05b6 07       		.uleb128 0x7
 2044 05b7 F3040000 		.4byte	.LASF18
 2045 05bb 01       		.byte	0x1
 2046 05bc 4804     		.2byte	0x448
 2047 05be 6B000000 		.4byte	0x6b
 2048 05c2 BA030000 		.4byte	.LLST30
 2049 05c6 08       		.uleb128 0x8
 2050 05c7 08000000 		.4byte	.LVL59
 2051 05cb EA080000 		.4byte	0x8ea
 2052 05cf 08       		.uleb128 0x8
 2053 05d0 1C000000 		.4byte	.LVL61
 2054 05d4 F5080000 		.4byte	0x8f5
 2055 05d8 00       		.byte	0
 2056 05d9 06       		.uleb128 0x6
 2057 05da 04050000 		.4byte	.LASF60
 2058 05de 01       		.byte	0x1
 2059 05df 6704     		.2byte	0x467
 2060 05e1 00000000 		.4byte	.LFB29
 2061 05e5 24000000 		.4byte	.LFE29-.LFB29
 2062 05e9 01       		.uleb128 0x1
 2063 05ea 9C       		.byte	0x9c
 2064 05eb 22060000 		.4byte	0x622
 2065 05ef 09       		.uleb128 0x9
 2066 05f0 72010000 		.4byte	.LASF59
 2067 05f4 01       		.byte	0x1
 2068 05f5 6704     		.2byte	0x467
 2069 05f7 77000000 		.4byte	0x77
 2070 05fb CD030000 		.4byte	.LLST31
 2071 05ff 07       		.uleb128 0x7
 2072 0600 F3040000 		.4byte	.LASF18
 2073 0604 01       		.byte	0x1
 2074 0605 6904     		.2byte	0x469
 2075 0607 6B000000 		.4byte	0x6b
 2076 060b F9030000 		.4byte	.LLST32
 2077 060f 08       		.uleb128 0x8
 2078 0610 08000000 		.4byte	.LVL63
 2079 0614 EA080000 		.4byte	0x8ea
 2080 0618 08       		.uleb128 0x8
 2081 0619 1E000000 		.4byte	.LVL65
 2082 061d F5080000 		.4byte	0x8f5
 2083 0621 00       		.byte	0
 2084 0622 06       		.uleb128 0x6
 2085 0623 57010000 		.4byte	.LASF61
 2086 0627 01       		.byte	0x1
 2087 0628 8804     		.2byte	0x488
 2088 062a 00000000 		.4byte	.LFB30
 2089 062e 28000000 		.4byte	.LFE30-.LFB30
 2090 0632 01       		.uleb128 0x1
 2091 0633 9C       		.byte	0x9c
 2092 0634 6B060000 		.4byte	0x66b
 2093 0638 09       		.uleb128 0x9
 2094 0639 72010000 		.4byte	.LASF59
 2095 063d 01       		.byte	0x1
 2096 063e 8804     		.2byte	0x488
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 63


 2097 0640 77000000 		.4byte	0x77
 2098 0644 0C040000 		.4byte	.LLST33
 2099 0648 07       		.uleb128 0x7
 2100 0649 F3040000 		.4byte	.LASF18
 2101 064d 01       		.byte	0x1
 2102 064e 8A04     		.2byte	0x48a
 2103 0650 6B000000 		.4byte	0x6b
 2104 0654 38040000 		.4byte	.LLST34
 2105 0658 08       		.uleb128 0x8
 2106 0659 08000000 		.4byte	.LVL67
 2107 065d EA080000 		.4byte	0x8ea
 2108 0661 08       		.uleb128 0x8
 2109 0662 1E000000 		.4byte	.LVL69
 2110 0666 F5080000 		.4byte	0x8f5
 2111 066a 00       		.byte	0
 2112 066b 06       		.uleb128 0x6
 2113 066c F6000000 		.4byte	.LASF62
 2114 0670 01       		.byte	0x1
 2115 0671 A804     		.2byte	0x4a8
 2116 0673 00000000 		.4byte	.LFB31
 2117 0677 24000000 		.4byte	.LFE31-.LFB31
 2118 067b 01       		.uleb128 0x1
 2119 067c 9C       		.byte	0x9c
 2120 067d B4060000 		.4byte	0x6b4
 2121 0681 09       		.uleb128 0x9
 2122 0682 72010000 		.4byte	.LASF59
 2123 0686 01       		.byte	0x1
 2124 0687 A804     		.2byte	0x4a8
 2125 0689 77000000 		.4byte	0x77
 2126 068d 4B040000 		.4byte	.LLST35
 2127 0691 07       		.uleb128 0x7
 2128 0692 F3040000 		.4byte	.LASF18
 2129 0696 01       		.byte	0x1
 2130 0697 AA04     		.2byte	0x4aa
 2131 0699 6B000000 		.4byte	0x6b
 2132 069d 77040000 		.4byte	.LLST36
 2133 06a1 08       		.uleb128 0x8
 2134 06a2 08000000 		.4byte	.LVL71
 2135 06a6 EA080000 		.4byte	0x8ea
 2136 06aa 08       		.uleb128 0x8
 2137 06ab 1E000000 		.4byte	.LVL73
 2138 06af F5080000 		.4byte	0x8f5
 2139 06b3 00       		.byte	0
 2140 06b4 06       		.uleb128 0x6
 2141 06b5 19050000 		.4byte	.LASF63
 2142 06b9 01       		.byte	0x1
 2143 06ba C904     		.2byte	0x4c9
 2144 06bc 00000000 		.4byte	.LFB32
 2145 06c0 24000000 		.4byte	.LFE32-.LFB32
 2146 06c4 01       		.uleb128 0x1
 2147 06c5 9C       		.byte	0x9c
 2148 06c6 FD060000 		.4byte	0x6fd
 2149 06ca 09       		.uleb128 0x9
 2150 06cb 72010000 		.4byte	.LASF59
 2151 06cf 01       		.byte	0x1
 2152 06d0 C904     		.2byte	0x4c9
 2153 06d2 77000000 		.4byte	0x77
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 64


 2154 06d6 8A040000 		.4byte	.LLST37
 2155 06da 07       		.uleb128 0x7
 2156 06db F3040000 		.4byte	.LASF18
 2157 06df 01       		.byte	0x1
 2158 06e0 CB04     		.2byte	0x4cb
 2159 06e2 6B000000 		.4byte	0x6b
 2160 06e6 B6040000 		.4byte	.LLST38
 2161 06ea 08       		.uleb128 0x8
 2162 06eb 08000000 		.4byte	.LVL75
 2163 06ef EA080000 		.4byte	0x8ea
 2164 06f3 08       		.uleb128 0x8
 2165 06f4 1E000000 		.4byte	.LVL77
 2166 06f8 F5080000 		.4byte	0x8f5
 2167 06fc 00       		.byte	0
 2168 06fd 06       		.uleb128 0x6
 2169 06fe 74020000 		.4byte	.LASF64
 2170 0702 01       		.byte	0x1
 2171 0703 F104     		.2byte	0x4f1
 2172 0705 00000000 		.4byte	.LFB33
 2173 0709 1C000000 		.4byte	.LFE33-.LFB33
 2174 070d 01       		.uleb128 0x1
 2175 070e 9C       		.byte	0x9c
 2176 070f 56070000 		.4byte	0x756
 2177 0713 09       		.uleb128 0x9
 2178 0714 7E010000 		.4byte	.LASF35
 2179 0718 01       		.byte	0x1
 2180 0719 F104     		.2byte	0x4f1
 2181 071b 77000000 		.4byte	0x77
 2182 071f C9040000 		.4byte	.LLST39
 2183 0723 09       		.uleb128 0x9
 2184 0724 C1010000 		.4byte	.LASF65
 2185 0728 01       		.byte	0x1
 2186 0729 F104     		.2byte	0x4f1
 2187 072b 77000000 		.4byte	0x77
 2188 072f F5040000 		.4byte	.LLST40
 2189 0733 07       		.uleb128 0x7
 2190 0734 F3040000 		.4byte	.LASF18
 2191 0738 01       		.byte	0x1
 2192 0739 F304     		.2byte	0x4f3
 2193 073b 6B000000 		.4byte	0x6b
 2194 073f 21050000 		.4byte	.LLST41
 2195 0743 08       		.uleb128 0x8
 2196 0744 0A000000 		.4byte	.LVL79
 2197 0748 EA080000 		.4byte	0x8ea
 2198 074c 08       		.uleb128 0x8
 2199 074d 14000000 		.4byte	.LVL81
 2200 0751 F5080000 		.4byte	0x8f5
 2201 0755 00       		.byte	0
 2202 0756 0B       		.uleb128 0xb
 2203 0757 12010000 		.4byte	.LASF66
 2204 075b 01       		.byte	0x1
 2205 075c B1       		.byte	0xb1
 2206 075d 00000000 		.4byte	.LFB1
 2207 0761 24000000 		.4byte	.LFE1-.LFB1
 2208 0765 01       		.uleb128 0x1
 2209 0766 9C       		.byte	0x9c
 2210 0767 A1070000 		.4byte	0x7a1
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 65


 2211 076b 0C       		.uleb128 0xc
 2212 076c F3040000 		.4byte	.LASF18
 2213 0770 01       		.byte	0x1
 2214 0771 B3       		.byte	0xb3
 2215 0772 6B000000 		.4byte	0x6b
 2216 0776 34050000 		.4byte	.LLST42
 2217 077a 08       		.uleb128 0x8
 2218 077b 06000000 		.4byte	.LVL83
 2219 077f EA080000 		.4byte	0x8ea
 2220 0783 08       		.uleb128 0x8
 2221 0784 14000000 		.4byte	.LVL84
 2222 0788 F5080000 		.4byte	0x8f5
 2223 078c 0D       		.uleb128 0xd
 2224 078d 1C000000 		.4byte	.LVL85
 2225 0791 FD060000 		.4byte	0x6fd
 2226 0795 0E       		.uleb128 0xe
 2227 0796 01       		.uleb128 0x1
 2228 0797 51       		.byte	0x51
 2229 0798 01       		.uleb128 0x1
 2230 0799 48       		.byte	0x48
 2231 079a 0E       		.uleb128 0xe
 2232 079b 01       		.uleb128 0x1
 2233 079c 50       		.byte	0x50
 2234 079d 01       		.uleb128 0x1
 2235 079e 34       		.byte	0x34
 2236 079f 00       		.byte	0
 2237 07a0 00       		.byte	0
 2238 07a1 0A       		.uleb128 0xa
 2239 07a2 13020000 		.4byte	.LASF67
 2240 07a6 01       		.byte	0x1
 2241 07a7 0E05     		.2byte	0x50e
 2242 07a9 77000000 		.4byte	0x77
 2243 07ad 00000000 		.4byte	.LFB34
 2244 07b1 14000000 		.4byte	.LFE34-.LFB34
 2245 07b5 01       		.uleb128 0x1
 2246 07b6 9C       		.byte	0x9c
 2247 07b7 06       		.uleb128 0x6
 2248 07b8 E4010000 		.4byte	.LASF68
 2249 07bc 01       		.byte	0x1
 2250 07bd 2705     		.2byte	0x527
 2251 07bf 00000000 		.4byte	.LFB35
 2252 07c3 0C000000 		.4byte	.LFE35-.LFB35
 2253 07c7 01       		.uleb128 0x1
 2254 07c8 9C       		.byte	0x9c
 2255 07c9 DC070000 		.4byte	0x7dc
 2256 07cd 0F       		.uleb128 0xf
 2257 07ce 47040000 		.4byte	.LASF69
 2258 07d2 01       		.byte	0x1
 2259 07d3 2705     		.2byte	0x527
 2260 07d5 77000000 		.4byte	0x77
 2261 07d9 01       		.uleb128 0x1
 2262 07da 50       		.byte	0x50
 2263 07db 00       		.byte	0
 2264 07dc 0B       		.uleb128 0xb
 2265 07dd 5C000000 		.4byte	.LASF70
 2266 07e1 01       		.byte	0x1
 2267 07e2 26       		.byte	0x26
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 66


 2268 07e3 00000000 		.4byte	.LFB0
 2269 07e7 4C000000 		.4byte	.LFE0-.LFB0
 2270 07eb 01       		.uleb128 0x1
 2271 07ec 9C       		.byte	0x9c
 2272 07ed 3B080000 		.4byte	0x83b
 2273 07f1 10       		.uleb128 0x10
 2274 07f2 14000000 		.4byte	.LVL87
 2275 07f6 58030000 		.4byte	0x358
 2276 07fa 04080000 		.4byte	0x804
 2277 07fe 0E       		.uleb128 0xe
 2278 07ff 01       		.uleb128 0x1
 2279 0800 50       		.byte	0x50
 2280 0801 01       		.uleb128 0x1
 2281 0802 30       		.byte	0x30
 2282 0803 00       		.byte	0
 2283 0804 10       		.uleb128 0x10
 2284 0805 2C000000 		.4byte	.LVL88
 2285 0809 B7070000 		.4byte	0x7b7
 2286 080d 17080000 		.4byte	0x817
 2287 0811 0E       		.uleb128 0xe
 2288 0812 01       		.uleb128 0x1
 2289 0813 50       		.byte	0x50
 2290 0814 01       		.uleb128 0x1
 2291 0815 30       		.byte	0x30
 2292 0816 00       		.byte	0
 2293 0817 10       		.uleb128 0x10
 2294 0818 38000000 		.4byte	.LVL89
 2295 081c DE030000 		.4byte	0x3de
 2296 0820 2B080000 		.4byte	0x82b
 2297 0824 0E       		.uleb128 0xe
 2298 0825 01       		.uleb128 0x1
 2299 0826 50       		.byte	0x50
 2300 0827 02       		.uleb128 0x2
 2301 0828 08       		.byte	0x8
 2302 0829 FF       		.byte	0xff
 2303 082a 00       		.byte	0
 2304 082b 0D       		.uleb128 0xd
 2305 082c 3E000000 		.4byte	.LVL90
 2306 0830 EA040000 		.4byte	0x4ea
 2307 0834 0E       		.uleb128 0xe
 2308 0835 01       		.uleb128 0x1
 2309 0836 50       		.byte	0x50
 2310 0837 01       		.uleb128 0x1
 2311 0838 30       		.byte	0x30
 2312 0839 00       		.byte	0
 2313 083a 00       		.byte	0
 2314 083b 0B       		.uleb128 0xb
 2315 083c 2D050000 		.4byte	.LASF71
 2316 0840 01       		.byte	0x1
 2317 0841 E6       		.byte	0xe6
 2318 0842 00000000 		.4byte	.LFB2
 2319 0846 20000000 		.4byte	.LFE2-.LFB2
 2320 084a 01       		.uleb128 0x1
 2321 084b 9C       		.byte	0x9c
 2322 084c 63080000 		.4byte	0x863
 2323 0850 08       		.uleb128 0x8
 2324 0851 0E000000 		.4byte	.LVL91
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 67


 2325 0855 DC070000 		.4byte	0x7dc
 2326 0859 08       		.uleb128 0x8
 2327 085a 18000000 		.4byte	.LVL92
 2328 085e 56070000 		.4byte	0x756
 2329 0862 00       		.byte	0
 2330 0863 0A       		.uleb128 0xa
 2331 0864 00000000 		.4byte	.LASF72
 2332 0868 01       		.byte	0x1
 2333 0869 3E05     		.2byte	0x53e
 2334 086b 77000000 		.4byte	0x77
 2335 086f 00000000 		.4byte	.LFB36
 2336 0873 0C000000 		.4byte	.LFE36-.LFB36
 2337 0877 01       		.uleb128 0x1
 2338 0878 9C       		.byte	0x9c
 2339 0879 0A       		.uleb128 0xa
 2340 087a 5A020000 		.4byte	.LASF73
 2341 087e 01       		.byte	0x1
 2342 087f 5505     		.2byte	0x555
 2343 0881 77000000 		.4byte	0x77
 2344 0885 00000000 		.4byte	.LFB37
 2345 0889 0C000000 		.4byte	.LFE37-.LFB37
 2346 088d 01       		.uleb128 0x1
 2347 088e 9C       		.byte	0x9c
 2348 088f 06       		.uleb128 0x6
 2349 0890 8A020000 		.4byte	.LASF74
 2350 0894 01       		.byte	0x1
 2351 0895 6C05     		.2byte	0x56c
 2352 0897 00000000 		.4byte	.LFB38
 2353 089b 0C000000 		.4byte	.LFE38-.LFB38
 2354 089f 01       		.uleb128 0x1
 2355 08a0 9C       		.byte	0x9c
 2356 08a1 B4080000 		.4byte	0x8b4
 2357 08a5 0F       		.uleb128 0xf
 2358 08a6 47040000 		.4byte	.LASF69
 2359 08aa 01       		.byte	0x1
 2360 08ab 6C05     		.2byte	0x56c
 2361 08ad 77000000 		.4byte	0x77
 2362 08b1 01       		.uleb128 0x1
 2363 08b2 50       		.byte	0x50
 2364 08b3 00       		.byte	0
 2365 08b4 06       		.uleb128 0x6
 2366 08b5 80040000 		.4byte	.LASF75
 2367 08b9 01       		.byte	0x1
 2368 08ba 8305     		.2byte	0x583
 2369 08bc 00000000 		.4byte	.LFB39
 2370 08c0 0C000000 		.4byte	.LFE39-.LFB39
 2371 08c4 01       		.uleb128 0x1
 2372 08c5 9C       		.byte	0x9c
 2373 08c6 D9080000 		.4byte	0x8d9
 2374 08ca 0F       		.uleb128 0xf
 2375 08cb 47040000 		.4byte	.LASF69
 2376 08cf 01       		.byte	0x1
 2377 08d0 8305     		.2byte	0x583
 2378 08d2 77000000 		.4byte	0x77
 2379 08d6 01       		.uleb128 0x1
 2380 08d7 50       		.byte	0x50
 2381 08d8 00       		.byte	0
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 68


 2382 08d9 11       		.uleb128 0x11
 2383 08da 4D000000 		.4byte	.LASF79
 2384 08de 01       		.byte	0x1
 2385 08df 15       		.byte	0x15
 2386 08e0 6B000000 		.4byte	0x6b
 2387 08e4 05       		.uleb128 0x5
 2388 08e5 03       		.byte	0x3
 2389 08e6 00000000 		.4byte	RedPWM_initVar
 2390 08ea 12       		.uleb128 0x12
 2391 08eb FC010000 		.4byte	.LASF80
 2392 08ef 03       		.byte	0x3
 2393 08f0 61       		.byte	0x61
 2394 08f1 6B000000 		.4byte	0x6b
 2395 08f5 13       		.uleb128 0x13
 2396 08f6 26000000 		.4byte	.LASF81
 2397 08fa 03       		.byte	0x3
 2398 08fb 62       		.byte	0x62
 2399 08fc 14       		.uleb128 0x14
 2400 08fd 6B000000 		.4byte	0x6b
 2401 0901 00       		.byte	0
 2402 0902 00       		.byte	0
 2403              		.section	.debug_abbrev,"",%progbits
 2404              	.Ldebug_abbrev0:
 2405 0000 01       		.uleb128 0x1
 2406 0001 11       		.uleb128 0x11
 2407 0002 01       		.byte	0x1
 2408 0003 25       		.uleb128 0x25
 2409 0004 0E       		.uleb128 0xe
 2410 0005 13       		.uleb128 0x13
 2411 0006 0B       		.uleb128 0xb
 2412 0007 03       		.uleb128 0x3
 2413 0008 0E       		.uleb128 0xe
 2414 0009 1B       		.uleb128 0x1b
 2415 000a 0E       		.uleb128 0xe
 2416 000b 55       		.uleb128 0x55
 2417 000c 17       		.uleb128 0x17
 2418 000d 11       		.uleb128 0x11
 2419 000e 01       		.uleb128 0x1
 2420 000f 10       		.uleb128 0x10
 2421 0010 17       		.uleb128 0x17
 2422 0011 00       		.byte	0
 2423 0012 00       		.byte	0
 2424 0013 02       		.uleb128 0x2
 2425 0014 24       		.uleb128 0x24
 2426 0015 00       		.byte	0
 2427 0016 0B       		.uleb128 0xb
 2428 0017 0B       		.uleb128 0xb
 2429 0018 3E       		.uleb128 0x3e
 2430 0019 0B       		.uleb128 0xb
 2431 001a 03       		.uleb128 0x3
 2432 001b 0E       		.uleb128 0xe
 2433 001c 00       		.byte	0
 2434 001d 00       		.byte	0
 2435 001e 03       		.uleb128 0x3
 2436 001f 24       		.uleb128 0x24
 2437 0020 00       		.byte	0
 2438 0021 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 69


 2439 0022 0B       		.uleb128 0xb
 2440 0023 3E       		.uleb128 0x3e
 2441 0024 0B       		.uleb128 0xb
 2442 0025 03       		.uleb128 0x3
 2443 0026 08       		.uleb128 0x8
 2444 0027 00       		.byte	0
 2445 0028 00       		.byte	0
 2446 0029 04       		.uleb128 0x4
 2447 002a 16       		.uleb128 0x16
 2448 002b 00       		.byte	0
 2449 002c 03       		.uleb128 0x3
 2450 002d 0E       		.uleb128 0xe
 2451 002e 3A       		.uleb128 0x3a
 2452 002f 0B       		.uleb128 0xb
 2453 0030 3B       		.uleb128 0x3b
 2454 0031 05       		.uleb128 0x5
 2455 0032 49       		.uleb128 0x49
 2456 0033 13       		.uleb128 0x13
 2457 0034 00       		.byte	0
 2458 0035 00       		.byte	0
 2459 0036 05       		.uleb128 0x5
 2460 0037 35       		.uleb128 0x35
 2461 0038 00       		.byte	0
 2462 0039 49       		.uleb128 0x49
 2463 003a 13       		.uleb128 0x13
 2464 003b 00       		.byte	0
 2465 003c 00       		.byte	0
 2466 003d 06       		.uleb128 0x6
 2467 003e 2E       		.uleb128 0x2e
 2468 003f 01       		.byte	0x1
 2469 0040 3F       		.uleb128 0x3f
 2470 0041 19       		.uleb128 0x19
 2471 0042 03       		.uleb128 0x3
 2472 0043 0E       		.uleb128 0xe
 2473 0044 3A       		.uleb128 0x3a
 2474 0045 0B       		.uleb128 0xb
 2475 0046 3B       		.uleb128 0x3b
 2476 0047 05       		.uleb128 0x5
 2477 0048 27       		.uleb128 0x27
 2478 0049 19       		.uleb128 0x19
 2479 004a 11       		.uleb128 0x11
 2480 004b 01       		.uleb128 0x1
 2481 004c 12       		.uleb128 0x12
 2482 004d 06       		.uleb128 0x6
 2483 004e 40       		.uleb128 0x40
 2484 004f 18       		.uleb128 0x18
 2485 0050 9742     		.uleb128 0x2117
 2486 0052 19       		.uleb128 0x19
 2487 0053 01       		.uleb128 0x1
 2488 0054 13       		.uleb128 0x13
 2489 0055 00       		.byte	0
 2490 0056 00       		.byte	0
 2491 0057 07       		.uleb128 0x7
 2492 0058 34       		.uleb128 0x34
 2493 0059 00       		.byte	0
 2494 005a 03       		.uleb128 0x3
 2495 005b 0E       		.uleb128 0xe
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 70


 2496 005c 3A       		.uleb128 0x3a
 2497 005d 0B       		.uleb128 0xb
 2498 005e 3B       		.uleb128 0x3b
 2499 005f 05       		.uleb128 0x5
 2500 0060 49       		.uleb128 0x49
 2501 0061 13       		.uleb128 0x13
 2502 0062 02       		.uleb128 0x2
 2503 0063 17       		.uleb128 0x17
 2504 0064 00       		.byte	0
 2505 0065 00       		.byte	0
 2506 0066 08       		.uleb128 0x8
 2507 0067 898201   		.uleb128 0x4109
 2508 006a 00       		.byte	0
 2509 006b 11       		.uleb128 0x11
 2510 006c 01       		.uleb128 0x1
 2511 006d 31       		.uleb128 0x31
 2512 006e 13       		.uleb128 0x13
 2513 006f 00       		.byte	0
 2514 0070 00       		.byte	0
 2515 0071 09       		.uleb128 0x9
 2516 0072 05       		.uleb128 0x5
 2517 0073 00       		.byte	0
 2518 0074 03       		.uleb128 0x3
 2519 0075 0E       		.uleb128 0xe
 2520 0076 3A       		.uleb128 0x3a
 2521 0077 0B       		.uleb128 0xb
 2522 0078 3B       		.uleb128 0x3b
 2523 0079 05       		.uleb128 0x5
 2524 007a 49       		.uleb128 0x49
 2525 007b 13       		.uleb128 0x13
 2526 007c 02       		.uleb128 0x2
 2527 007d 17       		.uleb128 0x17
 2528 007e 00       		.byte	0
 2529 007f 00       		.byte	0
 2530 0080 0A       		.uleb128 0xa
 2531 0081 2E       		.uleb128 0x2e
 2532 0082 00       		.byte	0
 2533 0083 3F       		.uleb128 0x3f
 2534 0084 19       		.uleb128 0x19
 2535 0085 03       		.uleb128 0x3
 2536 0086 0E       		.uleb128 0xe
 2537 0087 3A       		.uleb128 0x3a
 2538 0088 0B       		.uleb128 0xb
 2539 0089 3B       		.uleb128 0x3b
 2540 008a 05       		.uleb128 0x5
 2541 008b 27       		.uleb128 0x27
 2542 008c 19       		.uleb128 0x19
 2543 008d 49       		.uleb128 0x49
 2544 008e 13       		.uleb128 0x13
 2545 008f 11       		.uleb128 0x11
 2546 0090 01       		.uleb128 0x1
 2547 0091 12       		.uleb128 0x12
 2548 0092 06       		.uleb128 0x6
 2549 0093 40       		.uleb128 0x40
 2550 0094 18       		.uleb128 0x18
 2551 0095 9742     		.uleb128 0x2117
 2552 0097 19       		.uleb128 0x19
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 71


 2553 0098 00       		.byte	0
 2554 0099 00       		.byte	0
 2555 009a 0B       		.uleb128 0xb
 2556 009b 2E       		.uleb128 0x2e
 2557 009c 01       		.byte	0x1
 2558 009d 3F       		.uleb128 0x3f
 2559 009e 19       		.uleb128 0x19
 2560 009f 03       		.uleb128 0x3
 2561 00a0 0E       		.uleb128 0xe
 2562 00a1 3A       		.uleb128 0x3a
 2563 00a2 0B       		.uleb128 0xb
 2564 00a3 3B       		.uleb128 0x3b
 2565 00a4 0B       		.uleb128 0xb
 2566 00a5 27       		.uleb128 0x27
 2567 00a6 19       		.uleb128 0x19
 2568 00a7 11       		.uleb128 0x11
 2569 00a8 01       		.uleb128 0x1
 2570 00a9 12       		.uleb128 0x12
 2571 00aa 06       		.uleb128 0x6
 2572 00ab 40       		.uleb128 0x40
 2573 00ac 18       		.uleb128 0x18
 2574 00ad 9742     		.uleb128 0x2117
 2575 00af 19       		.uleb128 0x19
 2576 00b0 01       		.uleb128 0x1
 2577 00b1 13       		.uleb128 0x13
 2578 00b2 00       		.byte	0
 2579 00b3 00       		.byte	0
 2580 00b4 0C       		.uleb128 0xc
 2581 00b5 34       		.uleb128 0x34
 2582 00b6 00       		.byte	0
 2583 00b7 03       		.uleb128 0x3
 2584 00b8 0E       		.uleb128 0xe
 2585 00b9 3A       		.uleb128 0x3a
 2586 00ba 0B       		.uleb128 0xb
 2587 00bb 3B       		.uleb128 0x3b
 2588 00bc 0B       		.uleb128 0xb
 2589 00bd 49       		.uleb128 0x49
 2590 00be 13       		.uleb128 0x13
 2591 00bf 02       		.uleb128 0x2
 2592 00c0 17       		.uleb128 0x17
 2593 00c1 00       		.byte	0
 2594 00c2 00       		.byte	0
 2595 00c3 0D       		.uleb128 0xd
 2596 00c4 898201   		.uleb128 0x4109
 2597 00c7 01       		.byte	0x1
 2598 00c8 11       		.uleb128 0x11
 2599 00c9 01       		.uleb128 0x1
 2600 00ca 31       		.uleb128 0x31
 2601 00cb 13       		.uleb128 0x13
 2602 00cc 00       		.byte	0
 2603 00cd 00       		.byte	0
 2604 00ce 0E       		.uleb128 0xe
 2605 00cf 8A8201   		.uleb128 0x410a
 2606 00d2 00       		.byte	0
 2607 00d3 02       		.uleb128 0x2
 2608 00d4 18       		.uleb128 0x18
 2609 00d5 9142     		.uleb128 0x2111
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 72


 2610 00d7 18       		.uleb128 0x18
 2611 00d8 00       		.byte	0
 2612 00d9 00       		.byte	0
 2613 00da 0F       		.uleb128 0xf
 2614 00db 05       		.uleb128 0x5
 2615 00dc 00       		.byte	0
 2616 00dd 03       		.uleb128 0x3
 2617 00de 0E       		.uleb128 0xe
 2618 00df 3A       		.uleb128 0x3a
 2619 00e0 0B       		.uleb128 0xb
 2620 00e1 3B       		.uleb128 0x3b
 2621 00e2 05       		.uleb128 0x5
 2622 00e3 49       		.uleb128 0x49
 2623 00e4 13       		.uleb128 0x13
 2624 00e5 02       		.uleb128 0x2
 2625 00e6 18       		.uleb128 0x18
 2626 00e7 00       		.byte	0
 2627 00e8 00       		.byte	0
 2628 00e9 10       		.uleb128 0x10
 2629 00ea 898201   		.uleb128 0x4109
 2630 00ed 01       		.byte	0x1
 2631 00ee 11       		.uleb128 0x11
 2632 00ef 01       		.uleb128 0x1
 2633 00f0 31       		.uleb128 0x31
 2634 00f1 13       		.uleb128 0x13
 2635 00f2 01       		.uleb128 0x1
 2636 00f3 13       		.uleb128 0x13
 2637 00f4 00       		.byte	0
 2638 00f5 00       		.byte	0
 2639 00f6 11       		.uleb128 0x11
 2640 00f7 34       		.uleb128 0x34
 2641 00f8 00       		.byte	0
 2642 00f9 03       		.uleb128 0x3
 2643 00fa 0E       		.uleb128 0xe
 2644 00fb 3A       		.uleb128 0x3a
 2645 00fc 0B       		.uleb128 0xb
 2646 00fd 3B       		.uleb128 0x3b
 2647 00fe 0B       		.uleb128 0xb
 2648 00ff 49       		.uleb128 0x49
 2649 0100 13       		.uleb128 0x13
 2650 0101 3F       		.uleb128 0x3f
 2651 0102 19       		.uleb128 0x19
 2652 0103 02       		.uleb128 0x2
 2653 0104 18       		.uleb128 0x18
 2654 0105 00       		.byte	0
 2655 0106 00       		.byte	0
 2656 0107 12       		.uleb128 0x12
 2657 0108 2E       		.uleb128 0x2e
 2658 0109 00       		.byte	0
 2659 010a 3F       		.uleb128 0x3f
 2660 010b 19       		.uleb128 0x19
 2661 010c 03       		.uleb128 0x3
 2662 010d 0E       		.uleb128 0xe
 2663 010e 3A       		.uleb128 0x3a
 2664 010f 0B       		.uleb128 0xb
 2665 0110 3B       		.uleb128 0x3b
 2666 0111 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 73


 2667 0112 27       		.uleb128 0x27
 2668 0113 19       		.uleb128 0x19
 2669 0114 49       		.uleb128 0x49
 2670 0115 13       		.uleb128 0x13
 2671 0116 3C       		.uleb128 0x3c
 2672 0117 19       		.uleb128 0x19
 2673 0118 00       		.byte	0
 2674 0119 00       		.byte	0
 2675 011a 13       		.uleb128 0x13
 2676 011b 2E       		.uleb128 0x2e
 2677 011c 01       		.byte	0x1
 2678 011d 3F       		.uleb128 0x3f
 2679 011e 19       		.uleb128 0x19
 2680 011f 03       		.uleb128 0x3
 2681 0120 0E       		.uleb128 0xe
 2682 0121 3A       		.uleb128 0x3a
 2683 0122 0B       		.uleb128 0xb
 2684 0123 3B       		.uleb128 0x3b
 2685 0124 0B       		.uleb128 0xb
 2686 0125 27       		.uleb128 0x27
 2687 0126 19       		.uleb128 0x19
 2688 0127 3C       		.uleb128 0x3c
 2689 0128 19       		.uleb128 0x19
 2690 0129 00       		.byte	0
 2691 012a 00       		.byte	0
 2692 012b 14       		.uleb128 0x14
 2693 012c 05       		.uleb128 0x5
 2694 012d 00       		.byte	0
 2695 012e 49       		.uleb128 0x49
 2696 012f 13       		.uleb128 0x13
 2697 0130 00       		.byte	0
 2698 0131 00       		.byte	0
 2699 0132 00       		.byte	0
 2700              		.section	.debug_loc,"",%progbits
 2701              	.Ldebug_loc0:
 2702              	.LLST0:
 2703 0000 06000000 		.4byte	.LVL0
 2704 0004 13000000 		.4byte	.LVL1-1
 2705 0008 0100     		.2byte	0x1
 2706 000a 50       		.byte	0x50
 2707 000b 00000000 		.4byte	0
 2708 000f 00000000 		.4byte	0
 2709              	.LLST1:
 2710 0013 00000000 		.4byte	.LVL2
 2711 0017 07000000 		.4byte	.LVL3-1
 2712 001b 0100     		.2byte	0x1
 2713 001d 50       		.byte	0x50
 2714 001e 07000000 		.4byte	.LVL3-1
 2715 0022 16000000 		.4byte	.LVL4
 2716 0026 0100     		.2byte	0x1
 2717 0028 54       		.byte	0x54
 2718 0029 16000000 		.4byte	.LVL4
 2719 002d 28000000 		.4byte	.LFE4
 2720 0031 0400     		.2byte	0x4
 2721 0033 F3       		.byte	0xf3
 2722 0034 01       		.uleb128 0x1
 2723 0035 50       		.byte	0x50
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 74


 2724 0036 9F       		.byte	0x9f
 2725 0037 00000000 		.4byte	0
 2726 003b 00000000 		.4byte	0
 2727              	.LLST2:
 2728 003f 08000000 		.4byte	.LVL3
 2729 0043 1B000000 		.4byte	.LVL5-1
 2730 0047 0100     		.2byte	0x1
 2731 0049 50       		.byte	0x50
 2732 004a 00000000 		.4byte	0
 2733 004e 00000000 		.4byte	0
 2734              	.LLST3:
 2735 0052 00000000 		.4byte	.LVL6
 2736 0056 07000000 		.4byte	.LVL7-1
 2737 005a 0100     		.2byte	0x1
 2738 005c 50       		.byte	0x50
 2739 005d 07000000 		.4byte	.LVL7-1
 2740 0061 16000000 		.4byte	.LVL8
 2741 0065 0100     		.2byte	0x1
 2742 0067 54       		.byte	0x54
 2743 0068 16000000 		.4byte	.LVL8
 2744 006c 28000000 		.4byte	.LFE5
 2745 0070 0400     		.2byte	0x4
 2746 0072 F3       		.byte	0xf3
 2747 0073 01       		.uleb128 0x1
 2748 0074 50       		.byte	0x50
 2749 0075 9F       		.byte	0x9f
 2750 0076 00000000 		.4byte	0
 2751 007a 00000000 		.4byte	0
 2752              	.LLST4:
 2753 007e 08000000 		.4byte	.LVL7
 2754 0082 1B000000 		.4byte	.LVL9-1
 2755 0086 0100     		.2byte	0x1
 2756 0088 50       		.byte	0x50
 2757 0089 00000000 		.4byte	0
 2758 008d 00000000 		.4byte	0
 2759              	.LLST5:
 2760 0091 00000000 		.4byte	.LVL10
 2761 0095 07000000 		.4byte	.LVL11-1
 2762 0099 0100     		.2byte	0x1
 2763 009b 50       		.byte	0x50
 2764 009c 07000000 		.4byte	.LVL11-1
 2765 00a0 16000000 		.4byte	.LVL12
 2766 00a4 0100     		.2byte	0x1
 2767 00a6 54       		.byte	0x54
 2768 00a7 16000000 		.4byte	.LVL12
 2769 00ab 28000000 		.4byte	.LFE6
 2770 00af 0400     		.2byte	0x4
 2771 00b1 F3       		.byte	0xf3
 2772 00b2 01       		.uleb128 0x1
 2773 00b3 50       		.byte	0x50
 2774 00b4 9F       		.byte	0x9f
 2775 00b5 00000000 		.4byte	0
 2776 00b9 00000000 		.4byte	0
 2777              	.LLST6:
 2778 00bd 08000000 		.4byte	.LVL11
 2779 00c1 1B000000 		.4byte	.LVL13-1
 2780 00c5 0100     		.2byte	0x1
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 75


 2781 00c7 50       		.byte	0x50
 2782 00c8 00000000 		.4byte	0
 2783 00cc 00000000 		.4byte	0
 2784              	.LLST7:
 2785 00d0 00000000 		.4byte	.LVL14
 2786 00d4 07000000 		.4byte	.LVL15-1
 2787 00d8 0100     		.2byte	0x1
 2788 00da 50       		.byte	0x50
 2789 00db 07000000 		.4byte	.LVL15-1
 2790 00df 18000000 		.4byte	.LVL16
 2791 00e3 0100     		.2byte	0x1
 2792 00e5 54       		.byte	0x54
 2793 00e6 18000000 		.4byte	.LVL16
 2794 00ea 2C000000 		.4byte	.LFE7
 2795 00ee 0400     		.2byte	0x4
 2796 00f0 F3       		.byte	0xf3
 2797 00f1 01       		.uleb128 0x1
 2798 00f2 50       		.byte	0x50
 2799 00f3 9F       		.byte	0x9f
 2800 00f4 00000000 		.4byte	0
 2801 00f8 00000000 		.4byte	0
 2802              	.LLST8:
 2803 00fc 08000000 		.4byte	.LVL15
 2804 0100 21000000 		.4byte	.LVL17-1
 2805 0104 0100     		.2byte	0x1
 2806 0106 50       		.byte	0x50
 2807 0107 00000000 		.4byte	0
 2808 010b 00000000 		.4byte	0
 2809              	.LLST9:
 2810 010f 00000000 		.4byte	.LVL18
 2811 0113 04000000 		.4byte	.LVL19
 2812 0117 0100     		.2byte	0x1
 2813 0119 50       		.byte	0x50
 2814 011a 04000000 		.4byte	.LVL19
 2815 011e 10000000 		.4byte	.LFE8
 2816 0122 0400     		.2byte	0x4
 2817 0124 F3       		.byte	0xf3
 2818 0125 01       		.uleb128 0x1
 2819 0126 50       		.byte	0x50
 2820 0127 9F       		.byte	0x9f
 2821 0128 00000000 		.4byte	0
 2822 012c 00000000 		.4byte	0
 2823              	.LLST10:
 2824 0130 00000000 		.4byte	.LVL20
 2825 0134 07000000 		.4byte	.LVL21-1
 2826 0138 0100     		.2byte	0x1
 2827 013a 50       		.byte	0x50
 2828 013b 07000000 		.4byte	.LVL21-1
 2829 013f 18000000 		.4byte	.LVL22
 2830 0143 0100     		.2byte	0x1
 2831 0145 54       		.byte	0x54
 2832 0146 18000000 		.4byte	.LVL22
 2833 014a 28000000 		.4byte	.LFE9
 2834 014e 0400     		.2byte	0x4
 2835 0150 F3       		.byte	0xf3
 2836 0151 01       		.uleb128 0x1
 2837 0152 50       		.byte	0x50
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 76


 2838 0153 9F       		.byte	0x9f
 2839 0154 00000000 		.4byte	0
 2840 0158 00000000 		.4byte	0
 2841              	.LLST11:
 2842 015c 08000000 		.4byte	.LVL21
 2843 0160 21000000 		.4byte	.LVL23-1
 2844 0164 0100     		.2byte	0x1
 2845 0166 50       		.byte	0x50
 2846 0167 00000000 		.4byte	0
 2847 016b 00000000 		.4byte	0
 2848              	.LLST12:
 2849 016f 00000000 		.4byte	.LVL24
 2850 0173 07000000 		.4byte	.LVL25-1
 2851 0177 0100     		.2byte	0x1
 2852 0179 50       		.byte	0x50
 2853 017a 07000000 		.4byte	.LVL25-1
 2854 017e 18000000 		.4byte	.LVL26
 2855 0182 0100     		.2byte	0x1
 2856 0184 54       		.byte	0x54
 2857 0185 18000000 		.4byte	.LVL26
 2858 0189 28000000 		.4byte	.LFE10
 2859 018d 0400     		.2byte	0x4
 2860 018f F3       		.byte	0xf3
 2861 0190 01       		.uleb128 0x1
 2862 0191 50       		.byte	0x50
 2863 0192 9F       		.byte	0x9f
 2864 0193 00000000 		.4byte	0
 2865 0197 00000000 		.4byte	0
 2866              	.LLST13:
 2867 019b 08000000 		.4byte	.LVL25
 2868 019f 21000000 		.4byte	.LVL27-1
 2869 01a3 0100     		.2byte	0x1
 2870 01a5 50       		.byte	0x50
 2871 01a6 00000000 		.4byte	0
 2872 01aa 00000000 		.4byte	0
 2873              	.LLST14:
 2874 01ae 00000000 		.4byte	.LVL28
 2875 01b2 07000000 		.4byte	.LVL29-1
 2876 01b6 0100     		.2byte	0x1
 2877 01b8 50       		.byte	0x50
 2878 01b9 07000000 		.4byte	.LVL29-1
 2879 01bd 16000000 		.4byte	.LVL30
 2880 01c1 0100     		.2byte	0x1
 2881 01c3 54       		.byte	0x54
 2882 01c4 16000000 		.4byte	.LVL30
 2883 01c8 2C000000 		.4byte	.LFE11
 2884 01cc 0400     		.2byte	0x4
 2885 01ce F3       		.byte	0xf3
 2886 01cf 01       		.uleb128 0x1
 2887 01d0 50       		.byte	0x50
 2888 01d1 9F       		.byte	0x9f
 2889 01d2 00000000 		.4byte	0
 2890 01d6 00000000 		.4byte	0
 2891              	.LLST15:
 2892 01da 08000000 		.4byte	.LVL29
 2893 01de 1F000000 		.4byte	.LVL31-1
 2894 01e2 0100     		.2byte	0x1
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 77


 2895 01e4 50       		.byte	0x50
 2896 01e5 00000000 		.4byte	0
 2897 01e9 00000000 		.4byte	0
 2898              	.LLST16:
 2899 01ed 00000000 		.4byte	.LVL32
 2900 01f1 07000000 		.4byte	.LVL33-1
 2901 01f5 0100     		.2byte	0x1
 2902 01f7 50       		.byte	0x50
 2903 01f8 07000000 		.4byte	.LVL33-1
 2904 01fc 16000000 		.4byte	.LVL34
 2905 0200 0100     		.2byte	0x1
 2906 0202 54       		.byte	0x54
 2907 0203 16000000 		.4byte	.LVL34
 2908 0207 28000000 		.4byte	.LFE12
 2909 020b 0400     		.2byte	0x4
 2910 020d F3       		.byte	0xf3
 2911 020e 01       		.uleb128 0x1
 2912 020f 50       		.byte	0x50
 2913 0210 9F       		.byte	0x9f
 2914 0211 00000000 		.4byte	0
 2915 0215 00000000 		.4byte	0
 2916              	.LLST17:
 2917 0219 08000000 		.4byte	.LVL33
 2918 021d 1B000000 		.4byte	.LVL35-1
 2919 0221 0100     		.2byte	0x1
 2920 0223 50       		.byte	0x50
 2921 0224 00000000 		.4byte	0
 2922 0228 00000000 		.4byte	0
 2923              	.LLST18:
 2924 022c 00000000 		.4byte	.LVL36
 2925 0230 02000000 		.4byte	.LVL37
 2926 0234 0100     		.2byte	0x1
 2927 0236 50       		.byte	0x50
 2928 0237 02000000 		.4byte	.LVL37
 2929 023b 10000000 		.4byte	.LFE13
 2930 023f 0400     		.2byte	0x4
 2931 0241 F3       		.byte	0xf3
 2932 0242 01       		.uleb128 0x1
 2933 0243 50       		.byte	0x50
 2934 0244 9F       		.byte	0x9f
 2935 0245 00000000 		.4byte	0
 2936 0249 00000000 		.4byte	0
 2937              	.LLST19:
 2938 024d 00000000 		.4byte	.LVL38
 2939 0251 07000000 		.4byte	.LVL39-1
 2940 0255 0100     		.2byte	0x1
 2941 0257 50       		.byte	0x50
 2942 0258 07000000 		.4byte	.LVL39-1
 2943 025c 16000000 		.4byte	.LVL40
 2944 0260 0100     		.2byte	0x1
 2945 0262 54       		.byte	0x54
 2946 0263 16000000 		.4byte	.LVL40
 2947 0267 28000000 		.4byte	.LFE15
 2948 026b 0400     		.2byte	0x4
 2949 026d F3       		.byte	0xf3
 2950 026e 01       		.uleb128 0x1
 2951 026f 50       		.byte	0x50
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 78


 2952 0270 9F       		.byte	0x9f
 2953 0271 00000000 		.4byte	0
 2954 0275 00000000 		.4byte	0
 2955              	.LLST20:
 2956 0279 08000000 		.4byte	.LVL39
 2957 027d 1B000000 		.4byte	.LVL41-1
 2958 0281 0100     		.2byte	0x1
 2959 0283 50       		.byte	0x50
 2960 0284 00000000 		.4byte	0
 2961 0288 00000000 		.4byte	0
 2962              	.LLST21:
 2963 028c 00000000 		.4byte	.LVL42
 2964 0290 02000000 		.4byte	.LVL43
 2965 0294 0100     		.2byte	0x1
 2966 0296 50       		.byte	0x50
 2967 0297 02000000 		.4byte	.LVL43
 2968 029b 10000000 		.4byte	.LFE16
 2969 029f 0400     		.2byte	0x4
 2970 02a1 F3       		.byte	0xf3
 2971 02a2 01       		.uleb128 0x1
 2972 02a3 50       		.byte	0x50
 2973 02a4 9F       		.byte	0x9f
 2974 02a5 00000000 		.4byte	0
 2975 02a9 00000000 		.4byte	0
 2976              	.LLST22:
 2977 02ad 00000000 		.4byte	.LVL44
 2978 02b1 07000000 		.4byte	.LVL45-1
 2979 02b5 0100     		.2byte	0x1
 2980 02b7 50       		.byte	0x50
 2981 02b8 07000000 		.4byte	.LVL45-1
 2982 02bc 16000000 		.4byte	.LVL46
 2983 02c0 0100     		.2byte	0x1
 2984 02c2 54       		.byte	0x54
 2985 02c3 16000000 		.4byte	.LVL46
 2986 02c7 24000000 		.4byte	.LFE18
 2987 02cb 0400     		.2byte	0x4
 2988 02cd F3       		.byte	0xf3
 2989 02ce 01       		.uleb128 0x1
 2990 02cf 50       		.byte	0x50
 2991 02d0 9F       		.byte	0x9f
 2992 02d1 00000000 		.4byte	0
 2993 02d5 00000000 		.4byte	0
 2994              	.LLST23:
 2995 02d9 08000000 		.4byte	.LVL45
 2996 02dd 1D000000 		.4byte	.LVL47-1
 2997 02e1 0100     		.2byte	0x1
 2998 02e3 50       		.byte	0x50
 2999 02e4 00000000 		.4byte	0
 3000 02e8 00000000 		.4byte	0
 3001              	.LLST24:
 3002 02ec 00000000 		.4byte	.LVL48
 3003 02f0 02000000 		.4byte	.LVL49
 3004 02f4 0100     		.2byte	0x1
 3005 02f6 50       		.byte	0x50
 3006 02f7 02000000 		.4byte	.LVL49
 3007 02fb 10000000 		.4byte	.LFE19
 3008 02ff 0400     		.2byte	0x4
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 79


 3009 0301 F3       		.byte	0xf3
 3010 0302 01       		.uleb128 0x1
 3011 0303 50       		.byte	0x50
 3012 0304 9F       		.byte	0x9f
 3013 0305 00000000 		.4byte	0
 3014 0309 00000000 		.4byte	0
 3015              	.LLST25:
 3016 030d 00000000 		.4byte	.LVL50
 3017 0311 07000000 		.4byte	.LVL51-1
 3018 0315 0100     		.2byte	0x1
 3019 0317 50       		.byte	0x50
 3020 0318 07000000 		.4byte	.LVL51-1
 3021 031c 18000000 		.4byte	.LVL52
 3022 0320 0100     		.2byte	0x1
 3023 0322 54       		.byte	0x54
 3024 0323 18000000 		.4byte	.LVL52
 3025 0327 28000000 		.4byte	.LFE21
 3026 032b 0400     		.2byte	0x4
 3027 032d F3       		.byte	0xf3
 3028 032e 01       		.uleb128 0x1
 3029 032f 50       		.byte	0x50
 3030 0330 9F       		.byte	0x9f
 3031 0331 00000000 		.4byte	0
 3032 0335 00000000 		.4byte	0
 3033              	.LLST26:
 3034 0339 08000000 		.4byte	.LVL51
 3035 033d 21000000 		.4byte	.LVL53-1
 3036 0341 0100     		.2byte	0x1
 3037 0343 50       		.byte	0x50
 3038 0344 00000000 		.4byte	0
 3039 0348 00000000 		.4byte	0
 3040              	.LLST27:
 3041 034c 00000000 		.4byte	.LVL54
 3042 0350 02000000 		.4byte	.LVL55
 3043 0354 0100     		.2byte	0x1
 3044 0356 50       		.byte	0x50
 3045 0357 02000000 		.4byte	.LVL55
 3046 035b 10000000 		.4byte	.LFE22
 3047 035f 0400     		.2byte	0x4
 3048 0361 F3       		.byte	0xf3
 3049 0362 01       		.uleb128 0x1
 3050 0363 50       		.byte	0x50
 3051 0364 9F       		.byte	0x9f
 3052 0365 00000000 		.4byte	0
 3053 0369 00000000 		.4byte	0
 3054              	.LLST28:
 3055 036d 00000000 		.4byte	.LVL56
 3056 0371 02000000 		.4byte	.LVL57
 3057 0375 0100     		.2byte	0x1
 3058 0377 50       		.byte	0x50
 3059 0378 02000000 		.4byte	.LVL57
 3060 037c 10000000 		.4byte	.LFE24
 3061 0380 0400     		.2byte	0x4
 3062 0382 F3       		.byte	0xf3
 3063 0383 01       		.uleb128 0x1
 3064 0384 50       		.byte	0x50
 3065 0385 9F       		.byte	0x9f
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 80


 3066 0386 00000000 		.4byte	0
 3067 038a 00000000 		.4byte	0
 3068              	.LLST29:
 3069 038e 00000000 		.4byte	.LVL58
 3070 0392 07000000 		.4byte	.LVL59-1
 3071 0396 0100     		.2byte	0x1
 3072 0398 50       		.byte	0x50
 3073 0399 07000000 		.4byte	.LVL59-1
 3074 039d 16000000 		.4byte	.LVL60
 3075 03a1 0100     		.2byte	0x1
 3076 03a3 54       		.byte	0x54
 3077 03a4 16000000 		.4byte	.LVL60
 3078 03a8 24000000 		.4byte	.LFE28
 3079 03ac 0400     		.2byte	0x4
 3080 03ae F3       		.byte	0xf3
 3081 03af 01       		.uleb128 0x1
 3082 03b0 50       		.byte	0x50
 3083 03b1 9F       		.byte	0x9f
 3084 03b2 00000000 		.4byte	0
 3085 03b6 00000000 		.4byte	0
 3086              	.LLST30:
 3087 03ba 08000000 		.4byte	.LVL59
 3088 03be 1B000000 		.4byte	.LVL61-1
 3089 03c2 0100     		.2byte	0x1
 3090 03c4 50       		.byte	0x50
 3091 03c5 00000000 		.4byte	0
 3092 03c9 00000000 		.4byte	0
 3093              	.LLST31:
 3094 03cd 00000000 		.4byte	.LVL62
 3095 03d1 07000000 		.4byte	.LVL63-1
 3096 03d5 0100     		.2byte	0x1
 3097 03d7 50       		.byte	0x50
 3098 03d8 07000000 		.4byte	.LVL63-1
 3099 03dc 16000000 		.4byte	.LVL64
 3100 03e0 0100     		.2byte	0x1
 3101 03e2 54       		.byte	0x54
 3102 03e3 16000000 		.4byte	.LVL64
 3103 03e7 24000000 		.4byte	.LFE29
 3104 03eb 0400     		.2byte	0x4
 3105 03ed F3       		.byte	0xf3
 3106 03ee 01       		.uleb128 0x1
 3107 03ef 50       		.byte	0x50
 3108 03f0 9F       		.byte	0x9f
 3109 03f1 00000000 		.4byte	0
 3110 03f5 00000000 		.4byte	0
 3111              	.LLST32:
 3112 03f9 08000000 		.4byte	.LVL63
 3113 03fd 1D000000 		.4byte	.LVL65-1
 3114 0401 0100     		.2byte	0x1
 3115 0403 50       		.byte	0x50
 3116 0404 00000000 		.4byte	0
 3117 0408 00000000 		.4byte	0
 3118              	.LLST33:
 3119 040c 00000000 		.4byte	.LVL66
 3120 0410 07000000 		.4byte	.LVL67-1
 3121 0414 0100     		.2byte	0x1
 3122 0416 50       		.byte	0x50
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 81


 3123 0417 07000000 		.4byte	.LVL67-1
 3124 041b 16000000 		.4byte	.LVL68
 3125 041f 0100     		.2byte	0x1
 3126 0421 54       		.byte	0x54
 3127 0422 16000000 		.4byte	.LVL68
 3128 0426 28000000 		.4byte	.LFE30
 3129 042a 0400     		.2byte	0x4
 3130 042c F3       		.byte	0xf3
 3131 042d 01       		.uleb128 0x1
 3132 042e 50       		.byte	0x50
 3133 042f 9F       		.byte	0x9f
 3134 0430 00000000 		.4byte	0
 3135 0434 00000000 		.4byte	0
 3136              	.LLST34:
 3137 0438 08000000 		.4byte	.LVL67
 3138 043c 1D000000 		.4byte	.LVL69-1
 3139 0440 0100     		.2byte	0x1
 3140 0442 50       		.byte	0x50
 3141 0443 00000000 		.4byte	0
 3142 0447 00000000 		.4byte	0
 3143              	.LLST35:
 3144 044b 00000000 		.4byte	.LVL70
 3145 044f 07000000 		.4byte	.LVL71-1
 3146 0453 0100     		.2byte	0x1
 3147 0455 50       		.byte	0x50
 3148 0456 07000000 		.4byte	.LVL71-1
 3149 045a 16000000 		.4byte	.LVL72
 3150 045e 0100     		.2byte	0x1
 3151 0460 54       		.byte	0x54
 3152 0461 16000000 		.4byte	.LVL72
 3153 0465 24000000 		.4byte	.LFE31
 3154 0469 0400     		.2byte	0x4
 3155 046b F3       		.byte	0xf3
 3156 046c 01       		.uleb128 0x1
 3157 046d 50       		.byte	0x50
 3158 046e 9F       		.byte	0x9f
 3159 046f 00000000 		.4byte	0
 3160 0473 00000000 		.4byte	0
 3161              	.LLST36:
 3162 0477 08000000 		.4byte	.LVL71
 3163 047b 1D000000 		.4byte	.LVL73-1
 3164 047f 0100     		.2byte	0x1
 3165 0481 50       		.byte	0x50
 3166 0482 00000000 		.4byte	0
 3167 0486 00000000 		.4byte	0
 3168              	.LLST37:
 3169 048a 00000000 		.4byte	.LVL74
 3170 048e 07000000 		.4byte	.LVL75-1
 3171 0492 0100     		.2byte	0x1
 3172 0494 50       		.byte	0x50
 3173 0495 07000000 		.4byte	.LVL75-1
 3174 0499 16000000 		.4byte	.LVL76
 3175 049d 0100     		.2byte	0x1
 3176 049f 54       		.byte	0x54
 3177 04a0 16000000 		.4byte	.LVL76
 3178 04a4 24000000 		.4byte	.LFE32
 3179 04a8 0400     		.2byte	0x4
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 82


 3180 04aa F3       		.byte	0xf3
 3181 04ab 01       		.uleb128 0x1
 3182 04ac 50       		.byte	0x50
 3183 04ad 9F       		.byte	0x9f
 3184 04ae 00000000 		.4byte	0
 3185 04b2 00000000 		.4byte	0
 3186              	.LLST38:
 3187 04b6 08000000 		.4byte	.LVL75
 3188 04ba 1D000000 		.4byte	.LVL77-1
 3189 04be 0100     		.2byte	0x1
 3190 04c0 50       		.byte	0x50
 3191 04c1 00000000 		.4byte	0
 3192 04c5 00000000 		.4byte	0
 3193              	.LLST39:
 3194 04c9 00000000 		.4byte	.LVL78
 3195 04cd 09000000 		.4byte	.LVL79-1
 3196 04d1 0100     		.2byte	0x1
 3197 04d3 50       		.byte	0x50
 3198 04d4 09000000 		.4byte	.LVL79-1
 3199 04d8 0C000000 		.4byte	.LVL80
 3200 04dc 0100     		.2byte	0x1
 3201 04de 54       		.byte	0x54
 3202 04df 0C000000 		.4byte	.LVL80
 3203 04e3 1C000000 		.4byte	.LFE33
 3204 04e7 0400     		.2byte	0x4
 3205 04e9 F3       		.byte	0xf3
 3206 04ea 01       		.uleb128 0x1
 3207 04eb 50       		.byte	0x50
 3208 04ec 9F       		.byte	0x9f
 3209 04ed 00000000 		.4byte	0
 3210 04f1 00000000 		.4byte	0
 3211              	.LLST40:
 3212 04f5 00000000 		.4byte	.LVL78
 3213 04f9 09000000 		.4byte	.LVL79-1
 3214 04fd 0100     		.2byte	0x1
 3215 04ff 51       		.byte	0x51
 3216 0500 09000000 		.4byte	.LVL79-1
 3217 0504 14000000 		.4byte	.LVL82
 3218 0508 0100     		.2byte	0x1
 3219 050a 55       		.byte	0x55
 3220 050b 14000000 		.4byte	.LVL82
 3221 050f 1C000000 		.4byte	.LFE33
 3222 0513 0400     		.2byte	0x4
 3223 0515 F3       		.byte	0xf3
 3224 0516 01       		.uleb128 0x1
 3225 0517 51       		.byte	0x51
 3226 0518 9F       		.byte	0x9f
 3227 0519 00000000 		.4byte	0
 3228 051d 00000000 		.4byte	0
 3229              	.LLST41:
 3230 0521 0A000000 		.4byte	.LVL79
 3231 0525 13000000 		.4byte	.LVL81-1
 3232 0529 0100     		.2byte	0x1
 3233 052b 50       		.byte	0x50
 3234 052c 00000000 		.4byte	0
 3235 0530 00000000 		.4byte	0
 3236              	.LLST42:
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 83


 3237 0534 06000000 		.4byte	.LVL83
 3238 0538 13000000 		.4byte	.LVL84-1
 3239 053c 0100     		.2byte	0x1
 3240 053e 50       		.byte	0x50
 3241 053f 00000000 		.4byte	0
 3242 0543 00000000 		.4byte	0
 3243              		.section	.debug_aranges,"",%progbits
 3244 0000 54010000 		.4byte	0x154
 3245 0004 0200     		.2byte	0x2
 3246 0006 00000000 		.4byte	.Ldebug_info0
 3247 000a 04       		.byte	0x4
 3248 000b 00       		.byte	0
 3249 000c 0000     		.2byte	0
 3250 000e 0000     		.2byte	0
 3251 0010 00000000 		.4byte	.LFB3
 3252 0014 1C000000 		.4byte	.LFE3-.LFB3
 3253 0018 00000000 		.4byte	.LFB4
 3254 001c 28000000 		.4byte	.LFE4-.LFB4
 3255 0020 00000000 		.4byte	.LFB5
 3256 0024 28000000 		.4byte	.LFE5-.LFB5
 3257 0028 00000000 		.4byte	.LFB6
 3258 002c 28000000 		.4byte	.LFE6-.LFB6
 3259 0030 00000000 		.4byte	.LFB7
 3260 0034 2C000000 		.4byte	.LFE7-.LFB7
 3261 0038 00000000 		.4byte	.LFB8
 3262 003c 10000000 		.4byte	.LFE8-.LFB8
 3263 0040 00000000 		.4byte	.LFB9
 3264 0044 28000000 		.4byte	.LFE9-.LFB9
 3265 0048 00000000 		.4byte	.LFB10
 3266 004c 28000000 		.4byte	.LFE10-.LFB10
 3267 0050 00000000 		.4byte	.LFB11
 3268 0054 2C000000 		.4byte	.LFE11-.LFB11
 3269 0058 00000000 		.4byte	.LFB12
 3270 005c 28000000 		.4byte	.LFE12-.LFB12
 3271 0060 00000000 		.4byte	.LFB13
 3272 0064 10000000 		.4byte	.LFE13-.LFB13
 3273 0068 00000000 		.4byte	.LFB14
 3274 006c 10000000 		.4byte	.LFE14-.LFB14
 3275 0070 00000000 		.4byte	.LFB15
 3276 0074 28000000 		.4byte	.LFE15-.LFB15
 3277 0078 00000000 		.4byte	.LFB16
 3278 007c 10000000 		.4byte	.LFE16-.LFB16
 3279 0080 00000000 		.4byte	.LFB17
 3280 0084 10000000 		.4byte	.LFE17-.LFB17
 3281 0088 00000000 		.4byte	.LFB18
 3282 008c 24000000 		.4byte	.LFE18-.LFB18
 3283 0090 00000000 		.4byte	.LFB19
 3284 0094 10000000 		.4byte	.LFE19-.LFB19
 3285 0098 00000000 		.4byte	.LFB20
 3286 009c 10000000 		.4byte	.LFE20-.LFB20
 3287 00a0 00000000 		.4byte	.LFB21
 3288 00a4 28000000 		.4byte	.LFE21-.LFB21
 3289 00a8 00000000 		.4byte	.LFB22
 3290 00ac 10000000 		.4byte	.LFE22-.LFB22
 3291 00b0 00000000 		.4byte	.LFB23
 3292 00b4 10000000 		.4byte	.LFE23-.LFB23
 3293 00b8 00000000 		.4byte	.LFB24
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 84


 3294 00bc 10000000 		.4byte	.LFE24-.LFB24
 3295 00c0 00000000 		.4byte	.LFB25
 3296 00c4 10000000 		.4byte	.LFE25-.LFB25
 3297 00c8 00000000 		.4byte	.LFB26
 3298 00cc 10000000 		.4byte	.LFE26-.LFB26
 3299 00d0 00000000 		.4byte	.LFB27
 3300 00d4 10000000 		.4byte	.LFE27-.LFB27
 3301 00d8 00000000 		.4byte	.LFB28
 3302 00dc 24000000 		.4byte	.LFE28-.LFB28
 3303 00e0 00000000 		.4byte	.LFB29
 3304 00e4 24000000 		.4byte	.LFE29-.LFB29
 3305 00e8 00000000 		.4byte	.LFB30
 3306 00ec 28000000 		.4byte	.LFE30-.LFB30
 3307 00f0 00000000 		.4byte	.LFB31
 3308 00f4 24000000 		.4byte	.LFE31-.LFB31
 3309 00f8 00000000 		.4byte	.LFB32
 3310 00fc 24000000 		.4byte	.LFE32-.LFB32
 3311 0100 00000000 		.4byte	.LFB33
 3312 0104 1C000000 		.4byte	.LFE33-.LFB33
 3313 0108 00000000 		.4byte	.LFB1
 3314 010c 24000000 		.4byte	.LFE1-.LFB1
 3315 0110 00000000 		.4byte	.LFB34
 3316 0114 14000000 		.4byte	.LFE34-.LFB34
 3317 0118 00000000 		.4byte	.LFB35
 3318 011c 0C000000 		.4byte	.LFE35-.LFB35
 3319 0120 00000000 		.4byte	.LFB0
 3320 0124 4C000000 		.4byte	.LFE0-.LFB0
 3321 0128 00000000 		.4byte	.LFB2
 3322 012c 20000000 		.4byte	.LFE2-.LFB2
 3323 0130 00000000 		.4byte	.LFB36
 3324 0134 0C000000 		.4byte	.LFE36-.LFB36
 3325 0138 00000000 		.4byte	.LFB37
 3326 013c 0C000000 		.4byte	.LFE37-.LFB37
 3327 0140 00000000 		.4byte	.LFB38
 3328 0144 0C000000 		.4byte	.LFE38-.LFB38
 3329 0148 00000000 		.4byte	.LFB39
 3330 014c 0C000000 		.4byte	.LFE39-.LFB39
 3331 0150 00000000 		.4byte	0
 3332 0154 00000000 		.4byte	0
 3333              		.section	.debug_ranges,"",%progbits
 3334              	.Ldebug_ranges0:
 3335 0000 00000000 		.4byte	.LFB3
 3336 0004 1C000000 		.4byte	.LFE3
 3337 0008 00000000 		.4byte	.LFB4
 3338 000c 28000000 		.4byte	.LFE4
 3339 0010 00000000 		.4byte	.LFB5
 3340 0014 28000000 		.4byte	.LFE5
 3341 0018 00000000 		.4byte	.LFB6
 3342 001c 28000000 		.4byte	.LFE6
 3343 0020 00000000 		.4byte	.LFB7
 3344 0024 2C000000 		.4byte	.LFE7
 3345 0028 00000000 		.4byte	.LFB8
 3346 002c 10000000 		.4byte	.LFE8
 3347 0030 00000000 		.4byte	.LFB9
 3348 0034 28000000 		.4byte	.LFE9
 3349 0038 00000000 		.4byte	.LFB10
 3350 003c 28000000 		.4byte	.LFE10
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 85


 3351 0040 00000000 		.4byte	.LFB11
 3352 0044 2C000000 		.4byte	.LFE11
 3353 0048 00000000 		.4byte	.LFB12
 3354 004c 28000000 		.4byte	.LFE12
 3355 0050 00000000 		.4byte	.LFB13
 3356 0054 10000000 		.4byte	.LFE13
 3357 0058 00000000 		.4byte	.LFB14
 3358 005c 10000000 		.4byte	.LFE14
 3359 0060 00000000 		.4byte	.LFB15
 3360 0064 28000000 		.4byte	.LFE15
 3361 0068 00000000 		.4byte	.LFB16
 3362 006c 10000000 		.4byte	.LFE16
 3363 0070 00000000 		.4byte	.LFB17
 3364 0074 10000000 		.4byte	.LFE17
 3365 0078 00000000 		.4byte	.LFB18
 3366 007c 24000000 		.4byte	.LFE18
 3367 0080 00000000 		.4byte	.LFB19
 3368 0084 10000000 		.4byte	.LFE19
 3369 0088 00000000 		.4byte	.LFB20
 3370 008c 10000000 		.4byte	.LFE20
 3371 0090 00000000 		.4byte	.LFB21
 3372 0094 28000000 		.4byte	.LFE21
 3373 0098 00000000 		.4byte	.LFB22
 3374 009c 10000000 		.4byte	.LFE22
 3375 00a0 00000000 		.4byte	.LFB23
 3376 00a4 10000000 		.4byte	.LFE23
 3377 00a8 00000000 		.4byte	.LFB24
 3378 00ac 10000000 		.4byte	.LFE24
 3379 00b0 00000000 		.4byte	.LFB25
 3380 00b4 10000000 		.4byte	.LFE25
 3381 00b8 00000000 		.4byte	.LFB26
 3382 00bc 10000000 		.4byte	.LFE26
 3383 00c0 00000000 		.4byte	.LFB27
 3384 00c4 10000000 		.4byte	.LFE27
 3385 00c8 00000000 		.4byte	.LFB28
 3386 00cc 24000000 		.4byte	.LFE28
 3387 00d0 00000000 		.4byte	.LFB29
 3388 00d4 24000000 		.4byte	.LFE29
 3389 00d8 00000000 		.4byte	.LFB30
 3390 00dc 28000000 		.4byte	.LFE30
 3391 00e0 00000000 		.4byte	.LFB31
 3392 00e4 24000000 		.4byte	.LFE31
 3393 00e8 00000000 		.4byte	.LFB32
 3394 00ec 24000000 		.4byte	.LFE32
 3395 00f0 00000000 		.4byte	.LFB33
 3396 00f4 1C000000 		.4byte	.LFE33
 3397 00f8 00000000 		.4byte	.LFB1
 3398 00fc 24000000 		.4byte	.LFE1
 3399 0100 00000000 		.4byte	.LFB34
 3400 0104 14000000 		.4byte	.LFE34
 3401 0108 00000000 		.4byte	.LFB35
 3402 010c 0C000000 		.4byte	.LFE35
 3403 0110 00000000 		.4byte	.LFB0
 3404 0114 4C000000 		.4byte	.LFE0
 3405 0118 00000000 		.4byte	.LFB2
 3406 011c 20000000 		.4byte	.LFE2
 3407 0120 00000000 		.4byte	.LFB36
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 86


 3408 0124 0C000000 		.4byte	.LFE36
 3409 0128 00000000 		.4byte	.LFB37
 3410 012c 0C000000 		.4byte	.LFE37
 3411 0130 00000000 		.4byte	.LFB38
 3412 0134 0C000000 		.4byte	.LFE38
 3413 0138 00000000 		.4byte	.LFB39
 3414 013c 0C000000 		.4byte	.LFE39
 3415 0140 00000000 		.4byte	0
 3416 0144 00000000 		.4byte	0
 3417              		.section	.debug_line,"",%progbits
 3418              	.Ldebug_line0:
 3419 0000 7D030000 		.section	.debug_str,"MS",%progbits,1
 3419      02005000 
 3419      00000201 
 3419      FB0E0D00 
 3419      01010101 
 3420              	.LASF72:
 3421 0000 52656450 		.ascii	"RedPWM_GetInterruptSourceMasked\000"
 3421      574D5F47 
 3421      6574496E 
 3421      74657272 
 3421      75707453 
 3422              	.LASF37:
 3423 0020 636F756E 		.ascii	"count\000"
 3423      7400
 3424              	.LASF81:
 3425 0026 43794578 		.ascii	"CyExitCriticalSection\000"
 3425      69744372 
 3425      69746963 
 3425      616C5365 
 3425      6374696F 
 3426              	.LASF19:
 3427 003c 52656450 		.ascii	"RedPWM_SetQDMode\000"
 3427      574D5F53 
 3427      65745144 
 3427      4D6F6465 
 3427      00
 3428              	.LASF79:
 3429 004d 52656450 		.ascii	"RedPWM_initVar\000"
 3429      574D5F69 
 3429      6E697456 
 3429      617200
 3430              	.LASF70:
 3431 005c 52656450 		.ascii	"RedPWM_Init\000"
 3431      574D5F49 
 3431      6E697400 
 3432              	.LASF41:
 3433 0068 70657269 		.ascii	"period\000"
 3433      6F6400
 3434              	.LASF7:
 3435 006f 6C6F6E67 		.ascii	"long long unsigned int\000"
 3435      206C6F6E 
 3435      6720756E 
 3435      7369676E 
 3435      65642069 
 3436              	.LASF36:
 3437 0086 52656450 		.ascii	"RedPWM_WriteCounter\000"
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 87


 3437      574D5F57 
 3437      72697465 
 3437      436F756E 
 3437      74657200 
 3438              	.LASF58:
 3439 009a 52656450 		.ascii	"RedPWM_SetCaptureMode\000"
 3439      574D5F53 
 3439      65744361 
 3439      70747572 
 3439      654D6F64 
 3440              	.LASF21:
 3441 00b0 71644D6F 		.ascii	"qdMode\000"
 3441      646500
 3442              	.LASF6:
 3443 00b7 6C6F6E67 		.ascii	"long long int\000"
 3443      206C6F6E 
 3443      6720696E 
 3443      7400
 3444              	.LASF0:
 3445 00c5 7369676E 		.ascii	"signed char\000"
 3445      65642063 
 3445      68617200 
 3446              	.LASF57:
 3447 00d1 52656450 		.ascii	"RedPWM_ReadCaptureBuf\000"
 3447      574D5F52 
 3447      65616443 
 3447      61707475 
 3447      72654275 
 3448              	.LASF17:
 3449 00e7 52656450 		.ascii	"RedPWM_SetMode\000"
 3449      574D5F53 
 3449      65744D6F 
 3449      646500
 3450              	.LASF62:
 3451 00f6 52656450 		.ascii	"RedPWM_SetStopMode\000"
 3451      574D5F53 
 3451      65745374 
 3451      6F704D6F 
 3451      646500
 3452              	.LASF4:
 3453 0109 6C6F6E67 		.ascii	"long int\000"
 3453      20696E74 
 3453      00
 3454              	.LASF66:
 3455 0112 52656450 		.ascii	"RedPWM_Enable\000"
 3455      574D5F45 
 3455      6E61626C 
 3455      6500
 3456              	.LASF9:
 3457 0120 75696E74 		.ascii	"uint8\000"
 3457      3800
 3458              	.LASF34:
 3459 0126 52656450 		.ascii	"RedPWM_SetPWMInvert\000"
 3459      574D5F53 
 3459      65745057 
 3459      4D496E76 
 3459      65727400 
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 88


 3460              	.LASF12:
 3461 013a 646F7562 		.ascii	"double\000"
 3461      6C6500
 3462              	.LASF44:
 3463 0141 52656450 		.ascii	"RedPWM_SetCompareSwap\000"
 3463      574D5F53 
 3463      6574436F 
 3463      6D706172 
 3463      65537761 
 3464              	.LASF61:
 3465 0157 52656450 		.ascii	"RedPWM_SetStartMode\000"
 3465      574D5F53 
 3465      65745374 
 3465      6172744D 
 3465      6F646500 
 3466              	.LASF10:
 3467 016b 75696E74 		.ascii	"uint32\000"
 3467      333200
 3468              	.LASF59:
 3469 0172 74726967 		.ascii	"triggerMode\000"
 3469      6765724D 
 3469      6F646500 
 3470              	.LASF35:
 3471 017e 6D61736B 		.ascii	"mask\000"
 3471      00
 3472              	.LASF33:
 3473 0183 64656164 		.ascii	"deadTime\000"
 3473      54696D65 
 3473      00
 3474              	.LASF8:
 3475 018c 756E7369 		.ascii	"unsigned int\000"
 3475      676E6564 
 3475      20696E74 
 3475      00
 3476              	.LASF28:
 3477 0199 52656450 		.ascii	"RedPWM_SetPWMSyncKill\000"
 3477      574D5F53 
 3477      65745057 
 3477      4D53796E 
 3477      634B696C 
 3478              	.LASF24:
 3479 01af 52656450 		.ascii	"RedPWM_SetOneShot\000"
 3479      574D5F53 
 3479      65744F6E 
 3479      6553686F 
 3479      7400
 3480              	.LASF65:
 3481 01c1 636F6D6D 		.ascii	"command\000"
 3481      616E6400 
 3482              	.LASF5:
 3483 01c9 6C6F6E67 		.ascii	"long unsigned int\000"
 3483      20756E73 
 3483      69676E65 
 3483      6420696E 
 3483      7400
 3484              	.LASF27:
 3485 01db 6D6F6465 		.ascii	"modeMask\000"
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 89


 3485      4D61736B 
 3485      00
 3486              	.LASF68:
 3487 01e4 52656450 		.ascii	"RedPWM_SetInterruptMode\000"
 3487      574D5F53 
 3487      6574496E 
 3487      74657272 
 3487      7570744D 
 3488              	.LASF80:
 3489 01fc 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3489      74657243 
 3489      72697469 
 3489      63616C53 
 3489      65637469 
 3490              	.LASF67:
 3491 0213 52656450 		.ascii	"RedPWM_ReadStatus\000"
 3491      574D5F52 
 3491      65616453 
 3491      74617475 
 3491      7300
 3492              	.LASF3:
 3493 0225 73686F72 		.ascii	"short unsigned int\000"
 3493      7420756E 
 3493      7369676E 
 3493      65642069 
 3493      6E7400
 3494              	.LASF22:
 3495 0238 52656450 		.ascii	"RedPWM_SetPrescaler\000"
 3495      574D5F53 
 3495      65745072 
 3495      65736361 
 3495      6C657200 
 3496              	.LASF25:
 3497 024c 6F6E6553 		.ascii	"oneShotEnable\000"
 3497      686F7445 
 3497      6E61626C 
 3497      6500
 3498              	.LASF73:
 3499 025a 52656450 		.ascii	"RedPWM_GetInterruptSource\000"
 3499      574D5F47 
 3499      6574496E 
 3499      74657272 
 3499      75707453 
 3500              	.LASF64:
 3501 0274 52656450 		.ascii	"RedPWM_TriggerCommand\000"
 3501      574D5F54 
 3501      72696767 
 3501      6572436F 
 3501      6D6D616E 
 3502              	.LASF74:
 3503 028a 52656450 		.ascii	"RedPWM_ClearInterrupt\000"
 3503      574D5F43 
 3503      6C656172 
 3503      496E7465 
 3503      72727570 
 3504              	.LASF14:
 3505 02a0 72656733 		.ascii	"reg32\000"
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 90


 3505      3200
 3506              	.LASF15:
 3507 02a6 73697A65 		.ascii	"sizetype\000"
 3507      74797065 
 3507      00
 3508              	.LASF29:
 3509 02af 73796E63 		.ascii	"syncKillEnable\000"
 3509      4B696C6C 
 3509      456E6162 
 3509      6C6500
 3510              	.LASF55:
 3511 02be 52656450 		.ascii	"RedPWM_ReadCompareBuf\000"
 3511      574D5F52 
 3511      65616443 
 3511      6F6D7061 
 3511      72654275 
 3512              	.LASF51:
 3513 02d4 636F6D70 		.ascii	"compare\000"
 3513      61726500 
 3514              	.LASF76:
 3515 02dc 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3515      4320342E 
 3515      392E3320 
 3515      32303135 
 3515      30333033 
 3516 030f 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 3516      20726576 
 3516      6973696F 
 3516      6E203232 
 3516      31323230 
 3517 0342 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3517      66756E63 
 3517      74696F6E 
 3517      2D736563 
 3517      74696F6E 
 3518              	.LASF26:
 3519 036a 52656450 		.ascii	"RedPWM_SetPWMMode\000"
 3519      574D5F53 
 3519      65745057 
 3519      4D4D6F64 
 3519      6500
 3520              	.LASF43:
 3521 037c 52656450 		.ascii	"RedPWM_ReadPeriod\000"
 3521      574D5F52 
 3521      65616450 
 3521      6572696F 
 3521      6400
 3522              	.LASF11:
 3523 038e 666C6F61 		.ascii	"float\000"
 3523      7400
 3524              	.LASF23:
 3525 0394 70726573 		.ascii	"prescaler\000"
 3525      63616C65 
 3525      7200
 3526              	.LASF77:
 3527 039e 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\RedPWM.c\000"
 3527      6E657261 
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 91


 3527      7465645F 
 3527      536F7572 
 3527      63655C50 
 3528              	.LASF40:
 3529 03c0 52656450 		.ascii	"RedPWM_WritePeriod\000"
 3529      574D5F57 
 3529      72697465 
 3529      50657269 
 3529      6F6400
 3530              	.LASF32:
 3531 03d3 52656450 		.ascii	"RedPWM_SetPWMDeadTime\000"
 3531      574D5F53 
 3531      65745057 
 3531      4D446561 
 3531      6454696D 
 3532              	.LASF78:
 3533 03e9 433A5C45 		.ascii	"C:\\E3PRJ3-Gruppe1\\PSoC\\Sensor-PSoC.cydsn\000"
 3533      3350524A 
 3533      332D4772 
 3533      75707065 
 3533      315C5053 
 3534              	.LASF1:
 3535 0412 756E7369 		.ascii	"unsigned char\000"
 3535      676E6564 
 3535      20636861 
 3535      7200
 3536              	.LASF16:
 3537 0420 52656450 		.ascii	"RedPWM_Stop\000"
 3537      574D5F53 
 3537      746F7000 
 3538              	.LASF31:
 3539 042c 73746F70 		.ascii	"stopOnKillEnable\000"
 3539      4F6E4B69 
 3539      6C6C456E 
 3539      61626C65 
 3539      00
 3540              	.LASF2:
 3541 043d 73686F72 		.ascii	"short int\000"
 3541      7420696E 
 3541      7400
 3542              	.LASF69:
 3543 0447 696E7465 		.ascii	"interruptMask\000"
 3543      72727570 
 3543      744D6173 
 3543      6B00
 3544              	.LASF49:
 3545 0455 52656450 		.ascii	"RedPWM_SetPeriodSwap\000"
 3545      574D5F53 
 3545      65745065 
 3545      72696F64 
 3545      53776170 
 3546              	.LASF46:
 3547 046a 52656450 		.ascii	"RedPWM_WritePeriodBuf\000"
 3547      574D5F57 
 3547      72697465 
 3547      50657269 
 3547      6F644275 
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 92


 3548              	.LASF75:
 3549 0480 52656450 		.ascii	"RedPWM_SetInterrupt\000"
 3549      574D5F53 
 3549      6574496E 
 3549      74657272 
 3549      75707400 
 3550              	.LASF56:
 3551 0494 52656450 		.ascii	"RedPWM_ReadCapture\000"
 3551      574D5F52 
 3551      65616443 
 3551      61707475 
 3551      726500
 3552              	.LASF13:
 3553 04a7 63686172 		.ascii	"char\000"
 3553      00
 3554              	.LASF20:
 3555 04ac 6D6F6465 		.ascii	"mode\000"
 3555      00
 3556              	.LASF39:
 3557 04b1 636F756E 		.ascii	"counterMode\000"
 3557      7465724D 
 3557      6F646500 
 3558              	.LASF30:
 3559 04bd 52656450 		.ascii	"RedPWM_SetPWMStopOnKill\000"
 3559      574D5F53 
 3559      65745057 
 3559      4D53746F 
 3559      704F6E4B 
 3560              	.LASF54:
 3561 04d5 636F6D70 		.ascii	"compareBuf\000"
 3561      61726542 
 3561      756600
 3562              	.LASF52:
 3563 04e0 52656450 		.ascii	"RedPWM_ReadCompare\000"
 3563      574D5F52 
 3563      65616443 
 3563      6F6D7061 
 3563      726500
 3564              	.LASF18:
 3565 04f3 656E6162 		.ascii	"enableInterrupts\000"
 3565      6C65496E 
 3565      74657272 
 3565      75707473 
 3565      00
 3566              	.LASF60:
 3567 0504 52656450 		.ascii	"RedPWM_SetReloadMode\000"
 3567      574D5F53 
 3567      65745265 
 3567      6C6F6164 
 3567      4D6F6465 
 3568              	.LASF63:
 3569 0519 52656450 		.ascii	"RedPWM_SetCountMode\000"
 3569      574D5F53 
 3569      6574436F 
 3569      756E744D 
 3569      6F646500 
 3570              	.LASF71:
ARM GAS  C:\Users\JEPPES~1\AppData\Local\Temp\ccS3SSqU.s 			page 93


 3571 052d 52656450 		.ascii	"RedPWM_Start\000"
 3571      574D5F53 
 3571      74617274 
 3571      00
 3572              	.LASF48:
 3573 053a 52656450 		.ascii	"RedPWM_ReadPeriodBuf\000"
 3573      574D5F52 
 3573      65616450 
 3573      6572696F 
 3573      64427566 
 3574              	.LASF45:
 3575 054f 73776170 		.ascii	"swapEnable\000"
 3575      456E6162 
 3575      6C6500
 3576              	.LASF53:
 3577 055a 52656450 		.ascii	"RedPWM_WriteCompareBuf\000"
 3577      574D5F57 
 3577      72697465 
 3577      436F6D70 
 3577      61726542 
 3578              	.LASF50:
 3579 0571 52656450 		.ascii	"RedPWM_WriteCompare\000"
 3579      574D5F57 
 3579      72697465 
 3579      436F6D70 
 3579      61726500 
 3580              	.LASF42:
 3581 0585 52656450 		.ascii	"RedPWM_ReadCounter\000"
 3581      574D5F52 
 3581      65616443 
 3581      6F756E74 
 3581      657200
 3582              	.LASF38:
 3583 0598 52656450 		.ascii	"RedPWM_SetCounterMode\000"
 3583      574D5F53 
 3583      6574436F 
 3583      756E7465 
 3583      724D6F64 
 3584              	.LASF47:
 3585 05ae 70657269 		.ascii	"periodBuf\000"
 3585      6F644275 
 3585      6600
 3586              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
